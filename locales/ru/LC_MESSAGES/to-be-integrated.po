# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-31 15:35+0100\n"
"PO-Revision-Date: 2022-01-06 21:20+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language: ru\n"
"Language-Team: Russian <https://translate.nitrokey.com/projects/nitrokey-"
"documentation/documentation-to-be-integrated/ru/>\n"
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../to-be-integrated.rst:1
msgid "# pro"
msgstr "# pro"

#: ../to-be-integrated.rst:5
msgid "PKCS#11 Driver"
msgstr "Драйвер PKCS#11"

#: ../to-be-integrated.rst:7
msgid ""
"If you want to use S/MIME email encryption with Thunderbird, to use "
"TrueCrypt/VeraCrypt, certificate-based SSL authentication with Firefox, "
"PuTTY/KiTTY, OpenSSH, OpenSSL, or any other PKCS#11 compatible software, "
"you should install OpenSC."
msgstr ""
"Если вы хотите использовать S/MIME шифрование электронной почты в "
"Thunderbird, использовать TrueCrypt/VeraCrypt, SSL аутентификацию на "
"основе сертификатов в Firefox, PuTTY/KiTTY, OpenSSH, OpenSSL или любое "
"другое PKCS#11 совместимое программное обеспечение, вы должны установить "
"OpenSC."

#: ../to-be-integrated.rst:9
msgid ""
"Note that a Nitrokey initialized with OpenSC doesn't work with "
"GnuPG/OpenPGP. But the other way around works fine. If you want to use "
"Nitrokey with both GnuPG and PKCS#11, generate the keys with GnuPG."
msgstr ""
"Обратите внимание, что Nitrokey, инициализированный с помощью OpenSC, не "
"работает с GnuPG/OpenPGP. Но в обратном случае все работает нормально. "
"Если вы хотите использовать Nitrokey и с GnuPG, и с PKCS#11, генерируйте "
"ключи в GnuPG."

#: ../to-be-integrated.rst:11
msgid ""
"Don't use PKCS#11 in parallel with GnuPG because both may interfere and "
"unexpected issues may result. (There is another promising project scd-"
"pkcs11 in development which may overcome this limitation eventually. "
"Currently it's limit to the authentication certificate and not widely "
"tested yet.)"
msgstr ""
"Не используйте PKCS#11 параллельно с GnuPG, так как оба могут мешать друг"
" другу, что может привести к неожиданным проблемам. (В разработке "
"находится другой многообещающий проект scd-pkcs11, который может "
"преодолеть это ограничение. В настоящее время он ограничен сертификатом "
"аутентификации и еще не прошел широкое тестирование)."

#: ../to-be-integrated.rst:13
msgid ""
"Instructions, how to create a valid X.509 certificate with Nitrokey (1, "
"2, 3). These are general instructions how to use X.509 certificates. "
"Alternative PKCS#11 Driver:"
msgstr ""
"Инструкции, как создать действительный сертификат X.509 с помощью "
"Nitrokey (1, 2, 3). Это общие инструкции по использованию сертификатов "
"X.509. Альтернативный драйвер PKCS#11:"

#: ../to-be-integrated.rst:16
msgid "The recommended PKCS#11 driver is OpenSC."
msgstr "Рекомендуемый драйвер PKCS#11 - OpenSC."

#: ../to-be-integrated.rst:18
msgid "Windows Mini Driver"
msgstr "Драйвер для Windows Mini"

#: ../to-be-integrated.rst:20
msgid ""
"This Mini Driver allows to integrate Nitrokey with Window's certificate "
"store. Subsequently all applications which use this certificate storage "
"can be used with Nitrokey (e.g. Internet Explorer, Google Chrome web "
"browser, Windows Login). To install the driver, you may need to allow the"
" installation of unsigned drivers first. Aloaha"
msgstr ""
"Этот мини-драйвер позволяет интегрировать Nitrokey с хранилищем "
"сертификатов Window's. Впоследствии все приложения, использующие это "
"хранилище сертификатов, могут быть использованы с Nitrokey (например, "
"Internet Explorer, веб-браузер Google Chrome, Windows Login). Для "
"установки драйвера может потребоваться сначала разрешить установку "
"неподписанных драйверов. Aloaha"

#: ../to-be-integrated.rst:23
msgid ""
"All applications of Aloaha are working with the Nitrokey. This includes a"
" middleware to integrate Nitrokey with other PKCS#11 based applications "
"and with Windows as well as applications to encrypt and sign PDFs and the"
" hard disk."
msgstr ""
"Все приложения Aloaha работают с Nitrokey. Сюда входит промежуточное ПО "
"для интеграции Nitrokey с другими приложениями на основе PKCS#11 и с "
"Windows, а также приложения для шифрования и подписи PDF-файлов и "
"жесткого диска."

#: ../to-be-integrated.rst:25
msgid "Alternative PKCS#11 Driver:"
msgstr "Альтернативный драйвер PKCS#11:"

#: ../to-be-integrated.rst:27
msgid ""
"The recommended PKCS#11 driver is OpenSC. Alternatively, you could use "
"Peter Koch's PKCS#11 driver which has the following limitations:"
msgstr ""
"Рекомендуемым драйвером PKCS#11 является OpenSC. В качестве альтернативы "
"можно использовать Peter Koch's PKCS#11 driver, который имеет следующие "
"ограничения:"

#: ../to-be-integrated.rst:29
msgid ""
"No import of existing X.509 certificates. (Instead, keys have to be "
"generated on the Nitrokey) The Linux version does not allow to generate "
"keys. Modification of the password/PIN under Linux is not possible."
msgstr ""
"Нет импорта существующих сертификатов X.509. (Вместо этого ключи должны "
"быть сгенерированы на Nitrokey) Версия Linux не позволяет генерировать "
"ключи. Модификация пароля/PIN-кода под Linux невозможна."

#: ../to-be-integrated.rst:33
msgid "p11-glue"
msgstr "p11-клей"

#: ../to-be-integrated.rst:35
msgid ""
"P11-glue uses PKCS#11 as glue between crypto libraries and security "
"applications on the open source desktop. Articles in German"
msgstr ""
"P11-glue использует PKCS#11 как клей между криптобиблиотеками и "
"приложениями безопасности на рабочем столе с открытым исходным кодом. "
"Статьи на немецком языке"

#: ../to-be-integrated.rst:38
msgid ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."
msgstr ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."

#: ../to-be-integrated.rst:44
msgid "**Q:** How can I login into Windows?"
msgstr "**Вопрос:** Как войти в Windows?"

#: ../to-be-integrated.rst:44
msgid ""
"To access Nitrokey devices read-only, download and install this Mini "
"Driver (CSP). If you are using Windows Server you may need to disable the"
" driver signature verification before being able to install the driver. "
"Note that the Mini Driver for Nitrokey Pro may not work yet for write "
"mode."
msgstr ""
"Чтобы получить доступ к устройствам Nitrokey только для чтения, загрузите"
" и установите этот мини-драйвер (CSP). Если вы используете Windows "
"Server, вам может потребоваться отключить проверку подписи драйвера, "
"прежде чем вы сможете установить драйвер. Обратите внимание, что "
"мини-драйвер для Nitrokey Pro может пока не работать в режиме записи."

#: ../to-be-integrated.rst:46
msgid "There exist different ways to use a Nitrokey to logon on Windows:"
msgstr ""
"Существуют различные способы использования Nitrokey для входа в систему "
"Windows:"

#: ../to-be-integrated.rst:48
msgid ""
"Login on stand alone Windows computers based on EIDAuthenticate. "
"Alternatively install OpenSC and use Aloaha Smart Login's PKCS#11 "
"Credentials. Login on Windows domain computers using MS Active Directory "
"based OpenPGP-CSP minidriver for Nitrokey Storage 2 Nitrokey Pro 2 Login "
"on Windows domain computers using MS Active Directory based on Smart "
"Policy for other Nitrokey devices."
msgstr ""
"Вход в систему на отдельных компьютерах Windows на основе "
"EIDAuthenticate. В качестве альтернативы установите OpenSC и используйте "
"Aloaha Smart Login's PKCS#11 Credentials. Вход на компьютерах домена "
"Windows с использованием MS Active Directory на основе OpenPGP-CSP "
"мини-драйвера для Nitrokey Storage 2 Nitrokey Pro 2 Вход на компьютерах "
"домена Windows с использованием MS Active Directory на основе Smart "
"Policy для других устройств Nitrokey."

#: ../to-be-integrated.rst:53
msgid "**Q:** How can I login into Linux? Linux Login with PAM"
msgstr "**Вопрос:** Как войти в систему Linux? Вход в Linux с помощью PAM"

#: ../to-be-integrated.rst:56
msgid "You have two options: pam_p11 or Poldi."
msgstr "У вас есть два варианта: pam_p11 или Poldi."

#: ../to-be-integrated.rst:58
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on "
"S/MIME certificates. Please have a look at the documentation for more "
"information."
msgstr ""
"Решение с pam_p11 является более сложным и основано на сертификатах "
"S/MIME. Пожалуйста, ознакомьтесь с документацией для получения "
"дополнительной информации."

#: ../to-be-integrated.rst:60
msgid ""
"Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication with "
"RSA keys (see Troubleshooting for information on ECC keys). Besides the "
"installation of poldi (e.g. 'sudo apt-get install libpam-poldi' on "
"Ubuntu) the following steps are needed to get it working."
msgstr ""
"Poldi 0.4.1 безупречно работает с Nitrokey для аутентификации PAM с "
"ключами RSA (информацию о ключах ECC см. в разделе Устранение неполадок)."
" Помимо установки poldi (например, 'sudo apt-get install libpam-poldi' на"
" Ubuntu) для его работы необходимы следующие шаги."

#: ../to-be-integrated.rst:62
msgid ""
"It is necessary to already have keys generated on the Nitrokey, as the "
"authentication key is used by PAM."
msgstr ""
"Необходимо, чтобы на Nitrokey уже были сгенерированы ключи, поскольку "
"ключ аутентификации используется PAM."

#: ../to-be-integrated.rst:64
msgid ""
"At first you need to find out the \"Application ID\" of your Nitrokey. "
"You can use \"gpg --card-status | grep Application\" to find out what's "
"yours. It looks like 'D00600012401020000000000xxxxxxxx' or similiar. Now "
"you have to add a line to /etc/poldi/localdb/users which contains the "
"following information"
msgstr ""
"Сначала вам нужно узнать \"ID приложения\" вашего Nitrokey. Вы можете "
"использовать \"gpg --card-status | grep Application\", чтобы узнать, "
"какой у вас. Это выглядит как 'D00600012401020000000000xxxxxxxxx' или "
"похожее. Теперь вам нужно добавить строку в /etc/poldi/localdb/users, "
"которая содержит следующую информацию"

#: ../to-be-integrated.rst:66
msgid "<YourApplicationID> <YourUsername>"
msgstr "<YourApplicationID> <YourUsername>"

#: ../to-be-integrated.rst:68
msgid ""
"This could look like 'D00600012401020000000000xxxxxxxx nitrokeyuser'. Now"
" dump the public key from the Nitrokey into poldi local db:"
msgstr ""
"Это может выглядеть как 'D00600012401020000000000xxxxxxx nitrokeyuser'. "
"Теперь сбросьте открытый ключ из Nitrokey в локальную базу данных poldi:"

#: ../to-be-integrated.rst:70
msgid ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye'"
msgstr ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye'"

#: ../to-be-integrated.rst:72
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick!"
msgstr ""
"Пожалуйста, имейте в виду, что в строке выше вы должны вставить ID вашей "
"заявки вместе с ID вашей палочки!"

#: ../to-be-integrated.rst:74
msgid ""
"Then you have to configure PAM. Just add \"auth sufficient pam_poldi.so\""
" to pam configuration files according to your needs:"
msgstr ""
"Затем вам нужно настроить PAM. Просто добавьте \"auth sufficient "
"pam_poldi.so\" в конфигурационные файлы pam в соответствии с вашими "
"потребностями:"

#: ../to-be-integrated.rst:76
msgid ""
"/etc/pam.d/common-auth for graphical user login /etc/pam.d/login for "
"console login /etc/pam.d/sudo for sudo authentication /etc/pam.d/gnome-"
"screensaver for login back from a locked screen etc."
msgstr ""
"/etc/pam.d/common-auth для графического входа пользователя "
"/etc/pam.d/login для входа в консоль /etc/pam.d/sudo для аутентификации "
"sudo /etc/pam.d/gnome-screensaver для возврата входа с заблокированного "
"экрана и т.д."

#: ../to-be-integrated.rst:82
msgid ""
"Note: Pam is dangerous to play around with, so make sure you have a way "
"of accessing the machine if you break authentication completely. Remember"
" that booting into rescue mode from Grub requires a root password, so "
"keep that or a live CD which can read your filesystems to hand."
msgstr ""
"Примечание: с Pam опасно играть, поэтому убедитесь, что у вас есть способ"
" получить доступ к машине, если вы полностью нарушите аутентификацию. "
"Помните, что для загрузки в режим спасения из Grub требуется пароль root,"
" поэтому держите его или live CD, который может читать ваши файловые "
"системы, под рукой."

#: ../to-be-integrated.rst:84
msgid ""
"Here you find further instructions (in German, partially outdated). "
"Troubleshooting"
msgstr ""
"Здесь вы найдете дальнейшие инструкции (на немецком языке, частично "
"устаревшие). Устранение неполадок"

#: ../to-be-integrated.rst:87
msgid ""
"If you get an error similar to 'ERR 100663414 Invalid ID <SCD>' you "
"should try instead"
msgstr ""
"Если вы получите ошибку, подобную 'ERR 100663414 Invalid ID <SCD>', вам "
"следует попробовать вместо этого"

#: ../to-be-integrated.rst:89
msgid ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"
msgstr ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"

#: ../to-be-integrated.rst:91
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick! ECC Keys Unfortunately, poldi has no "
"support for ECC keys yet. But there is a patch for ECC keys used with "
"Nitrokey Start. This is already included in the master branch of the "
"poldi development repository and thus will be released in a newer version"
" eventually. In the meantime the only option is to build poldi from "
"source."
msgstr ""
"Пожалуйста, имейте в виду, что в строке выше вы должны вставить свой ID "
"приложения вместе с ID вашей флешки! Ключи ECC К сожалению, в poldi пока "
"нет поддержки ключей ECC. Но есть патч для ключей ECC, используемых с "
"Nitrokey Start. Он уже включен в мастер-ветку репозитория разработки "
"poldi и, следовательно, со временем будет выпущен в новой версии. Пока же"
" единственным вариантом является сборка poldi из исходного кода."

#: ../to-be-integrated.rst:97
msgid "**Q:** How can I login with One Time Passwords?"
msgstr "**Вопрос:** Как я могу войти в систему с помощью одноразовых паролей?"

#: ../to-be-integrated.rst:97
msgid ""
"One-Time-Passwords (OTP) are used for secure login to websites and local "
"applications."
msgstr ""
"Одноразовые пароли (OTP) используются для безопасного входа на веб-сайты "
"и в локальные приложения."

#: ../to-be-integrated.rst:99
msgid "Two OTP modes exist:"
msgstr "Существует два режима OTP:"

#: ../to-be-integrated.rst:101
msgid ""
"Time-based One-time Passwords (TOTP) is widely used for websites. If "
"unsure, assume you are using this mode. HMAC-based One-time Passwords "
"(HOTP) is used for local applications and computer logins."
msgstr ""
"Одноразовые пароли на основе времени (TOTP) широко используются для "
"веб-сайтов. Если вы не уверены, считайте, что вы используете этот режим. "
"Одноразовые пароли на основе HMAC (HOTP) используются для локальных "
"приложений и входа в компьютер."

#: ../to-be-integrated.rst:104
msgid ""
"To use One-Time-Passwords with your Nitrokey Pro or Nitrokey Storage, you"
" need to download and install the latest Nitrokey App. Time-based One-"
"time Passwords - TOTP"
msgstr ""
"Чтобы использовать одноразовые пароли с Nitrokey Pro или Nitrokey "
"Storage, необходимо загрузить и установить последнюю версию приложения "
"Nitrokey. Одноразовые пароли на основе времени - TOTP"

#: ../to-be-integrated.rst:107
msgid ""
"For login to a Google account. For login to a Microsoft account. For "
"login to a Nextcloud account. Generic instructions for all other "
"services."
msgstr ""
"Для входа в учетную запись Google. Для входа в учетную запись Microsoft. "
"Для входа в учетную запись Nextcloud. Общие инструкции для всех остальных"
" служб."

#: ../to-be-integrated.rst:112
msgid "**Q:** How can I use the Nitrokey Pro with Android?"
msgstr "**Вопрос:** Как использовать Nitrokey Pro с Android?"

#: ../to-be-integrated.rst:114
msgid ""
"It is possible to use the Nitrokey on an Android devices in combination "
"with OpenKeychain. This enables one to encrypt/decrypt E-Mails or files "
"via OpenPGP."
msgstr ""
"Nitrokey можно использовать на устройствах Android в сочетании с "
"OpenKeychain. Это позволяет шифровать/дешифровать электронную почту или "
"файлы через OpenPGP."

#: ../to-be-integrated.rst:116
msgid ""
"Cotech provides Android software with commercial support. Please have a "
"look there, if you like. The following instructions are based on "
"OpenKeychain."
msgstr ""
"Cotech предоставляет программное обеспечение для Android с коммерческой "
"поддержкой. Пожалуйста, загляните туда, если хотите. Следующие инструкции"
" основаны на OpenKeychain."

#: ../to-be-integrated.rst:118
msgid ""
"Tested with Nitrokey Start, Pro and Storage in combination with Android "
"7.1, OpenKeychain 4.5 and K9Mail 5.207. Prerequisites"
msgstr ""
"Протестировано с Nitrokey Start, Pro и Storage в сочетании с Android 7.1,"
" OpenKeychain 4.5 и K9Mail 5.207. Предварительные условия"

#: ../to-be-integrated.rst:121
msgid ""
"Android phone which is capable of USB OTG USB OTG cable to connect the "
"Nitrokey with your phone OpenKeychain installed on Device Public key "
"saved on the device or uploaded on a keyserver"
msgstr ""
"Телефон Android с поддержкой USB OTG Кабель USB OTG для подключения "
"Nitrokey к телефону OpenKeychain, установленный на устройстве Открытый "
"ключ, сохраненный на устройстве или загруженный на сервер ключей"

#: ../to-be-integrated.rst:126
msgid "First steps"
msgstr "Первые шаги"

#: ../to-be-integrated.rst:128
msgid ""
"To import the keys of the Nitrokey you should at first start the "
"OpenKeychain app. Then insert the Nitrokey with the USB OTG cable. "
"OpenKeychain starts a dialog to use the Nitrokey (you may have to accept "
"the usage of the key with OpenKeychain first). Now you can choose between"
" looking for public key on a keyserver or choosing the public key from "
"storage. After the public key got imported you have to tap on 'connect "
"key' to import a reference to the private key of the Nitrokey. That’s "
"basically it."
msgstr ""
"Для импорта ключей Nitrokey необходимо сначала запустить приложение "
"OpenKeychain. Затем вставьте Nitrokey с помощью кабеля USB OTG. "
"OpenKeychain запустит диалог для использования Nitrokey (возможно, "
"сначала вам придется принять использование ключа в OpenKeychain). Теперь "
"вы можете выбрать между поиском открытого ключа на сервере ключей и "
"выбором открытого ключа из хранилища. После импорта открытого ключа нужно"
" нажать 'подключить ключ', чтобы импортировать ссылку на закрытый ключ "
"Nitrokey. Вот, в принципе, и все."

#: ../to-be-integrated.rst:130
msgid ""
"In the case that no there are no keys on the Nitrokey yet, OpenKeychain "
"will help with the creation of a new key pair instead. Usage"
msgstr ""
"В случае, если на Nitrokey еще нет ключей, OpenKeychain поможет создать "
"новую пару ключей. Использование"

#: ../to-be-integrated.rst:133
msgid ""
"You can use all functions of OpenKeychain and Apps which make use of "
"OpenKeychain. Therefore you can just encrypt/decrypt messages or files by"
" hand using the app directly or for example you combine K9Mail with "
"OpenKeychain to decrypt your mails automatically. It is important to "
"choose the right key in the K9Mail account settings first."
msgstr ""
"Вы можете использовать все функции OpenKeychain и приложений, которые "
"используют OpenKeychain. Поэтому вы можете просто "
"шифровать/расшифровывать сообщения или файлы вручную, используя "
"непосредственно приложение, или, например, объединить K9Mail с "
"OpenKeychain для автоматического расшифровывания ваших писем. Важно "
"сначала выбрать правильный ключ в настройках учетной записи K9Mail."

#: ../to-be-integrated.rst:135
msgid ""
"Note that you may have to enable the on-screen keyboard in the android "
"settings to type the PIN as the system recognizes the Nitrokey as a "
"physical keyboard and therefore tries to hide the on-screen keyboard. Go "
"to 'Language and Input' > 'Current Keyboard' > 'Hardware show input "
"method'."
msgstr ""
"Обратите внимание, что для ввода PIN-кода может потребоваться включить "
"экранную клавиатуру в настройках android, так как система распознает "
"Nitrokey как физическую клавиатуру и поэтому пытается скрыть экранную "
"клавиатуру. Зайдите в 'Язык и ввод' > 'Текущая клавиатура' > 'Аппаратный "
"метод ввода'."

#: ../to-be-integrated.rst:138
msgid "**Q:** How can I use the Nitrokey Pro with Iphone?"
msgstr "**В:** Как я могу использовать Nitrokey Pro с Iphone?"

#: ../to-be-integrated.rst:139
msgid "Currently it is not possible"
msgstr "В настоящее время это невозможно"

#: ../to-be-integrated.rst:141
msgid "**Q:** How can I use the Nitrokey Pro with Ubuntu Phone?"
msgstr "**В:** Как я могу использовать Nitrokey Pro с Ubuntu Phone?"

#: ../to-be-integrated.rst:141
msgid ""
"There are instructions on gnupg.org about how to use a OpenPGP Card on a "
"UbuntuPhone which should work for the Nitrokey Start, Pro and Storage."
msgstr ""
"На сайте gnupg.org есть инструкции о том, как использовать OpenPGP Card "
"на UbuntuPhone, которые должны работать для Nitrokey Start, Pro и "
"Storage."

#: ../to-be-integrated.rst:143
msgid ""
"**Q:** How can I do Email encryption? There are two widely used standards"
" for email encryption. While OpenPGP/GnuPG is popular among individuals, "
"S/MIME/X.509 is mostly used by enterprises. If you are in doubt which one"
" to choose, you should use OpenPGP."
msgstr ""
"**Вопрос:** Как сделать шифрование электронной почты? Существует два "
"широко используемых стандарта для шифрования электронной почты. В то "
"время как OpenPGP/GnuPG популярен среди частных лиц, S/MIME/X.509 "
"используется в основном на предприятиях. Если вы сомневаетесь, какой из "
"них выбрать, лучше использовать OpenPGP."

#: ../to-be-integrated.rst:146
msgid ""
"instructions for using the OpenPGP standard with the Nitrokey "
"instructions for using S/MIME with the Nitrokey. Note: SMIME certificates"
" can be purchased cheaply from CERTUM and SSLTrust."
msgstr ""
"инструкции по использованию стандарта OpenPGP с Nitrokey инструкции по "
"использованию S/MIME с Nitrokey. Примечание: сертификаты SMIME можно "
"недорого приобрести в CERTUM и SSLTrust."

#: ../to-be-integrated.rst:149
msgid ""
"Please note, that it is currently advised to use either OpenPGP or S/MIME"
" encryption, but not both with the Nitrokey."
msgstr ""
"Обратите внимание, что в настоящее время рекомендуется использовать либо "
"OpenPGP, либо S/MIME шифрование, но не оба варианта с Nitrokey."

#: ../to-be-integrated.rst:151
msgid "To use a Nitrokey Storage with Thunderbird 78+, you can try this tutorial."
msgstr ""
"Чтобы использовать хранилище Nitrokey Storage с Thunderbird 78+, вы "
"можете воспользоваться этим руководством."

#: ../to-be-integrated.rst:153
msgid "**Q:** How can I do Hard Disk Encryption?"
msgstr "**В:** Как я могу сделать шифрование жесткого диска?"

#: ../to-be-integrated.rst:156
msgid ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (formerly "
"TrueCrypt)"
msgstr ""
"Для: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (ранее "
"TrueCrypt)"

#: ../to-be-integrated.rst:159
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey "
"Storage or Pro:"
msgstr ""
"VeraCrypt - это бесплатная программа шифрования дисков с открытым "
"исходным кодом для Windows, macOS и GNU/Linux. Она является преемником "
"TrueCrypt и поэтому рекомендуется к использованию, хотя следующие "
"инструкции применимы и к TrueCrypt. Выполните следующие шаги, чтобы "
"использовать программу с Nitrokey Storage или Pro:"

#: ../to-be-integrated.rst:161 ../to-be-integrated.rst:673
msgid ""
"Install OpenSC Choose the library in VeraCrypt under "
"Settings>Preferences>Security Token (location depends on system, e.g. "
"/usr/lib/opensc). Generate a 64 Byte key file via Tools>Keyfile "
"Generator. Now you should be able to import the generated key file via "
"Tools>Manage Security Token Keyfiles. You should choose the first Slot "
"([0] User PIN). The keyfile is then stored on the Nitrokey as 'Private "
"Data Object 1' (PrivDO1). After this you should wipe the original keyfile"
" on your Computer securely! Now you can use VeraCrypt with the Nitrokey: "
"Create a container, choose the keyfile on the device as an alternative to"
" a password."
msgstr ""
"Установите OpenSC Выберите библиотеку в VeraCrypt в разделе "
"Settings>Preferences>Security Token (расположение зависит от системы, "
"например, /usr/lib/opensc). Сгенерируйте 64-байтовый ключевой файл через "
"Tools>Keyfile Generator. Теперь вы должны иметь возможность импортировать"
" сгенерированный ключевой файл через Tools>Manage Security Token "
"Keyfiles. Вы должны выбрать первый слот ([0] User PIN). Затем ключевой "
"файл будет сохранен на Nitrokey как 'Private Data Object 1' (PrivDO1). "
"После этого вы должны надежно стереть оригинальный ключевой файл на вашем"
" Компьютере! Теперь вы можете использовать VeraCrypt с Nitrokey: создайте"
" контейнер, выберите ключевой файл на устройстве в качестве альтернативы "
"паролю."

#: ../to-be-integrated.rst:168
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the PIN."
msgstr ""
"Соображения безопасности: Обратите внимание, что VeraCrypt не использует "
"полную безопасность, которую обеспечивает Nitrokey (и смарт-карты в "
"целом). Вместо этого он хранит ключевой файл на Nitrokey, который "
"теоретически может быть украден компьютерным вирусом после того, как "
"пользователь введет PIN-код."

#: ../to-be-integrated.rst:170
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation."
msgstr ""
"Примечание: Aloaha Crypt основан на TrueCrypt/VeraCrypt, но без описанных"
" ограничений безопасности."

#: ../to-be-integrated.rst:173
msgid ""
"Hard Disk Encryption on Linux, Based on LUKS/dm-crypt Here are excellent "
"instructions how to use Nitrokey to encrypt your hard disk under Linux "
"with LUKS/dm-crypt. Other instruction."
msgstr ""
"Шифрование жесткого диска в Linux на основе LUKS/dm-crypt Вот отличные "
"инструкции по использованию Nitrokey для шифрования жесткого диска в "
"Linux с помощью LUKS/dm-crypt. Другая инструкция."

#: ../to-be-integrated.rst:176
msgid ""
"Purism has created a simple script to add the Nitrokey/LibremKey as a way"
" to unlock LUKS partitions (not tested by Nitrokey yet)."
msgstr ""
"Purism создал простой сценарий для добавления Nitrokey/LibremKey в "
"качестве способа разблокировки разделов LUKS (пока не протестировано "
"Nitrokey)."

#: ../to-be-integrated.rst:178
msgid ""
"This project aims to ease the use of LUKS with the Nitrokey Pro or "
"Storage based on the Password Safe (not tested by Nitrokey yet). A "
"description on how to use it on Gentoo can be found here."
msgstr ""
"Этот проект направлен на облегчение использования LUKS с Nitrokey Pro или"
" хранилищем на основе Password Safe (еще не протестирован Nitrokey). "
"Описание того, как использовать его на Gentoo, можно найти здесь."

#: ../to-be-integrated.rst:180
msgid ""
"For Arch Linux, see initramfs-scencrypt. Storage Encryption on Linux, "
"Based on EncFS"
msgstr ""
"Для Arch Linux смотрите initramfs-scencrypt. Шифрование хранилища в "
"Linux, основанное на EncFS"

#: ../to-be-integrated.rst:183
msgid ""
"Prerequisite: Please ensure that you installed the device driver, changed"
" the default PINs and generated or imported keys with GnuPG."
msgstr ""
"Необходимые условия: Убедитесь, что вы установили драйвер устройства, "
"изменили PIN-коды по умолчанию и сгенерировали или импортировали ключи с "
"помощью GnuPG."

#: ../to-be-integrated.rst:185
msgid ""
"An easy to use encrypted file system is EncFS, which is based on FUSE. "
"You may follow these steps to use it with very long passwords and "
"Nitrokey:"
msgstr ""
"Простой в использовании зашифрованной файловой системой является EncFS, "
"которая основана на FUSE. Вы можете выполнить следующие шаги, чтобы "
"использовать ее с очень длинными паролями и Nitrokey:"

#: ../to-be-integrated.rst:187
msgid "Initialization"
msgstr "Инициализация"

#: ../to-be-integrated.rst:189
msgid ""
"# Create a key file with random data: $ dd bs=64 count=1 if=/dev/urandom "
"of=keyfile"
msgstr ""
"# Создайте ключевой файл со случайными данными: $ dd bs=64 count=1 "
"if=/dev/urandom of=keyfile"

#: ../to-be-integrated.rst:192
msgid ""
"# Encrypt the key file and use the User-ID of your Nitrokey $ gpg "
"--encrypt keyfile"
msgstr ""
"# Зашифруйте файл ключей и используйте User-ID вашего Nitrokey $ gpg "
"--encrypt keyfile"

#: ../to-be-integrated.rst:195
msgid ""
"# Remove the key file in clear text: $ rm keyfile # you may want to use "
"'wipe' or 'shred' to securely delete the keyfile"
msgstr ""
"# Удалите ключевой файл открытым текстом: $ rm keyfile # Вы можете "
"использовать 'wipe' или 'shred' для безопасного удаления ключевого файла."

#: ../to-be-integrated.rst:198
msgid "# Create mount point: $ mkdir ~/.cryptdir ~/cryptdir"
msgstr "# Создайте точку монтирования: $ mkdir ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:201
msgid ""
"# Create the actual encryption folder $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"
msgstr ""
"# Создайте фактическую папку шифрования $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:204
msgid ""
"# There may appears an error message about missing permission of "
"fusermount # This message can be ignored"
msgstr ""
"# Может появиться сообщение об отсутствии разрешения на fusermount # Это "
"сообщение можно проигнорировать"

#: ../to-be-integrated.rst:207
msgid "# Unmount the new file system: $ fusermount -u ~/cryptdir"
msgstr "# Размонтируйте новую файловую систему: $ fusermount -u ~/cryptdir"

#: ../to-be-integrated.rst:210
msgid "Usage"
msgstr "Использование"

#: ../to-be-integrated.rst:212
msgid ""
"# Mount encrypted file system and enter PIN of Nitrokey: $ gpg -d "
"keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"
msgstr ""
"# Смонтируйте зашифрованную файловую систему и введите PIN-код Nitrokey: "
"$ gpg -d keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:215
msgid "# After usage, unmount the file system: $ fusermount -u ~/cryptdir"
msgstr ""
"# После использования размонтируйте файловую систему: $ fusermount -u "
"~/cryptdir"

#: ../to-be-integrated.rst:219
msgid "Storage Encryption on Linux, Based on ECryptFS"
msgstr "Шифрование хранилищ в Linux на основе ECryptFS"

#: ../to-be-integrated.rst:221
msgid ""
"eCryptfs is a file based transparent encryption file system for Linux "
"which can be used with Nitrokey through a PKCS#11 driver. See these "
"instructions. Alternatively, try ESOSI or follow these steps using OpenSC"
" and OpenVPN:"
msgstr ""
"eCryptfs - это файловая система прозрачного шифрования на основе файлов "
"для Linux, которую можно использовать с Nitrokey через драйвер PKCS#11. "
"См. эти инструкции. В качестве альтернативы попробуйте ESOSI или "
"выполните следующие шаги, используя OpenSC и OpenVPN:"

#: ../to-be-integrated.rst:223
msgid "Warning: This will delete existing keys on your Nitrokey!"
msgstr "Внимание: Это приведет к удалению существующих ключей на вашем Nitrokey!"

#: ../to-be-integrated.rst:225
msgid ""
"# Import the certificate and key to the Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"
msgstr ""
"# Импортируйте сертификат и ключ в Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"

#: ../to-be-integrated.rst:228
msgid "# Create the file ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"
msgstr "# Создайте файл ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"

#: ../to-be-integrated.rst:231
msgid ""
"# Enter this content: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids path to opensc-pkcs11 module "
"Certificate"
msgstr ""
"# Введите это содержимое: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids путь к модулю opensc-pkcs11 "
"Сертификат"

#: ../to-be-integrated.rst:235
msgid ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Serial: 066E04 Serialized id: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"
msgstr ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Серийный: 066E04 Сериализованный идентификатор: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"

#: ../to-be-integrated.rst:239
msgid "# Copy the serialized id for later usage: $ ecryptfs-manager"
msgstr ""
"# Скопируйте сериализованный идентификатор для дальнейшего использования:"
" $ ecryptfs-manager"

#: ../to-be-integrated.rst:242
msgid ""
"# This will show list option. Choose option \"Add public key to keyring\""
" # Choose pkcs11-helper # Enter the serialized ID of step 3 to PKCS#11 "
"ID."
msgstr ""
"# Появится список опций. Выберите опцию \"Добавить открытый ключ в связку"
" ключей\" # Выберите pkcs11-helper # Введите сериализованный ID из шага 3"
" в PKCS#11 ID."

#: ../to-be-integrated.rst:250
msgid "**Q:** How can I sign and encrypt Files and PDFs? GnuPG"
msgstr "**В:** Как подписывать и шифровать файлы и PDF-файлы? GnuPG"

#: ../to-be-integrated.rst:253
msgid ""
"Use the gpgsm tool to sign, verify, encrypt and decrypt files. Use a "
"signature key on a Nitrokey to sign documents using Acrobat Reader, Open "
"Office / Libre Office or any other PDF reader supporting electronic "
"signatures."
msgstr ""
"Используйте инструмент gpgsm для подписания, проверки, шифрования и "
"расшифровки файлов. Используйте ключ подписи на Nitrokey для подписания "
"документов с помощью Acrobat Reader, Open Office / Libre Office или "
"любого другого PDF-ридера, поддерживающего электронные подписи."

#: ../to-be-integrated.rst:256
msgid "GPA - GNU Privacy Assistant"
msgstr "GPA - GNU Privacy Assistant"

#: ../to-be-integrated.rst:258
msgid ""
"The Gnu Privacy Assistant (GPA) recognizes Nitrokey out-of-the-box, has "
"various features to manage keys and cards. It also allows file operations"
" such as file encryption, decryption, signing."
msgstr ""
"Gnu Privacy Assistant (GPA) распознает Nitrokey из коробки, имеет "
"различные функции для управления ключами и картами. Он также позволяет "
"выполнять такие операции с файлами, как шифрование, расшифровка, "
"подписание."

#: ../to-be-integrated.rst:261
msgid "SOPS - Secrect OPerationS"
msgstr "SOPS - правильная эксплуатация"

#: ../to-be-integrated.rst:263
msgid ""
"SOPS is an editor of encrypted files that supports YAML, JSON and BINARY "
"formats and encrypts with AWS KMS and PGP. You can find it on github."
msgstr ""
"SOPS - это редактор зашифрованных файлов, который поддерживает форматы "
"YAML, JSON и BINARY и шифрует с помощью AWS KMS и PGP. Вы можете найти "
"его на github."

#: ../to-be-integrated.rst:266
msgid "Aloaha"
msgstr "Алоаха"

#: ../to-be-integrated.rst:268
msgid ""
"Aloaha provides several applications to encrypt and sign PDFs. All of "
"them, which allow smart card integration, work with Nitrokey. You can for"
" example import key and certificate by using OpenSC or any other "
"appropriate variant. After this Windows recognize your certificate and "
"you can sign the document as it is shown in the screencast below."
msgstr ""
"Aloaha предоставляет несколько приложений для шифрования и подписи "
"PDF-файлов. Все они, позволяющие интегрировать смарт-карты, работают с "
"Nitrokey. Вы можете, например, импортировать ключ и сертификат с помощью "
"OpenSC или любого другого подходящего варианта. После этого Windows "
"распознает ваш сертификат, и вы сможете подписать документ, как показано "
"на скриншоте ниже."

#: ../to-be-integrated.rst:270
msgid "GpgEx for Windows Explorer"
msgstr "GpgEx для проводника Windows"

#: ../to-be-integrated.rst:272
msgid ""
"GpgEx integrates smoothly into Windows Explorer to allow encryption and "
"decryption of files. Install it as part of the GPG4Win package."
msgstr ""
"GpgEx плавно интегрируется в проводник Windows и позволяет шифровать и "
"расшифровывать файлы. Установите его как часть пакета GPG4Win."

#: ../to-be-integrated.rst:275
msgid ""
"Before you start to use any of these applications with your Nitrokey, "
"please ensure that you installed the device driver and initialized the "
"device (e.g. generated keys)."
msgstr ""
"Прежде чем начать использовать любое из этих приложений с вашим Nitrokey,"
" пожалуйста, убедитесь, что вы установили драйвер устройства и "
"инициализировали устройство (например, сгенерировали ключи)."

#: ../to-be-integrated.rst:277
msgid ""
"Certificate-based login with TLS and web browser is a very secure "
"authentication method but it is only used rarely. If you are unsure what "
"this means, this approach is most likely not relevant for you."
msgstr ""
"Вход в систему на основе сертификата с помощью TLS и веб-браузера - это "
"очень безопасный метод аутентификации, но используется он крайне редко. "
"Если вы не знаете, что это значит, скорее всего, этот подход для вас не "
"подходит."

#: ../to-be-integrated.rst:279
msgid ""
"This page refers to websites and applications which support certificate "
"authentication, so that users don't need to enter username and password "
"when login. For instance WebID is a great protocol which makes use of it."
" Certificate authentication can be used easily with the Nitrokey and also"
" with any other certificate storages. Mozilla Firefox"
msgstr ""
"Эта страница относится к веб-сайтам и приложениям, которые поддерживают "
"аутентификацию с помощью сертификата, так что пользователям не нужно "
"вводить имя пользователя и пароль при входе в систему. Например, WebID - "
"отличный протокол, который использует эту возможность. Аутентификацию с "
"помощью сертификата можно легко использовать с Nitrokey, а также с любыми"
" другими хранилищами сертификатов. Mozilla Firefox"

#: ../to-be-integrated.rst:282
msgid "You need to install the PKCS#11 driver:"
msgstr "Вам необходимо установить драйвер PKCS#11:"

#: ../to-be-integrated.rst:284
msgid ""
"Download the PKCS11 driver and store it on your local hard disk or "
"install OpenSC. Open the Preferences in Firefox and go to  Privacy & "
"Security -> Security (just a headline) -> Button 'Security Devices...' "
"Press the button Load. Enter \"Nitrokey\" as the Module Name and press "
"the Browse button to select the previously downloaded PKCS11 driver file."
" Confirm and close all dialogs."
msgstr ""
"Скачайте драйвер PKCS11 и сохраните его на локальном жестком диске или "
"установите OpenSC. Откройте Параметры в Firefox и перейдите в раздел "
"Privacy & Security -> Security (просто заголовок) -> Button 'Security "
"Devices...' Нажмите кнопку Load. Введите \"Nitrokey\" в качестве имени "
"модуля и нажмите кнопку Browse, чтобы выбрать ранее загруженный файл "
"драйвера PKCS11. Подтвердите и закройте все диалоговые окна."

#: ../to-be-integrated.rst:288
msgid ""
"Now you are ready to access websites which provide certificate "
"authentication. Internet Explorer"
msgstr ""
"Теперь вы готовы к доступу к веб-сайтам, на которых предусмотрена "
"проверка подлинности сертификата. Internet Explorer"

#: ../to-be-integrated.rst:291
msgid ""
"Install this Mini Driver for Windows. Now you are ready to access "
"websites which provide certificate authentication. Google Chrome"
msgstr ""
"Установите этот мини-драйвер для Windows. Теперь вы готовы к доступу к "
"веб-сайтам, на которых предусмотрена проверка подлинности сертификата. "
"Google Chrome"

#: ../to-be-integrated.rst:294
msgid ""
"Under Windows, install this Mini Driver. Under Linux, follow these "
"instructions. Now you are ready to access websites which provide "
"certificate authentication. WebID"
msgstr ""
"В Windows установите этот мини-драйвер. В Linux следуйте этим "
"инструкциям. Теперь вы готовы к доступу к веб-сайтам, на которых "
"предусмотрена аутентификация с помощью сертификата. WebID"

#: ../to-be-integrated.rst:297
msgid ""
"WebID is a technology to enable secure and federated social websites. "
"Here is a video (WebM, Ogg video, H.264) which demonstrates how to use "
"Nitrokey to create a WebID profile and subsequently to use it in an "
"Internet cafe in Singapore. Nitrokey protects against computer viruses "
"which might otherwise steel the username and password. Websites Web Site"
"        Category CAcert  community-based Certificate Authority "
"PrivaSphere     Secure messaging HM Revenue & Customs    UK's tax "
"administration Software Application     Category Roundcube (plugin)      "
"Webmail Drupal (WebID, Certificate login)       Content management system"
" Media Wiki (plugin)     Wiki Joomla!         Content management system "
"Apache + mod_ssl        Web server OpenSSH         SSH (remote secure "
"shell) client and server Wordpress (plugin)      Blog and CMS Tivoli  "
"System management framework Globalscape EFT         managed file transfer"
" (MFT) Oracle Identity Manager         I&AM Fuse Source     Middleware "
"Liferay         Blog FusionForge     web-based project-management and "
"collaboration software"
msgstr ""
"WebID - это технология, позволяющая создавать безопасные и объединенные "
"социальные веб-сайты. Вот видео (WebM, Ogg video, H.264), "
"демонстрирующее, как с помощью Nitrokey создать профиль WebID и затем "
"использовать его в интернет-кафе в Сингапуре. Nitrokey защищает от "
"компьютерных вирусов, которые в противном случае могут узнать имя "
"пользователя и пароль. Веб-сайты Категория веб-сайтов CAcert Центр "
"сертификации на базе сообщества PrivaSphere Secure messaging HM Revenue &"
" Customs UK's tax administration Категория программных приложений "
"Roundcube (плагин) Webmail Drupal (WebID, Certificate login) Система "
"управления контентом Media Wiki (плагин) Wiki Joomla!         Система "
"управления контентом Apache + mod_ssl Веб-сервер OpenSSH SSH (удаленная "
"защищенная оболочка) клиент и сервер Wordpress (плагин) Блог и CMS Tivoli"
" Система управления Globalscape EFT управляемая передача файлов (MFT) "
"Oracle Identity Manager I&AM Fuse Source Middleware Liferay Blog "
"FusionForge веб-программа управления проектами и совместной работы"

#: ../to-be-integrated.rst:319
msgid ""
"This website is a good read about strong authentication mechanisms, why "
"client certificate authentication isn't popular and better alternatives "
"at the horizon."
msgstr ""
"На этом сайте можно прочитать о механизмах сильной аутентификации, о том,"
" почему аутентификация с помощью клиентского сертификата не пользуется "
"популярностью, и о лучших альтернативах на горизонте."

#: ../to-be-integrated.rst:321
msgid "**Q:** How can I use Enterprise Authentication?"
msgstr "**В:** Как я могу использовать корпоративную аутентификацию?"

#: ../to-be-integrated.rst:323
msgid ""
"LinOTP privacyIDEA RCDevs OpenOTP Usage of Nitrokey HSM as a secure key "
"store for the Forgerock OpenDJ server and Forgerock Identity Gateway"
msgstr ""
"LinOTP privacyIDEA RCDevs OpenOTP Использование Nitrokey HSM в качестве "
"безопасного хранилища ключей для сервера Forgerock OpenDJ и Forgerock "
"Identity Gateway"

#: ../to-be-integrated.rst:329
msgid ""
"**Q:** How can I do SSH for Server Administration on Windows? The "
"Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"**В:** Как я могу сделать SSH для администрирования сервера на Windows? "
"На Nitrokey уже должны быть установлены PGP-ключи, а локальная связка "
"ключей GnuPG должна знать об этих ключах, то есть в системе должен быть "
"установлен GPG4Win (необходимо только основное приложение GnuPG). Кроме "
"того, необходимо установить PuTTY. Подготовка на клиенте"

#: ../to-be-integrated.rst:333 ../to-be-integrated.rst:705
msgid ""
"There are two steps needed to make PuTTY work. At first we need to enable"
" PuTTY support of GnuPG. To achieve this we use the following command:"
msgstr ""
"Чтобы заставить PuTTY работать, необходимо выполнить два шага. Сначала "
"нам нужно включить в PuTTY поддержку GnuPG. Для этого выполните следующую"
" команду:"

#: ../to-be-integrated.rst:335 ../to-be-integrated.rst:707
msgid "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"
msgstr "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"

#: ../to-be-integrated.rst:337 ../to-be-integrated.rst:709
msgid ""
"Now we want to make sure, that the gpg-agent is starting automatically in"
" the background (you can start it manually with the command below, if you"
" prefer). We create a shortcut to gpg-connect-agent.exe. Press and hold "
"the Windows-key and press 'R'. Type in \"shell:startup\" in the opening "
"textfield (see picture below). The Windows-Explorer opens and you right-"
"click on an empty space and choose \"New\" -> \"Shortcut\". Now you "
"should insert the actual command and proceed:"
msgstr ""
"Теперь мы хотим убедиться, что gpg-agent запускается автоматически в "
"фоновом режиме (при желании вы можете запустить его вручную с помощью "
"команды ниже). Создадим ярлык для gpg-connect-agent.exe. Нажмите и "
"удерживайте клавишу Windows и нажмите 'R'. В открывшемся текстовом поле "
"введите \"shell:startup\" (см. рисунок ниже). Откроется проводник "
"Windows, щелкните правой кнопкой мыши на пустом месте и выберите "
"\"Новый\" -> \"Ярлык\". Теперь необходимо вставить фактическую команду и "
"продолжить работу:"

#: ../to-be-integrated.rst:339 ../to-be-integrated.rst:711
msgid "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"
msgstr "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"

#: ../to-be-integrated.rst:343 ../to-be-integrated.rst:715
msgid ""
"Reboot your system to make sure the shortcut works. If everything is "
"alright you now can use PuTTY as usual and PuTTY will make use of the "
"Nitrokey automatically. Preparation for the server"
msgstr ""
"Перезагрузите систему, чтобы убедиться, что ярлык работает. Если все в "
"порядке, теперь вы можете использовать PuTTY как обычно, и PuTTY будет "
"использовать Nitrokey автоматически. Подготовка к работе с сервером"

#: ../to-be-integrated.rst:346 ../to-be-integrated.rst:718
msgid "You can generate an authorized_keys file by running"
msgstr "Вы можете создать файл authorized_keys, выполнив команду"

#: ../to-be-integrated.rst:348 ../to-be-integrated.rst:720
msgid ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"
msgstr ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"

#: ../to-be-integrated.rst:350 ../to-be-integrated.rst:722
msgid ""
"where 'keyID' is either the fingerprint of your key or just the E-Mail "
"address bind to your key. The Nitrokey must already be known to the local"
" GnuPG keyring. You can now append that file to a remote server's "
"authorized_keys and when you ssh to the server you'll be asked for a pin "
"rather than a passphrase."
msgstr ""
"где 'keyID' - это либо отпечаток вашего ключа, либо просто E-Mail адрес, "
"привязанный к вашему ключу. Nitrokey уже должен быть известен в локальной"
" связке ключей GnuPG. Теперь вы можете добавить этот файл в "
"authorized_keys удаленного сервера' и при ssh на сервер вас попросят "
"ввести pin, а не кодовую фразу."

#: ../to-be-integrated.rst:357
msgid "**Q:** How can I do SSH for Server Administration on Linux?"
msgstr "**В:** Как я могу использовать SSH для администрирования сервера в Linux?"

#: ../to-be-integrated.rst:359 ../to-be-integrated.rst:726
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys. Preparation on client"
msgstr ""
"На Nitrokey уже должны быть установлены ключи PGP, а локальная связка "
"ключей GnuPG должна знать эти ключи. Подготовка на клиенте"

#: ../to-be-integrated.rst:362 ../to-be-integrated.rst:729
msgid ""
"Make sure ~/.gnupg/gpg.conf contains 'use-agent' Add ssh support to "
"gnupg-agent by adding 'enable-ssh-support' to ~/.gnupg/gpg-agent.conf If "
"the file does not exist yet, you can just create it. Add the following "
"code somewhere into your ~/.bashrc (for fish shell, look here)"
msgstr ""
"Убедитесь, что ~/.gnupg/gpg.conf содержит 'use-agent' Добавьте поддержку "
"ssh в gnupg-agent, добавив 'enable-ssh-support' в ~/.gnupg/gpg-agent.conf"
" Если файл еще не существует, вы можете просто создать его. Добавьте "
"следующий код куда-нибудь в ~/.bashrc (для fish shell смотрите здесь)"

#: ../to-be-integrated.rst:367 ../to-be-integrated.rst:734
msgid ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"
msgstr ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"

#: ../to-be-integrated.rst:372 ../to-be-integrated.rst:739
msgid ""
"Simply restart your system or try pkill gpg-agent and open a new "
"commandline to make sure everything is set In case of problems, please "
"try gpg2 --card-status on first usage to make sure the gpg-agent gets "
"started"
msgstr ""
"Просто перезагрузите систему или попробуйте pkill gpg-agent и откройте "
"новую командную строку, чтобы убедиться, что все установлено. В случае "
"проблем, пожалуйста, попробуйте gpg2 --card-status при первом "
"использовании, чтобы убедиться, что gpg-agent запускается."

#: ../to-be-integrated.rst:375 ../to-be-integrated.rst:742
msgid "Preparation for the server"
msgstr "Подготовка к работе с сервером"

#: ../to-be-integrated.rst:377 ../to-be-integrated.rst:744
msgid "You can generate an authorized_keys file by running either"
msgstr "Вы можете создать файл authorized_keys, выполнив следующие действия"

#: ../to-be-integrated.rst:379 ../to-be-integrated.rst:746
msgid ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) or "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(for newer GnuPG "
"versions)"
msgstr ""
"gpgkey2ssh keyID >> ~/authorized_keys #(для GnuPG версии <= 2.1.11) или "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(для более новых версий"
" GnuPG)"

#: ../to-be-integrated.rst:382 ../to-be-integrated.rst:749
msgid "where"
msgstr "где"

#: ../to-be-integrated.rst:384 ../to-be-integrated.rst:751
msgid "keyID"
msgstr "keyID"

#: ../to-be-integrated.rst:386 ../to-be-integrated.rst:753
msgid ""
"is the subkey id being used for authentication on your Nitrokey. The "
"Nitrokey must already be known to the local GnuPG keyring. You can now "
"append that file to a remote server's authorized_keys and when you ssh to"
" the server you'll be asked for a pin rather than a passphrase."
msgstr ""
"это идентификатор подключа, который используется для аутентификации на "
"вашем Nitrokey. Nitrokey уже должен быть известен в локальной связке "
"ключей GnuPG. Теперь вы можете добавить этот файл в authorized_keys "
"удаленного сервера, и при ssh на сервер вас попросят ввести пин-код, а не"
" кодовую фразу."

#: ../to-be-integrated.rst:389 ../to-be-integrated.rst:756
msgid "Troubleshooting"
msgstr "Устранение неполадок"

#: ../to-be-integrated.rst:391 ../to-be-integrated.rst:758
msgid "If you are still asked for a password please make sure that"
msgstr "Если вас все еще просят ввести пароль, убедитесь, что"

#: ../to-be-integrated.rst:393 ../to-be-integrated.rst:760
msgid "echo $SSH_AUTH_SOCK"
msgstr "echo $SSH_AUTH_SOCK"

#: ../to-be-integrated.rst:395 ../to-be-integrated.rst:762
msgid ""
"returns something reasonable like '/run/user/1000/gnupg/S.gpg-agent.ssh' "
"or '/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were "
"some changes in GnuPG in the past so that the actual content can differ "
"from system and GnuPG version. On some systems there may are even "
"multiple folders in this variable saved. You have to adapt the above "
"given code in .bashrc so that the variable SSH_AUTH_SOCK is correct. In "
"doubt look for 'SSH_AUTH_SOCK' in"
msgstr ""
"возвращает что-то разумное вроде '/run/user/1000/gnupg/S.gpg-agent.ssh' "
"или '/home/username/.gnupg/.S.gpg-agent.ssh'. К сожалению, в прошлом в "
"GnuPG были внесены некоторые изменения, поэтому фактическое содержимое "
"может отличаться в зависимости от системы и версии GnuPG. На некоторых "
"системах в этой переменной может быть сохранено даже несколько папок. Вы "
"должны адаптировать приведенный выше код в .bashrc так, чтобы переменная "
"SSH_AUTH_SOCK была правильной. В случае сомнений поищите 'SSH_AUTH_SOCK' "
"в разделе"

#: ../to-be-integrated.rst:397 ../to-be-integrated.rst:764
msgid "man gpg-agent"
msgstr "man gpg-agent"

#: ../to-be-integrated.rst:399 ../to-be-integrated.rst:766
msgid "to find the actual code for your version/system."
msgstr "чтобы найти фактический код для вашей версии/системы."

#: ../to-be-integrated.rst:401 ../to-be-integrated.rst:768
msgid ""
"You may check if you have a 'pinentry' program installed via your package"
" manager. You may need to set it in the gpg-agent.conf as well. You may "
"need to point gpg-agent to the correct TTY."
msgstr ""
"Вы можете проверить, установлена ли у вас программа 'pinentry' через "
"менеджер пакетов. Возможно, вам также потребуется установить его в файле "
"gpg-agent.conf. Вам может понадобиться указать gpg-agent на правильный "
"TTY."

#: ../to-be-integrated.rst:415
msgid "**Q:** How can I use the Nitrokey for VPN access?"
msgstr "**В:** Как я могу использовать Nitrokey для доступа к VPN?"

#: ../to-be-integrated.rst:418 ../to-be-integrated.rst:789
msgid "For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"
msgstr "Для: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"

#: ../to-be-integrated.rst:421 ../to-be-integrated.rst:792
msgid "Generate a key on Nitrokey via pkcs11-tool."
msgstr "Сгенерируйте ключ на Nitrokey с помощью pkcs11-tool."

#: ../to-be-integrated.rst:423 ../to-be-integrated.rst:794
msgid "Generate a certificate signing request via openssl + pkcs11 module:"
msgstr ""
"Генерирование запроса на подписание сертификата с помощью модуля openssl "
"+ pkcs11:"

#: ../to-be-integrated.rst:425 ../to-be-integrated.rst:796
msgid ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:427 ../to-be-integrated.rst:798
msgid "Sign the certificate with our certificate authority"
msgstr "Подпишите сертификат в нашем центре сертификации"

#: ../to-be-integrated.rst:429 ../to-be-integrated.rst:800
msgid ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:431 ../to-be-integrated.rst:478
#: ../to-be-integrated.rst:802 ../to-be-integrated.rst:849
msgid "Import  the certificate into the Nitrokey via pkcs11-tool"
msgstr "Импортируйте сертификат в Nitrokey с помощью инструмента pkcs11-tool"

#: ../to-be-integrated.rst:433 ../to-be-integrated.rst:804
msgid "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"
msgstr "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"

#: ../to-be-integrated.rst:435 ../to-be-integrated.rst:806
msgid "Read the certificate's ID required for openvpn configuration:"
msgstr "Прочитайте идентификатор сертификата, необходимый для настройки openvpn:"

#: ../to-be-integrated.rst:437 ../to-be-integrated.rst:808
msgid "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"
msgstr "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"

#: ../to-be-integrated.rst:439 ../to-be-integrated.rst:810
msgid ""
"Modify your openvpn configuration. Add the certificate ID which you "
"gathered in the previous step: E.g."
msgstr ""
"Измените конфигурацию openvpn. Добавьте ID сертификата, который вы "
"собрали в предыдущем шаге: Например."

#: ../to-be-integrated.rst:441 ../to-be-integrated.rst:812
msgid ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"
msgstr ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"

#: ../to-be-integrated.rst:443 ../to-be-integrated.rst:814
msgid "Add the PKCS#11 driver to the configuration too, e.g.:"
msgstr "Добавьте драйвер PKCS#11 также в конфигурацию, например:"

#: ../to-be-integrated.rst:445 ../to-be-integrated.rst:816
msgid "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"
msgstr "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"

#: ../to-be-integrated.rst:447 ../to-be-integrated.rst:818
msgid "See this link for further information."
msgstr "Дополнительную информацию см. по этой ссылке."

#: ../to-be-integrated.rst:451 ../to-be-integrated.rst:822
msgid ""
"Now all configurations are done. When executing OpenVPN client, "
"Nitrokey's PIN needs to be entered. Unfortunately OpenVPN doesn't prompt "
"to enter the PIN and it has to be entered in the following way:"
msgstr ""
"Теперь все настройки завершены. При запуске клиента OpenVPN необходимо "
"ввести PIN-код Nitrokey'. К сожалению, OpenVPN' не предлагает ввести "
"PIN-код, и его необходимо ввести следующим образом:"

#: ../to-be-integrated.rst:453 ../to-be-integrated.rst:824
msgid "$ telnet 8888 password 'User PIN (OpenPGP card) token' <PIN>"
msgstr "$ telnet 8888 пароль 'PIN пользователя (карта OpenPGP) токен' <PIN>"

#: ../to-be-integrated.rst:455 ../to-be-integrated.rst:826
msgid ""
"Alternatively you could recompile OpenVPN client with systemd support "
"disabled and it will prompt you for the PIN as expected. Alternatively to"
" the OpenVPN client you could use the Viscosity client which provides a "
"better user experience especially for entering the PIN."
msgstr ""
"В качестве альтернативы вы можете перекомпилировать клиент OpenVPN с "
"отключенной поддержкой systemd, и он будет запрашивать PIN-код, как и "
"ожидалось. В качестве альтернативы клиенту OpenVPN вы можете использовать"
" клиент Viscosity, который обеспечивает лучший пользовательский опыт, "
"особенно для ввода PIN-кода."

#: ../to-be-integrated.rst:458 ../to-be-integrated.rst:829
msgid "IPsec"
msgstr "IPsec"

#: ../to-be-integrated.rst:460 ../to-be-integrated.rst:831
msgid "Strong Swan works using the PKCS#11 driver. Basically follow these steps:"
msgstr ""
"Strong Swan работает с использованием драйвера PKCS#11. В основном "
"следуйте следующим шагам:"

#: ../to-be-integrated.rst:462 ../to-be-integrated.rst:833
msgid ""
"Generate a key on Nitrokey via pkcs11-tool. In this example it's a 4096 "
"bit RSA key."
msgstr ""
"Сгенерируйте ключ на Nitrokey с помощью pkcs11-tool. В данном примере это"
" ключ RSA длиной 4096 бит."

#: ../to-be-integrated.rst:464 ../to-be-integrated.rst:835
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"

#: ../to-be-integrated.rst:466 ../to-be-integrated.rst:837
msgid "Generate a certificate signing request via openssl + pkcs11 module"
msgstr ""
"Генерирование запроса на подписание сертификата с помощью модуля openssl "
"+ pkcs11"

#: ../to-be-integrated.rst:468 ../to-be-integrated.rst:839
msgid ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"
msgstr ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"

#: ../to-be-integrated.rst:472 ../to-be-integrated.rst:843
msgid "Sign the certificate with your certificate authority"
msgstr "Подпишите сертификат в своем центре сертификации"

#: ../to-be-integrated.rst:474 ../to-be-integrated.rst:845
msgid "Convert the certificate to DER"
msgstr "Преобразование сертификата в DER"

#: ../to-be-integrated.rst:476 ../to-be-integrated.rst:847
msgid ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"
msgstr ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"

#: ../to-be-integrated.rst:480 ../to-be-integrated.rst:851
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"

#: ../to-be-integrated.rst:482 ../to-be-integrated.rst:853
msgid ""
"Configure Strongswan to load opensc-pkcs11 module then to load the "
"certificate on Nitrokey. Edit /etc/strongswan.d/charon/pkcs11.conf and "
"add the following module:"
msgstr ""
"Настройте Strongswan на загрузку модуля opensc-pkcs11, а затем на "
"загрузку сертификата на Nitrokey. Отредактируйте "
"/etc/strongswan.d/charon/pkcs11.conf и добавьте следующий модуль:"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "modules {"
msgstr "модули {"

#: ../to-be-integrated.rst:485 ../to-be-integrated.rst:856
msgid "Nitrokey {"
msgstr "Нитрокей {"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"
msgstr "путь = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"

#: ../to-be-integrated.rst:487 ../to-be-integrated.rst:488
#: ../to-be-integrated.rst:858 ../to-be-integrated.rst:859
msgid "}"
msgstr "}"

#: ../to-be-integrated.rst:490 ../to-be-integrated.rst:861
msgid ""
"Initiate the VPN connection via IPSec/Strongswan, then prompt for "
"Nitrokey PIN"
msgstr ""
"Начните VPN-соединение через IPSec/Strongswan, затем запросите PIN-код "
"Nitrokey."

#: ../to-be-integrated.rst:492 ../to-be-integrated.rst:863
msgid "8. VPN is now connected Stunnel"
msgstr "8. VPN теперь подключена Туннель"

#: ../to-be-integrated.rst:495 ../to-be-integrated.rst:866
msgid ""
"Stunnel works as an SSL encryption wrapper between remote client and "
"local (inetd-startable) or remote server. It can be used to add SSL "
"functionality to commonly used inetd daemons like POP2, POP3, and IMAP "
"servers without any changes in the programs' code."
msgstr ""
"Stunnel работает как обертка SSL-шифрования между удаленным клиентом и "
"локальным (inetd-startable) или удаленным сервером. Он может быть "
"использован для добавления функциональности SSL к широко используемым "
"демонам inetd, таким как POP2, POP3 и IMAP серверы без каких-либо "
"изменений в коде программ'."

#: ../to-be-integrated.rst:497 ../to-be-integrated.rst:868
msgid "Stunnel is able to load OpenSC PKCS#11 engine using this configuration:"
msgstr ""
"Stunnel способен загрузить механизм OpenSC PKCS#11, используя эту "
"конфигурацию:"

#: ../to-be-integrated.rst:499 ../to-be-integrated.rst:870
msgid ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"
msgstr ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"

#: ../to-be-integrated.rst:507 ../to-be-integrated.rst:878
msgid "[service] engineNum=1 key=id_45"
msgstr "[service] engineNum=1 key=id_45"

#: ../to-be-integrated.rst:525
msgid "**Q:** How can I do PKI / Certificate Authority (CA)?"
msgstr "**В:** Как я могу сделать PKI / центр сертификации (CA)?"

#: ../to-be-integrated.rst:527
msgid "CA keys are very sensitive and must not be compromised or lost. GnuPG"
msgstr ""
"Ключи CA очень чувствительны и не должны быть скомпрометированы или "
"потеряны. GnuPG"

#: ../to-be-integrated.rst:530
msgid "Instructions OpenSSL"
msgstr "Инструкции OpenSSL"

#: ../to-be-integrated.rst:533
msgid ""
"Install OpenSC'S engine_pkcs11 Run the command \"pkcs11-tool --list-"
"slots\" to list the available slots. Run the command \"openssl> req "
"-engine pkcs11 -new -key slot_X-id_XXXX -keyform engine -x509 -out "
"cert.pem -text\" where X is the appropriate slot number and XXXX is the "
"slot ID, e.g. \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"
msgstr ""
"Установите OpenSC'S engine_pkcs11 Выполните команду \"pkcs11-tool --list-"
"slots\" для получения списка доступных слотов. Выполните команду "
"\"openssl> req -engine pkcs11 -new -key slot_X-id_XXXX -keyform engine "
"-x509 -out cert.pem -text\", где X - номер соответствующего слота, а XXXX"
" - идентификатор слота, например \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"

#: ../to-be-integrated.rst:538
msgid "Other"
msgstr "Другое"

#: ../to-be-integrated.rst:540
msgid ""
"Please see this PDF (p. 30) from heinlein-support.de for summarized "
"instructions in German."
msgstr ""
"Краткие инструкции на немецком языке см. в этом PDF (стр. 30) с сайта "
"heinlein-support.de."

#: ../to-be-integrated.rst:542
msgid ""
"µ-CA-tool is a script based on GnuPG, OpenSC and OpenSSL which helps to "
"perform basic tasks of a CA. It works with Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"µ-CA-tool - это скрипт на основе GnuPG, OpenSC и OpenSSL, который "
"помогает выполнять основные задачи ЦС. Он работает с Nitrokey Pro и "
"Nitrokey Storage."

#: ../to-be-integrated.rst:550
msgid "**Q:** How can I use the password manager?"
msgstr "**В:** Как я могу использовать менеджер паролей?"

#: ../to-be-integrated.rst:552
msgid "You have the following options:"
msgstr "У вас есть следующие возможности:"

#: ../to-be-integrated.rst:554
msgid ""
"Use Nitrokey's built-in Password Safe to store passwords securely. For "
"this you need the Nitrokey App. Maximum are 16 passwords. Use Pass "
"(simple commandline password manager for Unix systems, mainly for "
"experts). Use KeePass as described below."
msgstr ""
"Используйте встроенный в Nitrokey' сейф для безопасного хранения паролей."
" Для этого вам необходимо приложение Nitrokey. Максимальное количество "
"паролей - 16. Используйте Pass (простой менеджер паролей командной строки"
" для Unix-систем, в основном для экспертов). Используйте KeePass, как "
"описано ниже."

#: ../to-be-integrated.rst:558
msgid "Protecting KeePass with Nitrokey's One-Time Passwords"
msgstr "Защита KeePass с помощью Nitrokey' одноразовых паролей"

#: ../to-be-integrated.rst:560
msgid ""
"You can also follow this video (It contains a mistake around time 4:22 "
"which is described later below). Keepass Installation"
msgstr ""
"Вы также можете воспользоваться этим видео (в нем есть ошибка примерно на"
" 4:22, которая описана ниже). Установка Keepass"

#: ../to-be-integrated.rst:563
msgid ""
"Install Keepass 2.3.5. For Ubuntu: Because the main repository contains "
"the older 2.3.4, you have to use some other source like this private PPA "
"(please run these commands in terminal):"
msgstr ""
"Установите Keepass 2.3.5. Для Ubuntu: Поскольку основной репозиторий "
"содержит старую версию 2.3.4, вы должны использовать другой источник, "
"например, этот частный PPA (пожалуйста, выполните эти команды в "
"терминале):"

#: ../to-be-integrated.rst:566
msgid ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"
msgstr ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"

#: ../to-be-integrated.rst:570
msgid ""
"Install the OtpKeyProv plugin by downloading the archive, unzipping and "
"copying the content to Keypass' Plugin directory. On Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ For Linux, optional: Install "
"mono-complete package if plugin is not detected when running Keepass2 "
"(you can check that in Tools/Plugins):"
msgstr ""
"Установите плагин OtpKeyProv, скачав архив, разархивировав и скопировав "
"содержимое в каталог Keypass' Plugin. В Linux: sudo cp OtpKeyProv.plgx "
"/usr/lib/keepass2/Plugins/ Для Linux, опционально: Установите пакет mono-"
"complete, если плагин не обнаруживается при запуске Keepass2 (вы можете "
"проверить это в Tools/Plugins):"

#: ../to-be-integrated.rst:574
msgid "sudo apt-get install mono-complete"
msgstr "sudo apt-get install mono-complete"

#: ../to-be-integrated.rst:576
msgid "Keepass OTP Configuration Existing Database"
msgstr "Keepass OTP Configuration Существующая база данных"

#: ../to-be-integrated.rst:579
msgid ""
"Do a backup of your database and keep it until you are really sure "
"everything works fine! Make sure you really did a backup. If you mess up,"
" your passwords are lost! Open database as usual Select File/Change "
"Master Key..."
msgstr ""
"Сделайте резервную копию базы данных и храните ее до тех пор, пока не "
"убедитесь, что все работает нормально! Убедитесь, что вы действительно "
"сделали резервную копию. Если вы ошибетесь, ваши пароли будут потеряны! "
"Откройте базу данных как обычно Выберите Файл/Изменить мастер-ключ..."

#: ../to-be-integrated.rst:584
msgid "New Database"
msgstr "Новая база данных"

#: ../to-be-integrated.rst:586
msgid "Create new database as usual"
msgstr "Создайте новую базу данных, как обычно"

#: ../to-be-integrated.rst:588
msgid "Common"
msgstr "Общий"

#: ../to-be-integrated.rst:590
msgid ""
"Insert Master Password (optional) Set Key file / provider: to One-Time "
"Passwords (OATH HOTP) Click OK With Nitrokey App: select HOTP slot and "
"generate HOTP secret (it will be copied to clipboard automatically). "
"Note: You may want write down this secret and store it anywhere secure. "
"Otherwise if you lose your Nitrokey or it gets broken your password "
"database is lost as well!!! Paste the secret to Keepass OTP Plugin window"
" Make sure the Counter field and digits count are set the same in both "
"windows. Click OK in Nitrokey App to save the slot. Select secret type: "
"Base32 Set the other settings as you like. Please consult plugin's manual"
" (should be in same downloaded archive). I would recommend to set look-"
"ahead value to non-zero to prevent locking up the database after "
"accidental code request from used HOTP slot. In that case counters on the"
" device and in Keepass would be out of sync and OTP codes will not be the"
" same with expected."
msgstr ""
"Вставьте мастер-пароль (необязательно) Установите файл ключей / "
"провайдера: на одноразовые пароли (OATH HOTP) Нажмите OK С помощью "
"приложения Nitrokey: выберите слот HOTP и создайте секрет HOTP (он будет "
"автоматически скопирован в буфер обмена). Примечание: Вы можете записать "
"этот секрет и хранить его в надежном месте. В противном случае, если вы "
"потеряете Nitrokey или он будет сломан, ваша база паролей также будет "
"потеряна!!! Вставьте секрет в окно Keepass OTP Plugin Убедитесь, что поле"
" Счетчик и количество цифр в обоих окнах одинаковы. Нажмите OK в "
"приложении Nitrokey, чтобы сохранить слот. Выберите тип секрета: Base32 "
"Установите другие настройки по своему усмотрению. Пожалуйста, "
"ознакомьтесь с инструкцией к плагину (должна быть в том же скачанном "
"архиве). Я бы рекомендовал установить значение look-ahead ненулевым, "
"чтобы предотвратить блокировку базы данных после случайного запроса кода "
"с используемого HOTP слота. В этом случае счетчики на устройстве и в "
"Keepass будут рассинхронизированы и OTP-коды не будут совпадать с "
"ожидаемыми."

#: ../to-be-integrated.rst:599
msgid "Unlocking Database"
msgstr "Разблокировка базы данных"

#: ../to-be-integrated.rst:601
msgid ""
"Open database Insert Master Password (if set) Key file / provider: to "
"One-Time Passwords (OATH HOTP) Press OK Insert HOTP codes by repeatedly "
"choosing proper HOTP slot from the Nitrokey App and pasting the clipboard"
" content to proper field (the order of the codes is important). Press OK"
msgstr ""
"Открыть базу данных Вставить мастер-пароль (если установлен) Ключевой "
"файл / провайдер: к одноразовым паролям (OATH HOTP) Нажмите OK Вставить "
"коды HOTP, несколько раз выбрав соответствующий слот HOTP в приложении "
"Nitrokey и вставив содержимое буфера обмена в соответствующее поле "
"(порядок кодов важен). Нажмите OK"

#: ../to-be-integrated.rst:608
msgid "Issues"
msgstr "Вопросы"

#: ../to-be-integrated.rst:610
msgid ""
"Due to nature of HOTP solution it is possible to get counters "
"desynchronized (by selecting wrong OTP slot during day-to-day use). Using"
" look-ahead plugin's setting should prevent that (value 10 or so should "
"suffice - depends on desired security requirements - this would allow to "
"10 accidental requests). TOTP is not having that problem. Setting the OTP"
" protection could be error-prone. There is no secret validation on "
"OtpKeyProv side. In the test movie at 4:22 I have managed to set the "
"Base32 coded secret as Hex (which was not a proper hex value) and it has "
"not complained about it. There is no information what happened to "
"database and how it is now configured. I have not noticed until I have "
"watched the movie."
msgstr ""
"Из-за природы решения HOTP можно добиться десинхронизации счетчиков "
"(выбрав неправильный слот OTP во время повседневного использования). "
"Использование настройки look-ahead плагина' должно предотвратить это "
"(значение 10 или около того должно быть достаточно - зависит от желаемых "
"требований безопасности - это позволит сделать до 10 случайных запросов)."
" У TOTP такой проблемы нет. Настройка защиты OTP может быть сопряжена с "
"ошибками. На стороне OtpKeyProv нет секретной валидации. В тестовом "
"ролике на 4:22 мне удалось установить Base32 кодированный секрет как Hex "
"(что не было правильным шестнадцатеричным значением) и он не жаловался на"
" это. Нет никакой информации о том, что произошло с базой данных и как "
"она теперь настроена. Я не заметил этого до тех пор, пока не посмотрел "
"фильм."

#: ../to-be-integrated.rst:613
msgid "Tested under Ubuntu 16.10, Nitrokey App v0.6.3 and Nitrokey Storage v0.45."
msgstr "Проверено на Ubuntu 16.10, Nitrokey App v0.6.3 и Nitrokey Storage v0.45."

#: ../to-be-integrated.rst:622
msgid "**Q:** How can I use the True Random Number Generator?"
msgstr ""
"**В:** Как я могу использовать генератор случайных чисел True Random "
"Number Generator?"

#: ../to-be-integrated.rst:624
msgid ""
"Both devices are compatible to the OpenPGP Card, so that scdrand should "
"work. This script may be useful. The TRNG provides about 40 kbit/s."
msgstr ""
"Оба устройства совместимы с OpenPGP Card, так что scdrand должен "
"работать. Этот скрипт может быть полезен. TRNG обеспечивает около 40 "
"кбит/с."

#: ../to-be-integrated.rst:626
msgid ""
"The user comio created a systemd file to use scdrand and thus the TRNG "
"more generally. He created a ebuild for Gentoo, too."
msgstr ""
"Пользователь comio создал файл systemd для использования scdrand и, таким"
" образом, TRNG в целом. Он также создал ebuild для Gentoo."

#: ../to-be-integrated.rst:632
msgid "**Q:** Do you have resources for development and integration?"
msgstr "**В:** Есть ли у вас ресурсы для разработки и интеграции?"

#: ../to-be-integrated.rst:635
msgid ""
"Use Nitrokey library to manage the one-time passwords and password safe "
"functionality. The project nitrokey-get-totp and nitrokey-get-password "
"are nice examples for using the python bindings of Nitrokey library to "
"get a custom interface. In order to access the integrated smart card, you"
" can use OpenSC's command line tools. If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. To work with the smart card low "
"level, see the OpenPGP Card specification. The source code of the "
"firmware and the hardware layout are available too. To develop special "
"applications or for command line access one can use the nitrocli created "
"by d-e-s-o. Gkey is a go-based command line tool to access the Password "
"Safe and OTP entries. A libnitrokey wrapper for Rust providing access to "
"Nitrokey devices."
msgstr ""
"Используйте библиотеку Nitrokey для управления одноразовыми паролями и "
"функциональностью парольного сейфа. Проекты nitrokey-get-totp и nitrokey-"
"get-password являются хорошими примерами использования привязки "
"библиотеки Nitrokey к python для получения пользовательского интерфейса. "
"Для доступа к встроенной смарт-карте можно использовать инструменты "
"командной строки OpenSC'. Если ваше приложение имеет интерфейс PKCS#11, "
"используйте драйвер OpenSC'PKCS#11. Для работы со смарт-картой на низком "
"уровне смотрите спецификацию OpenPGP Card. Исходный код микропрограммы и "
"схема аппаратного обеспечения также доступны. Для разработки специальных "
"приложений или для доступа к командной строке можно использовать "
"nitrocli, созданный d-e-s-o. Gkey - это инструмент командной строки на "
"основе go для доступа к сейфу паролей и записям OTP. Обертка libnitrokey "
"для Rust обеспечивает доступ к устройствам Nitrokey."

#: ../to-be-integrated.rst:646
msgid "# HSM 2"
msgstr "# HSM 2"

#: ../to-be-integrated.rst:648
msgid ""
"**Nitrokey HSM:** 124 dataobjects (DF, EF) can be created. Each EF can "
"have a size of up to 256 byte. The total storage capacity of ca. 32 KByte"
" is shared dynamically among keys and data objects."
msgstr ""
"**Nitrokey HSM:** Можно создать 124 объекта данных (DF, EF). Каждый EF "
"может иметь размер до 256 байт. Общий объем памяти около 32 КБайт "
"динамически распределяется между ключами и объектами данных."

#: ../to-be-integrated.rst:652
msgid "**Q:** How to use the HSM for Login For: Nitrokey HSM"
msgstr "**Q:** Как использовать HSM для входа в систему: Nitrokey HSM"

#: ../to-be-integrated.rst:655
msgid "Select your use case:"
msgstr "Выберите свой вариант использования:"

#: ../to-be-integrated.rst:657
msgid ""
"Login With Nitrokey HSM on Stand Alone Windows Computers Login With "
"Nitrokey HSM on Windows Domain Computers Using MS Active Directory For "
"Unix environments an integration with PAM and OpenSSH is available."
msgstr ""
"Вход с Nitrokey HSM на автономных компьютерах Windows Вход с Nitrokey HSM"
" на компьютерах домена Windows с помощью MS Active Directory Для сред "
"Unix доступна интеграция с PAM и OpenSSH."

#: ../to-be-integrated.rst:661
msgid "**Q:**  How to use the HSM for Email Encryption"
msgstr "**В:** Как использовать HSM для шифрования электронной почты"

#: ../to-be-integrated.rst:663
msgid ""
"Encrypt your email using the S/MIME industry standard available in all "
"major e-mail clients."
msgstr ""
"Шифруйте свою электронную почту с помощью промышленного стандарта S/MIME,"
" доступного во всех основных почтовых клиентах."

#: ../to-be-integrated.rst:665
msgid ""
"The Nitrokey HSM has been tested to work with Mozilla Thunderbird and "
"Microsoft Outlook. Other email clients with support for PKCS#11 or "
"Microsoft CSP should work as well."
msgstr ""
"Nitrokey HSM был протестирован для работы с Mozilla Thunderbird и "
"Microsoft Outlook. Другие почтовые клиенты с поддержкой PKCS#11 или "
"Microsoft CSP также должны работать."

#: ../to-be-integrated.rst:667
msgid "Note: A certificate can be purchased cheaply from CERTUM."
msgstr "Примечание: Сертификат можно недорого приобрести в CERTUM."

#: ../to-be-integrated.rst:669
msgid "**Q:**   How to use the Nitrokey for Hard Disk Encryption with VeraCrpt?"
msgstr "**В:** Как использовать Nitrokey для шифрования жесткого диска с VeraCrpt?"

#: ../to-be-integrated.rst:671
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey:"
msgstr ""
"VeraCrypt - это бесплатная программа шифрования дисков с открытым "
"исходным кодом для Windows, macOS и GNU/Linux. Она является преемницей "
"TrueCrypt и поэтому рекомендуется к использованию, хотя следующие "
"инструкции применимы и к TrueCrypt. Чтобы использовать программу с "
"Nitrokey, выполните следующие шаги:"

#: ../to-be-integrated.rst:680
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the password."
msgstr ""
"Соображения безопасности: Обратите внимание, что VeraCrypt не использует "
"полную безопасность, которую обеспечивает Nitrokey (и смарт-карты в "
"целом). Вместо этого он хранит ключевой файл на Nitrokey, который "
"теоретически может быть украден компьютерным вирусом после того, как "
"пользователь введет пароль."

#: ../to-be-integrated.rst:682
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation. (Not tested with Nitrokey HSM!)"
msgstr ""
"Примечание: Aloaha Crypt основан на TrueCrypt/VeraCrypt, но без описанных"
" ограничений безопасности. (Не тестировалось с Nitrokey HSM!)."

#: ../to-be-integrated.rst:685
msgid "**Q:** How to sign and encrypt files and pdfs?"
msgstr "**В:** Как подписывать и шифровать файлы и pdf-файлы?"

#: ../to-be-integrated.rst:687
msgid "GnuPG"
msgstr "GnuPG"

#: ../to-be-integrated.rst:689
msgid ""
"Starting with version 2.1, GnuPG has build-in but limited support for the"
" Nitrokey HSM. Use the gpgsm tool to sign, verify, encrypt and decrypt "
"files or S/MIME messaging using your Nitrokey HSM. Use a signature key on"
" a Nitrokey HSM to sign documents using Acrobat Reader, Open Office / "
"Libre Office or any other PDF reader supporting electronic signatures. "
"ECC HSM Encryptor"
msgstr ""
"Начиная с версии 2.1, GnuPG имеет встроенную, но ограниченную поддержку "
"Nitrokey HSM. Используйте инструмент gpgsm для подписи, проверки, "
"шифрования и расшифровки файлов или сообщений S/MIME с помощью Nitrokey "
"HSM. Используйте ключ подписи на Nitrokey HSM для подписания документов с"
" помощью Acrobat Reader, Open Office / Libre Office или любого другого "
"PDF-ридера, поддерживающего электронные подписи. Шифратор ECC HSM"

#: ../to-be-integrated.rst:692
msgid ""
"ECC HSM Encryptor is a small application to encrypt and decrypt files "
"with a Nitrokey HSM."
msgstr ""
"ECC HSM Encryptor - это небольшое приложение для шифрования и расшифровки"
" файлов с помощью Nitrokey HSM."

#: ../to-be-integrated.rst:694
msgid ""
"**Q:** How to do certificat-based Web login Protect access to sensitive "
"information on your website with 2nd factor authentication."
msgstr ""
"**Q:** Как сделать веб-логин на основе сертификатов Защитите доступ к "
"конфиденциальной информации на вашем сайте с помощью двухфакторной "
"аутентификации."

#: ../to-be-integrated.rst:697
msgid ""
"Use a Nitrokey HSM as authentication token via the build-in device "
"authentication PKI or use keys and certificates on a Nitrokey HSM for "
"TLS/SSL client authentication."
msgstr ""
"Используйте Nitrokey HSM в качестве маркера аутентификации с помощью "
"встроенной PKI аутентификации устройства или используйте ключи и "
"сертификаты на Nitrokey HSM для аутентификации клиентов TLS/SSL."

#: ../to-be-integrated.rst:699
msgid ""
"**Q:** SSH for Server Administration with windows For: Nitrokey Pro, "
"Nitrokey Storage, Nitrokey Start, Nitrokey HSM"
msgstr ""
"**Q:** SSH для администрирования сервера с помощью windows Для: Nitrokey "
"Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM"

#: ../to-be-integrated.rst:702
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"На Nitrokey уже должны быть установлены ключи PGP, а локальная связка "
"ключей GnuPG должна знать об этих ключах, то есть в системе должен быть "
"установлен GPG4Win (необходимо только основное приложение GnuPG). Кроме "
"того, необходимо установить PuTTY. Подготовка на клиенте"

#: ../to-be-integrated.rst:724
msgid "**Q:** SSH Server administration on linux"
msgstr "**Q:** Администрирование сервера SSH в linux"

#: ../to-be-integrated.rst:771
msgid "**Q:** DNSSEC"
msgstr "**Q:** DNSSEC"

#: ../to-be-integrated.rst:774
msgid "For: Nitrokey HSM"
msgstr "Для: Nitrokey HSM"

#: ../to-be-integrated.rst:776
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resource apply:"
msgstr ""
"Защитите разрешение доменных имен с помощью DNSSEC и Nitrokey HSM в "
"качестве безопасного хранилища ключей. Он основан на Smartcard-HSM, "
"поэтому к нему применим следующий ресурс:"

#: ../to-be-integrated.rst:778
msgid ""
"Signing NSD DNSSEC Zones with Nitrokey HSM by Vadim Penzin. Integration "
"with OpenDNSSEC has been successfully tested in a demo by Richard Lamb. "
"Luis D Espinoza Sanchez & Eberhard W Lisse held a session on using the "
"SmartCard-HSM for DNSSEC at the 2015 ICAAN Meeting in Singapore. Jan-Piet"
" Mens wrote a nice article about integrating the SmartCard-HSM with "
"PowerDNS."
msgstr ""
"Подписание зон NSD DNSSEC с помощью Nitrokey HSM от Вадима Пензина. "
"Интеграция с OpenDNSSEC была успешно протестирована в демонстрационном "
"ролике Ричарда Ламба. Luis D Espinoza Sanchez & Eberhard W Lisse провели "
"сессию по использованию SmartCard-HSM для DNSSEC на встрече ICAAN 2015 в "
"Сингапуре. Ян-Пит Менс написал хорошую статью об интеграции SmartCard-HSM"
" с PowerDNS."

#: ../to-be-integrated.rst:784
msgid ""
"**Q:** Physical Access Control With it's unique build-in device "
"authentication PKI, a Nitrokey HSM has a cryptographically protected "
"unique identity that can be verified in a fast authentication protocol. "
"An access control terminal can verify authenticity and identity of the "
"device, create a secure communication channel and perform offline PIN "
"verification. The coolPACS project has all the details."
msgstr ""
"**Q:** Контроль физического доступа Благодаря уникальной встроенной PKI "
"аутентификации устройства, Nitrokey HSM имеет криптографически защищенную"
" уникальную идентификацию, которая может быть проверена в протоколе "
"быстрой аутентификации. Терминал контроля доступа может проверить "
"подлинность и идентичность устройства, создать защищенный канал связи и "
"выполнить автономную проверку PIN-кода. Проект coolPACS содержит все "
"подробности."

#: ../to-be-integrated.rst:787 ../to-be-integrated.rst:883
msgid "**Q:**"
msgstr "**Q:**"

#: ../to-be-integrated.rst:885
msgid "PKI / Certificate Authority (CA)"
msgstr "PKI / центр сертификации (CA)"

#: ../to-be-integrated.rst:887
msgid "**Q:** Secret Management and Cloud Infrastructure"
msgstr "**Q:** Управление секретами и облачная инфраструктура"

#: ../to-be-integrated.rst:889
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey "
"HSM can be found at banzaicloud.com."
msgstr ""
"Подход к защите ключей для Hashicorp Vault/Bank-Vault на Nitrokey HSM "
"можно найти на сайте banzaicloud.com."

#: ../to-be-integrated.rst:891
msgid "**Q:** How to do N-of-m Schemes"
msgstr "**Вопрос:** Как сделать N-of-m схем"

#: ../to-be-integrated.rst:893
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure"
" sharing of key material/passwords and one for public key authentication "
"to control the access to the device. Please see this blog post for more "
"detailed information. N-of-m for DKEK Shares"
msgstr ""
"Nitrokey HSM 2 поддерживает две различные схемы n-of-m - одну для "
"безопасного обмена ключевым материалом/паролями и другую для "
"аутентификации с открытым ключом для контроля доступа к устройству. Более"
" подробную информацию см. в этой статье блога. N-of-m для обмена DKEK"

#: ../to-be-integrated.rst:896
msgid ""
"This feature can be used with OpenSC as described here. The general "
"approach is seen in the videos below (external links)."
msgstr ""
"Эта функция может быть использована с OpenSC, как описано здесь. Общий "
"подход можно увидеть в видеороликах ниже (внешние ссылки)."

#: ../to-be-integrated.rst:898
msgid "Nitrokey HSM's Secure Key Backup and Restore:"
msgstr "Nitrokey HSM's Secure Key Backup and Restore:"

#: ../to-be-integrated.rst:900
msgid "Screencast"
msgstr "Скринкаст"

#: ../to-be-integrated.rst:902
msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
msgstr "Nitrokey HSM's M-of-N Threshold Scheme:"

#: ../to-be-integrated.rst:904
msgid "screencast N-of-m for public key authentication"
msgstr "скринкаст N-of-m для аутентификации с открытым ключом"

#: ../to-be-integrated.rst:907
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. The blog post"
" gives an overview and a how-to here (CDN access required) is shown the "
"process step by step in the Smart Card Shell. For OpenSC there is a "
"ticket to get that integrated."
msgstr ""
"Пока n-of-m аутентификация поддерживается только в OpenSCDP. В статье в "
"блоге дается обзор, а здесь (требуется доступ к CDN) пошагово показан "
"процесс в Smart Card Shell. Для OpenSC есть тикет, чтобы получить эту "
"интеграцию."

#: ../to-be-integrated.rst:909
msgid ""
"n-of-m authentication is also supported in the PKI-as-a-Service Portal "
"for locally and remote connected HSMs. The PKI-as-a-Service Portal is "
"based on OpenSCDP."
msgstr ""
"Аутентификация n-of-m также поддерживается в PKI-as-a-Service Portal для "
"локально и удаленно подключенных HSM. Портал PKI-as-a-Service Portal "
"основан на OpenSCDP."

#: ../to-be-integrated.rst:911
msgid "**Q:** How to safe Cryptocurrences in the Nitrokey HSM"
msgstr "**В:** Как обезопасить криптовалюты в Nitrokey HSM"

#: ../to-be-integrated.rst:914
msgid ""
"J.v.d.Bosch wrote a simple, free python program to secure the private key"
" of a Bitcoin wallet in a HSM. See here for further information. Using "
"the HSM in an Ethereum PoA Chain. Tezos has been reported to work with "
"Nitrokey HSM."
msgstr ""
"J.v.d.Bosch написал простую, бесплатную программу на языке python для "
"защиты закрытого ключа кошелька Bitcoin в HSM. Дополнительную информацию "
"см. здесь. Использование HSM в цепочке Ethereum PoA. Сообщалось, что "
"Tezos работает с Nitrokey HSM."

#: ../to-be-integrated.rst:918
msgid ""
"**Q:** How to use the True Random Number Generator? Nitrokey HSM can be "
"used with Botan and TokenTools by using OpenSC as a PKCS#11 driver."
msgstr ""
"**В:** Как использовать генератор истинных случайных чисел? Nitrokey HSM "
"можно использовать с Botan и TokenTools, используя OpenSC в качестве "
"драйвера PKCS#11."

#: ../to-be-integrated.rst:921
msgid ""
"OpenSSL can't use Nitrokey HSM's RNG directly because engine-pkcs11 "
"doesn't contain a mapping for OpenSSL to C_GenerateRandom."
msgstr ""
"OpenSSL не может'использовать Nitrokey HSM's RNG напрямую, потому что "
"engine-pkcs11 не содержит отображения для OpenSSL на C_GenerateRandom."

#: ../to-be-integrated.rst:923
msgid "**Q:** What can I use for development and integration?"
msgstr "**В:** Что я могу использовать для разработки и интеграции?"

#: ../to-be-integrated.rst:925
msgid ""
"se OpenSC's commandline tools If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. Depending on your Linux "
"distribution, the PKCS driver may may be located at /usr/lib/x86_64"
"-linux-gnu/opensc-pkcs11.so for example."
msgstr ""
"se OpenSC's commandline tools Если ваше приложение имеет интерфейс "
"PKCS#11, используйте драйвер OpenSC's PKCS#11. В зависимости от вашего "
"дистрибутива Linux, драйвер PKCS может находиться, например, по адресу "
"/usr/lib/x86_64-linux-gnu/opensc-pkcs11.so."

#: ../to-be-integrated.rst:927
msgid ""
"Alternatively to OpenSC, you might use sc-hsm-embedded PKCS#11 and CSP-"
"Minidriver Module."
msgstr ""
"В качестве альтернативы OpenSC можно использовать sc-hsm-embedded PKCS#11"
" и CSP-Minidriver Module."

#: ../to-be-integrated.rst:928
msgid ""
"In case you use Java, you find a JCE Provider as part of Smart Card "
"Shell. You can find information about the m-of-n scheme here. Secure "
"Messaging can be used with the JCE provider. Please register at the "
"CardContact Developer Network to get access to the user manual and "
"further tools. You can also request the manual from us. Smart card "
"forwarding with Fedora A user generated tool on GitHub to provide an easy"
" frontend to OpenSCs toolset - nitrotool A forum post describes the "
"procedure to sign executables with a key stored on HSM on Windows."
msgstr ""
"Если вы используете Java, вы найдете JCE Provider как часть Smart Card "
"Shell. Информацию о схеме m-of-n можно найти здесь. С помощью провайдера "
"JCE можно использовать безопасный обмен сообщениями. Пожалуйста, "
"зарегистрируйтесь в CardContact Developer Network, чтобы получить доступ "
"к руководству пользователя и другим инструментам. Вы также можете "
"запросить руководство у нас. Пересылка смарт-карт в Fedora Созданный "
"пользователем инструмент на GitHub для обеспечения легкого фронтенда к "
"набору инструментов OpenSCs - nitrotool Сообщение на форуме описывает "
"процедуру подписи исполняемых файлов ключом, хранящимся на HSM в Windows."

#: ../to-be-integrated.rst:936
msgid "Key Use Counter"
msgstr "Счетчик ключевого использования"

#: ../to-be-integrated.rst:938
msgid ""
"The Key Use Counter is displayed in the Key Manager of the Smart Card "
"Shell. At the moment you can only set it with a script "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter in the class "
"scsh/sc-hsm/SmartCardHSM.js)."
msgstr ""
"Счетчик использования ключей отображается в менеджере ключей оболочки "
"смарт-карты. В настоящее время его можно установить только с помощью "
"скрипта (SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter в классе"
" scsh/sc-hsm/SmartCardHSM.js)."

#: ../to-be-integrated.rst:940
msgid ""
"In our PKCS#11 module there is a proprietary attribute "
"CKA_SC_HSM_KEY_USE_COUNTER with the key use of the C_GenerateKeyPair "
"counter can be set. The attribute can then also be set for a key can be "
"queried."
msgstr ""
"В нашем модуле PKCS#11 есть собственный атрибут "
"CKA_SC_HSM_KEY_USE_COUNTER, с помощью которого можно установить счетчик "
"использования ключа C_GenerateKeyPair. Этот атрибут также может быть "
"установлен для запроса ключа."

#: ../to-be-integrated.rst:942
msgid ""
"In OCF and the JCE Provider, the Key Use Counter can be queried with "
"SmartCardHSMKey.getUseCounter() and confirm with "
"SmartCardHSMKeySpec.setKeyUseCounter() can be set."
msgstr ""
"В OCF и JCE Provider счетчик использования ключей можно запросить с "
"помощью SmartCardHSMKey.getUseCounter() и подтвердить с помощью "
"SmartCardHSMKeySpec.setKeyUseCounter()."

#~ msgid "# storage"
#~ msgstr "# хранилище"

#~ msgid "Configure Hidden Volumes:"
#~ msgstr "Настройте скрытые тома:"

#~ msgid ""
#~ "Unlock encrypted volume from the "
#~ "Nitrokey App menu. Select \"setup hidden"
#~ " volume\". Now you need to enter "
#~ "a new password twice to protect "
#~ "your hidden volume. The password "
#~ "strength is indicated below."
#~ msgstr ""
#~ "Разблокируйте зашифрованный том из меню "
#~ "приложения Nitrokey. Выберите \"настроить "
#~ "скрытый том\". Теперь вам нужно дважды"
#~ " ввести новый пароль для защиты "
#~ "скрытого тома. Надежность пароля указана "
#~ "ниже."

#~ msgid ""
#~ "Note: PINs can only be tried three"
#~ " times only which is why they "
#~ "can be short. Passwords like used "
#~ "for hidden devices can potentially be"
#~ " attacked unlimited which is why they"
#~ " need to be sufficiently strong."
#~ msgstr ""
#~ "Примечание: PIN-код можно попробовать только"
#~ " три раза, поэтому он может быть "
#~ "коротким. Пароли, например, используемые для"
#~ " скрытых устройств, потенциально могут быть"
#~ " атакованы неограниченно, поэтому они "
#~ "должны быть достаточно сильными."

#~ msgid ""
#~ "Next you need to define the "
#~ "storage area being used. Hidden volumes"
#~ " are stored in the empty space "
#~ "of the encrypted volume. This is a"
#~ " critical choice because it could "
#~ "destroy data on the (not-hidden) "
#~ "encrypted volume and reveal the "
#~ "existience of the hidden volume."
#~ msgstr ""
#~ "Далее необходимо определить используемую "
#~ "область хранения. Скрытые тома хранятся "
#~ "в пустом пространстве зашифрованного тома. "
#~ "Это критический выбор, поскольку он "
#~ "может уничтожить данные на (не скрытом)"
#~ " зашифрованном томе и раскрыть "
#~ "существование скрытого тома."

#~ msgid ""
#~ "You should use one FAT32 partition "
#~ "on your encrypted volume as journaling"
#~ " filesystems, especially NTFS, may destroy"
#~ " the encrypted data. Copy some files"
#~ " to the encrypted volume prior to "
#~ "creating the hidden volume. Once you "
#~ "configured a hidden volume you shouldn't"
#~ " add or change files on the "
#~ "encrypted volume anymore. Identify the "
#~ "storage space your files consume on "
#~ "the encrypted volume. For example: 10%"
#~ " The hiden volume should start after"
#~ " your files on the encrypted volume."
#~ " For example: 10% files + 10% "
#~ "buffer = 20% The hidden volume "
#~ "should end in a distance before "
#~ "the end of the storage. For "
#~ "example: 90%"
#~ msgstr ""
#~ "На зашифрованном томе следует использовать "
#~ "один раздел FAT32, поскольку журналирующие "
#~ "файловые системы, особенно NTFS, могут "
#~ "уничтожить зашифрованные данные. Скопируйте "
#~ "некоторые файлы на зашифрованный том до"
#~ " создания скрытого тома. После настройки"
#~ " скрытого тома вы не должны больше"
#~ " добавлять или изменять файлы на "
#~ "зашифрованном томе. Определите место для "
#~ "хранения, которое занимают ваши файлы на"
#~ " зашифрованном томе. Например: 10% Скрытый"
#~ " том должен начинаться после ваших "
#~ "файлов на зашифрованном томе. Например: "
#~ "10% файлов + 10% буфера = 20% "
#~ "Скрытый том должен заканчиваться на "
#~ "расстоянии до конца хранилища. Например: "
#~ "90%"

#~ msgid ""
#~ "In case you use two or more "
#~ "hidden volumes, note that their storage"
#~ " area must not overlap. Otherwise "
#~ "they would override and destroy each "
#~ "other's data. Each hidden volume would"
#~ " require a different password."
#~ msgstr ""
#~ "Если вы используете два или более "
#~ "скрытых тома, обратите внимание, что их"
#~ " область хранения не должна пересекаться."
#~ " В противном случае они будут "
#~ "перекрывать и уничтожать данные друг "
#~ "друга'. Для каждого скрытого тома "
#~ "потребуется свой пароль."

#~ msgid "Usage of Hidden Volumes:"
#~ msgstr "Использование скрытых томов:"

#~ msgid ""
#~ "Select \"unlock encrypted volume\" and "
#~ "enter your User PIN. Select \"unlock "
#~ "hidden volume\" and enter any of "
#~ "the hidden volume's passwords. If this"
#~ " is the first time you may need"
#~ " to create a partition on the "
#~ "hidden volume. Windows will open an "
#~ "appropriate window and ask you to "
#~ "do so. On Linux and Mac OS "
#~ "you may need to open a partition"
#~ " manager and create a partition "
#~ "manually. You can create as many "
#~ "partitions as you want. We recommend "
#~ "FAT(32) if you want to access the"
#~ " partition from various operating systems."
#~ " Make sure to unmount/eject all "
#~ "partitions on the hidden volumes before"
#~ " locking or disconnecting the Nitrokey."
#~ msgstr ""
#~ "Выберите \"разблокировать зашифрованный том\" "
#~ "и введите PIN-код пользователя. Выберите "
#~ "\"разблокировать скрытый том\" и введите "
#~ "любой из паролей скрытого тома'. Если"
#~ " это первый раз, вам может "
#~ "потребоваться создать раздел на скрытом "
#~ "томе. Windows откроет соответствующее окно "
#~ "и попросит вас сделать это. В "
#~ "Linux и Mac OS вам может "
#~ "понадобиться открыть менеджер разделов и "
#~ "создать раздел вручную. Вы можете "
#~ "создать столько разделов, сколько захотите."
#~ " Мы рекомендуем FAT(32), если вы "
#~ "хотите иметь доступ к разделу из "
#~ "различных операционных систем. Перед "
#~ "блокировкой или отключением Nitrokey "
#~ "обязательно размонтируйте/отсоедините все разделы"
#~ " на скрытых томах."

#~ msgid "Also see older but comprehensive Nitrokey Storage manual."
#~ msgstr ""
#~ "Также смотрите более старое, но "
#~ "исчерпывающее руководство Nitrokey Storage."

