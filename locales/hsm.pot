# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-15 17:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../hsm/certificate-authority.rst:2
#: ../hsm/certificate-authority.rst:2
#: ../hsm/certificate-authority.rst:2
#: ../hsm/certificate-authority.rst:2
msgid "Creating a Certificate Authority"
msgstr ""

#: ../hsm/certificate-authority.rst:8
#: ../hsm/certificate-authority.rst:8
#: ../hsm/certificate-authority.rst:8
#: ../hsm/certificate-authority.rst:8
msgid "This article shows you how to setup your own private certificate authority backed by a Nitrokey HSM. This certificate authority has no automation and does not really scale. Other open source projects can be referenced for automation and scalability."
msgstr ""

#: ../hsm/certificate-authority.rst:11
#: ../hsm/certificate-authority.rst:11
#: ../hsm/certificate-authority.rst:11
#: ../hsm/certificate-authority.rst:11
msgid "Choose Cryptographic Algorithms"
msgstr ""

#: ../hsm/certificate-authority.rst:13
#: ../hsm/certificate-authority.rst:13
#: ../hsm/certificate-authority.rst:13
#: ../hsm/certificate-authority.rst:13
msgid "I’m going to assume that you’re as paranoid as I am, so I will be using the following command for generating private keys:"
msgstr ""

#: ../hsm/certificate-authority.rst:19
#: ../hsm/certificate-authority.rst:19
#: ../hsm/certificate-authority.rst:19
#: ../hsm/certificate-authority.rst:19
msgid "But, if you’re less paranoid that I am, you can safely choose the following options:"
msgstr ""

#: ../hsm/certificate-authority.rst:26
#: ../hsm/certificate-authority.rst:26
#: ../hsm/certificate-authority.rst:26
#: ../hsm/certificate-authority.rst:26
msgid "Likewise, I will be using the sha512 algorithm throughout this article, but sha256 can safely be used."
msgstr ""

#: ../hsm/certificate-authority.rst:29
#: ../hsm/certificate-authority.rst:29
#: ../hsm/certificate-authority.rst:29
#: ../hsm/certificate-authority.rst:29
msgid "Preparing to Start"
msgstr ""

#: ../hsm/certificate-authority.rst:31
#: ../hsm/certificate-authority.rst:31
#: ../hsm/certificate-authority.rst:31
#: ../hsm/certificate-authority.rst:31
msgid "To start with, you need to pick a directory to store your CA."
msgstr ""

#: ../hsm/certificate-authority.rst:42
#: ../hsm/certificate-authority.rst:42
#: ../hsm/certificate-authority.rst:42
#: ../hsm/certificate-authority.rst:42
msgid "Install the necessary tools:"
msgstr ""

#: ../hsm/certificate-authority.rst:53
#: ../hsm/certificate-authority.rst:53
#: ../hsm/certificate-authority.rst:53
#: ../hsm/certificate-authority.rst:53
msgid "Creating the Root Certificate Authority"
msgstr ""

#: ../hsm/certificate-authority.rst:55
#: ../hsm/certificate-authority.rst:55
#: ../hsm/certificate-authority.rst:55
#: ../hsm/certificate-authority.rst:55
msgid "We start by generating the private key for the certificate authority directly on the Nitrokey HSM. This allows us to use the private key in the future, but not access it."
msgstr ""

#: ../hsm/certificate-authority.rst:78
#: ../hsm/certificate-authority.rst:78
#: ../hsm/certificate-authority.rst:78
#: ../hsm/certificate-authority.rst:78
msgid "Note the ID number (e0161cc8b6f5d66ac6835ecdecb623fc0506a675), we’ll need it later."
msgstr ""

#: ../hsm/certificate-authority.rst:80
#: ../hsm/certificate-authority.rst:235
#: ../hsm/certificate-authority.rst:80
#: ../hsm/certificate-authority.rst:235
#: ../hsm/certificate-authority.rst:80
#: ../hsm/certificate-authority.rst:235
#: ../hsm/certificate-authority.rst:80
#: ../hsm/certificate-authority.rst:235
msgid "If you need the ID in the future, you can list the keys on the Nitrokey HSM:"
msgstr ""

#: ../hsm/certificate-authority.rst:86
#: ../hsm/certificate-authority.rst:241
#: ../hsm/certificate-authority.rst:86
#: ../hsm/certificate-authority.rst:241
#: ../hsm/certificate-authority.rst:86
#: ../hsm/certificate-authority.rst:241
#: ../hsm/certificate-authority.rst:86
#: ../hsm/certificate-authority.rst:241
msgid "We need to create a config file to generate a self-signed public certificate."
msgstr ""

#: ../hsm/certificate-authority.rst:92
#: ../hsm/certificate-authority.rst:247
#: ../hsm/certificate-authority.rst:92
#: ../hsm/certificate-authority.rst:247
#: ../hsm/certificate-authority.rst:92
#: ../hsm/certificate-authority.rst:247
#: ../hsm/certificate-authority.rst:92
#: ../hsm/certificate-authority.rst:247
msgid "Fill out the request information in <angle brackets> with information for your CA."
msgstr ""

#: ../hsm/certificate-authority.rst:152
#: ../hsm/certificate-authority.rst:152
#: ../hsm/certificate-authority.rst:152
#: ../hsm/certificate-authority.rst:152
msgid "Generate the self-signed public certificate from the private key. Use the private key id value from earlier."
msgstr ""

#: ../hsm/certificate-authority.rst:160
#: ../hsm/certificate-authority.rst:160
#: ../hsm/certificate-authority.rst:160
#: ../hsm/certificate-authority.rst:160
msgid "Verify that the root certificate was generated correctly. Verify that Signature-Algorithm matches above and below. Verify that Issuer and Subject match, all root certificates are self signed. Verify that Key Usage matches what was in the v3_ca information in our config file."
msgstr ""

#: ../hsm/certificate-authority.rst:208
#: ../hsm/certificate-authority.rst:208
#: ../hsm/certificate-authority.rst:208
#: ../hsm/certificate-authority.rst:208
msgid "Creating the Intermediate Certificate Authority"
msgstr ""

#: ../hsm/certificate-authority.rst:210
#: ../hsm/certificate-authority.rst:210
#: ../hsm/certificate-authority.rst:210
#: ../hsm/certificate-authority.rst:210
msgid "We continue by generating the private key for the intermediate certificate authority directly on the Nitrokey HSM. This allows us to use the private key in the future, but not access it."
msgstr ""

#: ../hsm/certificate-authority.rst:233
#: ../hsm/certificate-authority.rst:233
#: ../hsm/certificate-authority.rst:233
#: ../hsm/certificate-authority.rst:233
msgid "Note the ID number (bcb48fe9b566ae61891aabbfde6a23d4ff3ab639), we’ll need it later."
msgstr ""

#: ../hsm/certificate-authority.rst:274
#: ../hsm/certificate-authority.rst:274
#: ../hsm/certificate-authority.rst:274
#: ../hsm/certificate-authority.rst:274
msgid "Generate the certificate signing request for the intermediate CA from the intermediate CA’s private key. Use the private key ID value from earlier."
msgstr ""

#: ../hsm/certificate-authority.rst:282
#: ../hsm/certificate-authority.rst:282
#: ../hsm/certificate-authority.rst:282
#: ../hsm/certificate-authority.rst:282
msgid "Verify that the CSR was created correctly. Verify that your Subject is correct. Verify that your Public Key and Signature Algorithm are correct."
msgstr ""

#: ../hsm/certificate-authority.rst:315
#: ../hsm/certificate-authority.rst:520
#: ../hsm/certificate-authority.rst:315
#: ../hsm/certificate-authority.rst:520
#: ../hsm/certificate-authority.rst:315
#: ../hsm/certificate-authority.rst:520
#: ../hsm/certificate-authority.rst:315
#: ../hsm/certificate-authority.rst:520
msgid "We need to find out the fully qualified PKCS#11 URI for your private key:"
msgstr ""

#: ../hsm/certificate-authority.rst:353
#: ../hsm/certificate-authority.rst:558
#: ../hsm/certificate-authority.rst:353
#: ../hsm/certificate-authority.rst:558
#: ../hsm/certificate-authority.rst:353
#: ../hsm/certificate-authority.rst:558
#: ../hsm/certificate-authority.rst:353
#: ../hsm/certificate-authority.rst:558
msgid "In this instance, the fully qualified PKCS#11 URI is:"
msgstr ""

#: ../hsm/certificate-authority.rst:359
#: ../hsm/certificate-authority.rst:359
#: ../hsm/certificate-authority.rst:359
#: ../hsm/certificate-authority.rst:359
msgid "Now, we need to create a config file to use the private key of the root certificate to sign the csr of the intermediate certificate."
msgstr ""

#: ../hsm/certificate-authority.rst:411
#: ../hsm/certificate-authority.rst:411
#: ../hsm/certificate-authority.rst:411
#: ../hsm/certificate-authority.rst:411
msgid "Then sign the intermediate certificate with the root certificate."
msgstr ""

#: ../hsm/certificate-authority.rst:451
#: ../hsm/certificate-authority.rst:451
#: ../hsm/certificate-authority.rst:451
#: ../hsm/certificate-authority.rst:451
msgid "Verify that the root certificate was generated correctly. Verify that the Issuer and Subject are different, and correct. Verify that the Key Usage matches the config file. Verify that the signature algorithm are correct above and below."
msgstr ""

#: ../hsm/certificate-authority.rst:498
#: ../hsm/certificate-authority.rst:498
#: ../hsm/certificate-authority.rst:498
#: ../hsm/certificate-authority.rst:498
msgid "Verify that the intermediate certificate verifies against the root certificate."
msgstr ""

#: ../hsm/certificate-authority.rst:505
#: ../hsm/certificate-authority.rst:505
#: ../hsm/certificate-authority.rst:505
#: ../hsm/certificate-authority.rst:505
msgid "Create a certificate chain file:"
msgstr ""

#: ../hsm/certificate-authority.rst:511
#: ../hsm/certificate-authority.rst:511
#: ../hsm/certificate-authority.rst:511
#: ../hsm/certificate-authority.rst:511
msgid "You now have a certificate authority backed by an HSM."
msgstr ""

#: ../hsm/certificate-authority.rst:514
#: ../hsm/certificate-authority.rst:514
#: ../hsm/certificate-authority.rst:514
#: ../hsm/certificate-authority.rst:514
msgid "Sign a Server Certificate"
msgstr ""

#: ../hsm/certificate-authority.rst:516
#: ../hsm/certificate-authority.rst:516
#: ../hsm/certificate-authority.rst:516
#: ../hsm/certificate-authority.rst:516
msgid "Now that you have a certificate authority, you’d probably like to know how to use it."
msgstr ""

#: ../hsm/certificate-authority.rst:518
#: ../hsm/certificate-authority.rst:518
#: ../hsm/certificate-authority.rst:518
#: ../hsm/certificate-authority.rst:518
msgid "Create a CSR in the normal method for your application. Proper creation of your certificate, including SAN, for your particular application is outside the scope of this document."
msgstr ""

#: ../hsm/certificate-authority.rst:564
#: ../hsm/certificate-authority.rst:564
#: ../hsm/certificate-authority.rst:564
#: ../hsm/certificate-authority.rst:564
msgid "Create a config file to use the private key of the intermediate certificate to sign the CSRs of your servers."
msgstr ""

#: ../hsm/certificate-authority.rst:619
#: ../hsm/certificate-authority.rst:619
#: ../hsm/certificate-authority.rst:619
#: ../hsm/certificate-authority.rst:619
msgid "Then run openssl to sign the server’s CSR."
msgstr ""

#: ../hsm/certificate-authority.rst:668
#: ../hsm/certificate-authority.rst:668
#: ../hsm/certificate-authority.rst:668
#: ../hsm/certificate-authority.rst:668
msgid "References"
msgstr ""

#: ../hsm/certificate-authority.rst:670
#: ../hsm/certificate-authority.rst:670
#: ../hsm/certificate-authority.rst:670
#: ../hsm/certificate-authority.rst:670
msgid "I used the following resources to help in compiling this document."
msgstr ""

#: ../hsm/certificate-authority.rst:672
#: ../hsm/certificate-authority.rst:672
#: ../hsm/certificate-authority.rst:672
#: ../hsm/certificate-authority.rst:672
msgid "`How to initialize your Nitrokey HSM <https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-device>`__"
msgstr ""

#: ../hsm/certificate-authority.rst:674
#: ../hsm/certificate-authority.rst:674
#: ../hsm/certificate-authority.rst:674
#: ../hsm/certificate-authority.rst:674
msgid "`How to create a root and intermediate CA <https://jamielinux.com/docs/openssl-certificate-authority/create-the-root-pair.html>`__"
msgstr ""

#: ../hsm/certificate-authority.rst:676
#: ../hsm/certificate-authority.rst:676
#: ../hsm/certificate-authority.rst:676
#: ../hsm/certificate-authority.rst:676
msgid "`How to ensure the serial numbers of your intermediate CA and server certs are up to spec <https://www.phildev.net/ssl/creating_ca.html>`__"
msgstr ""

#: ../hsm/certificate-authority.rst:679
#: ../hsm/certificate-authority.rst:679
#: ../hsm/certificate-authority.rst:679
#: ../hsm/certificate-authority.rst:679
msgid "`How to generate ECC private keys <https://dev.to/benjaminblack/obtaining-an-elliptic-curve-dsa-certificate-with-lets-encrypt-51bc>`__"
msgstr ""

#: ../hsm/certificate-authority.rst:681
#: ../hsm/certificate-authority.rst:681
#: ../hsm/certificate-authority.rst:681
#: ../hsm/certificate-authority.rst:681
msgid "`How to find the PCKS11 URI from your HSM <https://www.infradead.org/openconnect/pkcs11.html>`__"
msgstr ""

#: ../hsm/certificate-authority.rst:683
#: ../hsm/certificate-authority.rst:683
#: ../hsm/certificate-authority.rst:683
#: ../hsm/certificate-authority.rst:683
msgid "`Troubleshooting (forum) <https://support.nitrokey.com/t/pki-ca-nitrokey-hsm-does-not-support-signing/2598/14>`__"
msgstr ""

#: ../hsm/certificate-authority.rst:686
#: ../hsm/certificate-authority.rst:686
#: ../hsm/certificate-authority.rst:686
#: ../hsm/certificate-authority.rst:686
msgid "This document was originally `written by lyntux <https://gist.github.com/lyntux/f02c6c3414ce48bc8ea8ab6dcdba1623>`__."
msgstr ""

#: ../hsm/index.rst:2
msgid "Nitrokey HSM 2"
msgstr ""

#: ../hsm/index.rst:6
msgid "Choose your operating system:"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:2
msgid "Automatic Screen Lock at Removal"
msgstr ""

#: ../hsm/linux/product_platform_heading.rst:3
#: ../hsm/linux/product_platform_heading.rst:3
#: ../hsm/linux/product_platform_heading.rst:3
#: ../hsm/linux/product_platform_heading.rst:3
#: ../hsm/linux/product_platform_heading.rst:3
msgid "(Nitrokey HSM 2 - Linux)"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:8
msgid "This guide will walk you through the configuration of your computer, to automatically lock your session when you remove the Nitrokey."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:10
msgid "The configuration requires the creation of two files under two different directories."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:13
msgid "Requirements"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:15
msgid "Ubuntu 20.04 or Debian 10 (Buster), both with `Gnome Display Manager <https://wiki.gnome.org/Projects/GDM>`__ installed."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:18
msgid "Nitrokey Pro 2, Nitrokey Storage 2, or Nitrokey HSM 2"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:21
msgid "Configuration"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:24
msgid "Create the ``.rules`` file"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:26
msgid "With your favorite text editor create a file called ``85-nitrokey.rules``"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:32
msgid "Add the following line to the file"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:38
msgid "Save the file and quit the editor."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:40
msgid "This file sets up a new hardware rule that executes the ``gnome-screensaver-lock`` at removal of the Nitrokey device."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:42
msgid "You should change the configuration according to the device you are using as following:"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:44
msgid "Nitrokey Pro: ``ENV{PRODUCT}==\"20a0/4108/101\"``"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:45
msgid "Nitrokey HSM: ``ENV{PRODUCT}==\"20a0/4230/101\"``"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:46
msgid "Nitrokey Storage: ``ENV{PRODUCT}==\"20a0/4109/101\"``"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:49
msgid "Create the ``gnome-screensaver-lock`` script"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:51
msgid "With your favorite text editor create a file called ``gnome-screensaver-lock``"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:57
msgid "Add the following text"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:67
msgid "In the first step, this script looks for the user-name of the gnome session, i.e. ``user``."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:69
msgid "When it is called at Nitrokey removal, the script queries ``user``, switches to its session, and locks the screen by prompting the screen-saver screen."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:72
msgid "Execute the script"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:74
msgid "Once all set up, execute the script once, and it will lock the screen. It does not matter if the Nitrokey is plugged or not for this first execution."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:77
#: ../pro/smime.rst:57
#: ../pro/smime-thunderbird.rst:45
#: ../pro/smime.rst:57
#: ../pro/smime-outlook.rst:36
#: ../pro/smime-thunderbird.rst:45
#: ../pro/smime.rst:57
#: ../pro/smime-outlook.rst:36
#: ../pro/smime-thunderbird.rst:45
msgid "Usage"
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:79
msgid "By now you can log back to your session by entering your password, and (re)plug you Nitrokey if you did not do it before."
msgstr ""

#: ../pro/linux/automatic-screen-lock.rst:81
msgid "The next time(s) you unplug your Nitrokey from the computer, it will automatically lock the screen."
msgstr ""

#: ../pro/gpa.rst:2
#: ../pro/gpa.rst:2
#: ../pro/gpa.rst:2
msgid "Setup with Gnu Privacy Assistant (GPA)"
msgstr ""

#: ../pro/gpa.rst:4
#: ../pro/gpa.rst:4
#: ../pro/gpa.rst:4
msgid "This document describes how to use Gnu Privacy Assistant (GPA) to set up the Nitrokey for its first usage."
msgstr ""

#: ../pro/gpa.rst:6
#: ../pro/gpa.rst:6
#: ../pro/gpa.rst:6
msgid "First you need to install Gnu Privacy Assistant (GPA). For Windows you should download and install the `GPG4Win <http://gpg4win.org/>`_ package which contains GPA. For Linux you should install the GPA package of your distribution (e.g. on Ubuntu: sudo apt-get install gpa )."
msgstr ""

#: ../pro/gpa.rst:8
#: ../pro/gpa.rst:8
#: ../pro/gpa.rst:8
msgid "Start GPA and select the Card Manager; either by pressing the icon at the top or by choosing Card Manager in the Windows menu."
msgstr ""

#: ../pro/gpa.rst:13
#: ../pro/gpa.rst:13
#: ../pro/gpa.rst:13
msgid "The window of the Card Manager will appear. Enter your salutation, name and optional other information. While doing so you might be asked to enter the admin PIN."
msgstr ""

#: ../pro/gpa.rst:18
#: ../pro/gpa.rst:18
#: ../pro/gpa.rst:18
msgid "Confirm this window and enter the admin PIN in the next window."
msgstr ""

#: ../pro/gpa.rst:23
#: ../pro/gpa.rst:23
#: ../pro/gpa.rst:23
msgid "In the Card Manager window you might need to scroll down until you see the buttons to change the PINs. The term PIN is used interchangeable with \"password\". Press the first button \"Change PIN\" in order to change the user password. Read and confirm the following information window."
msgstr ""

#: ../pro/gpa.rst:28
#: ../pro/gpa.rst:28
#: ../pro/gpa.rst:28
msgid "Choose and enter your own PIN with a minimum length of six characters. This PIN is required for the daily usage of the Nitrokey."
msgstr ""

#: ../pro/gpa.rst:33
#: ../pro/gpa.rst:33
#: ../pro/gpa.rst:33
msgid "Go back to the Card Manager window in step three. This time you choose the third button Change PIN in order to change the admin PIN. The admin PIN is required to change the information on the Nitrokey and to change the cryptographic keys. Proceed as described in steps four and five."
msgstr ""

#: ../pro/gpa.rst:35
#: ../pro/gpa.rst:35
#: ../pro/gpa.rst:35
msgid "After changing both the user and the admin PIN, you are back in the Card Manager window. Select \"Generate key\" in the \"Card\" menu."
msgstr ""

#: ../pro/gpa.rst:40
#: ../pro/gpa.rst:40
#: ../pro/gpa.rst:40
msgid "Enter your name and e-mail address. You should keep \"backup\" enabled in order to create a backup file of your cryptographic keys. Optionally you might select an expiration date for your cryptographic keys."
msgstr ""

#: ../pro/gpa.rst:45
#: ../pro/gpa.rst:45
#: ../pro/gpa.rst:45
msgid "Wait until the keys are generated successfully."
msgstr ""

#: ../pro/gpa.rst:50
#: ../pro/gpa.rst:50
#: ../pro/gpa.rst:50
msgid "Enter a strong passphrase for your backup keys. We strongly recommend to store the backup file on a separate storage(e.g. CD-ROM) and on a safe location."
msgstr ""

#: ../pro/gpa.rst:55
#: ../pro/gpa.rst:55
#: ../pro/gpa.rst:55
msgid "Congratulations, your Nitrokey is now ready to use. Please see the `applications <https://www.nitrokey.com/documentation/applications>`_ section for further information of its usage."
msgstr ""

#: ../hsm/linux/index.rst:2
msgid "Nitrokey HSM with GNU/Linux"
msgstr ""

#: ../hsm/linux/index.rst:13
msgid "Install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__. You need at least version 0.19. You can find recent builds for debian-based systems like Ubuntu `here <https://github.com/Nitrokey/opensc-build>`__ if your system does not have the newest version of OpenSC. Alternatively, install `this <https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`__ driver (`source <https://github.com/CardContact/sc-hsm-embedded>`__)."
msgstr ""

#: ../hsm/linux/index.rst:20
#: ../hsm/mac/index.rst:17
#: ../hsm/windows/index.rst:17
msgid "Define SO-PIN and PIN of your own choices. See `these instructions <https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-device>`__. Afterwards you can begin to `generate new keys <https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#generate-key-pair>`__."
msgstr ""

#: ../hsm/linux/index.rst:25
#: ../hsm/mac/index.rst:22
#: ../hsm/windows/index.rst:22
msgid "Your Nitrokey is now ready to use. `Checkout <https://www.nitrokey.com/documentation/applications>`__ the various use cases and supported applications."
msgstr ""

#: ../pro/smime.rst:2
#: ../pro/smime.rst:2
#: ../pro/smime.rst:2
msgid "S/MIME Email Encryption"
msgstr ""

#: ../pro/smime.rst:9
#: ../pro/smime-thunderbird.rst:9
#: ../pro/smime.rst:9
#: ../pro/smime-outlook.rst:9
#: ../pro/smime-thunderbird.rst:9
#: ../pro/smime.rst:9
#: ../pro/smime-outlook.rst:9
#: ../pro/smime-thunderbird.rst:9
msgid "Prerequisites"
msgstr ""

#: ../pro/smime.rst:11
#: ../pro/smime.rst:11
#: ../pro/smime.rst:11
msgid "There are two widely used standards for email encryption."
msgstr ""

#: ../pro/smime.rst:13
#: ../pro/smime.rst:13
#: ../pro/smime.rst:13
msgid "OpenPGP/GnuPG is popular among individuals,"
msgstr ""

#: ../pro/smime.rst:15
#: ../pro/smime.rst:15
#: ../pro/smime.rst:15
msgid "S/MIME/X.509 is mostly used by enterprises."
msgstr ""

#: ../pro/smime.rst:17
#: ../pro/smime.rst:17
#: ../pro/smime.rst:17
msgid "If you are in doubt which one to choose, you should use OpenPGP, see `here <https://docs.nitrokey.com/pro/openpgp.html>`__. This page describes the usage of S/MIME email encryption."
msgstr ""

#: ../pro/smime.rst:19
#: ../pro/smime.rst:19
#: ../pro/smime.rst:19
msgid "You need to purchase a S/MIME certificate or may already got one by your company. Furthermore, you need to install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__ on your System. While GNU/Linux users usually can install OpenSC over the package manager (e.g. ``sudo apt install opensc`` on Ubuntu), macOS and Windows users can download the installation files from the `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__ page."
msgstr ""

#: ../pro/smime.rst:22
#: ../pro/smime-thunderbird.rst:17
#: ../pro/smime.rst:22
#: ../pro/smime-outlook.rst:17
#: ../pro/smime-thunderbird.rst:17
#: ../pro/smime.rst:22
#: ../pro/smime-outlook.rst:17
#: ../pro/smime-thunderbird.rst:17
msgid "Windows users with 64-bit system (standard) need to install both, the 32-bit and the 64-bit version of OpenSC!"
msgstr ""

#: ../pro/smime.rst:25
#: ../pro/smime.rst:25
#: ../pro/smime.rst:25
msgid "Import Existing Key and Certificate"
msgstr ""

#: ../pro/smime.rst:27
#: ../pro/smime.rst:27
#: ../pro/smime.rst:27
msgid "The following instructions are based on the `wiki of OpenSC <https://github.com/OpenSC/OpenSC/wiki/OpenPGP-card>`__. We will assume, that you already got a key-certificate pair as a .p12 file. Please have a look at the wiki page, if you got a separate key and certificate file."
msgstr ""

#: ../pro/smime.rst:29
#: ../pro/smime.rst:29
#: ../pro/smime.rst:29
msgid "To open the Windows command line please push the Windows-key and R-key. Now type ‘cmd.exe’ in the text field and hit enter. To open a Terminal on macOS or GNU/Linux please use the application search (e.g. spotlight on macOS)."
msgstr ""

#: ../pro/smime.rst:31
#: ../pro/smime.rst:31
#: ../pro/smime.rst:31
msgid "To make these commands as simple as possible, the .p12 file needs to be in your home folder. On Windows this is usually ‘C:\\Users\\yourusername’ and on macOS and GNU/Linux system it will be ‘/home/yourusername’. If you do not store the .p12 file there, you have to adapt the path in the commands below. Please plug in the Nitrokey before submitting the commands."
msgstr ""

#: ../pro/smime.rst:33
#: ../pro/smime.rst:33
#: ../pro/smime.rst:33
msgid "Assuming that your key-certificate file reads ‘myprivate.p12’ the commands for Windows looks like this:"
msgstr ""

#: ../pro/smime.rst:40
#: ../pro/smime.rst:40
#: ../pro/smime.rst:40
msgid "and on macOS and GNU/Linux it will be"
msgstr ""

#: ../pro/smime.rst:47
#: ../pro/smime.rst:47
#: ../pro/smime.rst:47
msgid "The two commands copy the key-certificate pair to the slot 2 (needed for decrypting emails) and slot 3 (needed for signing). The output looks on both systems something like this:"
msgstr ""

#: ../pro/smime.rst:54
#: ../pro/smime.rst:54
#: ../pro/smime.rst:54
msgid "Please note that there will be error messages that can be safely ignored (see output example above). You now have the key-certificate pair loaded on the Nitrokey."
msgstr ""

#: ../pro/smime.rst:59
#: ../pro/smime.rst:59
#: ../pro/smime.rst:59
msgid "You can find further information about the usage on these pages:"
msgstr ""

#: ../pro/smime.rst:61
#: ../pro/smime.rst:61
#: ../pro/smime.rst:61
msgid "for using `S/MIME encryption on Thunderbird <https://docs.nitrokey.com/pro/smime-thunderbird.html>`__"
msgstr ""

#: ../pro/smime.rst:64
#: ../pro/smime.rst:64
#: ../pro/smime.rst:64
msgid "for using `S/MIME encryption on Outlook <https://docs.nitrokey.com/pro/smime-outlook.html>`__"
msgstr ""

#: ../pro/smime.rst:67
#: ../pro/smime.rst:67
#: ../pro/smime.rst:67
msgid "for using `Evolution <https://help.gnome.org/users/evolution/stable/mail-encryption.html.en>`__, an email client for the Gnome Desktop on Linux systems"
msgstr ""

#: ../pro/smime.rst:72
#: ../pro/smime.rst:72
#: ../pro/smime.rst:72
msgid "Troubleshooting"
msgstr ""

#: ../pro/smime.rst:74
#: ../pro/smime.rst:74
#: ../pro/smime.rst:74
msgid "On Windows: Did you install **both**, the 32-bit and the 64-bit version of OpenSC?"
msgstr ""

#: ../pro/smime.rst:77
#: ../pro/smime.rst:77
#: ../pro/smime.rst:77
msgid "Nitrokey Storage 2: You need to install OpenSC in version 0.18 or higher. You can find the files on the `OpenSC website <https://github.com/OpenSC/OpenSC/releases>`__ for Windows and macOS user or `here <https://github.com/Nitrokey/opensc-build>`__ for Debian/Ubuntu users."
msgstr ""

#: ../pro/smime-thunderbird.rst:2
#: ../pro/smime-thunderbird.rst:2
#: ../pro/smime-thunderbird.rst:2
msgid "S/MIME Email Encryption with Thunderbird"
msgstr ""

#: ../pro/smime-thunderbird.rst:11
#: ../pro/smime-thunderbird.rst:11
#: ../pro/smime-thunderbird.rst:11
msgid "If you do not have a S/MIME key-certificate pair installed on your Nitrokey yet or if you did not installed OpenSC, please look at `this page <https://docs.nitrokey.com/pro/smime.html>`__ first."
msgstr ""

#: ../pro/smime-thunderbird.rst:13
#: ../pro/smime-thunderbird.rst:13
#: ../pro/smime-thunderbird.rst:13
msgid "You need to have `OpenSC installed <https://github.com/OpenSC/OpenSC/wiki>`__ on your System. While GNU/Linux users usually can install OpenSC over the package manager (e.g. ``sudo apt update && sudo apt install opensc`` on Ubuntu), macOS and Windows users can download the installation files from OpenSC directly."
msgstr ""

#: ../pro/smime-thunderbird.rst:21
#: ../pro/smime-thunderbird.rst:21
#: ../pro/smime-thunderbird.rst:21
msgid "Settings in Thunderbird"
msgstr ""

#: ../pro/smime-thunderbird.rst:23
#: ../pro/smime-thunderbird.rst:23
#: ../pro/smime-thunderbird.rst:23
msgid "Before you can use the Nitrokey in Thunderbird you have to activate S/MIME encryption in the account settings. You can achieve this by clicking on the menu and go to ‘Preferences’ -> ‘Account Settings’ and clicking on ‘Security’ in the account settings window."
msgstr ""

#: ../pro/smime-thunderbird.rst:30
#: ../pro/smime-thunderbird.rst:30
#: ../pro/smime-thunderbird.rst:30
msgid "Click on “Security Devices” to import the right PCKS11 module. Click on “Load” on the right-hand side. Now give the Module a name (like “OpenSC Module”) and click on “Browse” to choose the location of the Module (see below)."
msgstr ""

#: ../pro/smime-thunderbird.rst:37
#: ../pro/smime-thunderbird.rst:37
#: ../pro/smime-thunderbird.rst:37
msgid "On Windows the right file lays under “C:\\Windows\\System32\\opensc-pkcs11.dll”. On macOS and GNU/Linux the file should be in “/lib/pkcs11/opensc-pkcs11.so” or “/usr/lib/pkcs11/opensc-pkcs11.so” or alike. Press “OK” twice and you are back in security section of the account settings. Now you can actually choose a certificate on the upper part of the window. You should get asked for a PIN to unlock your Nitrokey. Please type in your User PIN."
msgstr ""

#: ../pro/smime-thunderbird.rst:47
#: ../pro/smime-thunderbird.rst:47
#: ../pro/smime-thunderbird.rst:47
msgid "When composing an email you can now choose to encrypt and sign the message."
msgstr ""

#: ../hsm/mac/product_platform_heading.rst:3
#: ../hsm/mac/product_platform_heading.rst:3
#: ../hsm/mac/product_platform_heading.rst:3
#: ../hsm/mac/product_platform_heading.rst:3
#: ../hsm/mac/product_platform_heading.rst:3
msgid "(Nitrokey HSM 2 - macOS)"
msgstr ""

#: ../hsm/mac/index.rst:2
msgid "Nitrokey HSM with macOS"
msgstr ""

#: ../hsm/mac/index.rst:13
#: ../hsm/windows/index.rst:13
msgid "Install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__. Alternatively, install `this <https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`__ driver (`source <https://github.com/CardContact/sc-hsm-embedded>`__)."
msgstr ""

#: ../pro/smime-outlook.rst:2
#: ../pro/smime-outlook.rst:2
msgid "S/MIME Email Encryption with Outlook"
msgstr ""

#: ../pro/smime-outlook.rst:11
#: ../pro/smime-outlook.rst:11
msgid "If you do not have a S/MIME key-certificate pair installed on your Nitrokey yet, please look at `this page <https://docs.nitrokey.com/pro/smime.html>`__ first."
msgstr ""

#: ../pro/smime-outlook.rst:13
#: ../pro/smime-outlook.rst:13
msgid "You need to have OpenSC installed on your System. Please have a look at the `wiki page of the OpenSC project <https://github.com/OpenSC/OpenSC/wiki>`__."
msgstr ""

#: ../pro/smime-outlook.rst:21
#: ../pro/smime-outlook.rst:21
msgid "Settings in Outlook"
msgstr ""

#: ../pro/smime-outlook.rst:23
#: ../pro/smime-outlook.rst:23
msgid "Before you can use the Nitrokey in Outlook you have to activate S/MIME encryption. You can achieve this by clicking on to ‘Start’ -> ‘Options’ and clicking on ‘Trust Center’ in the options window. In section ‘Email Security’ you can choose your S/MIME identity. Your certificate should already be recognized by Outlook."
msgstr ""

#: ../pro/smime-outlook.rst:38
#: ../pro/smime-outlook.rst:38
msgid "When composing a mail you can now choose to encrypt and sign the message in the ‘Options’ ribbon of the compose window."
msgstr ""

#: ../pro/smime-outlook.rst:45
#: ../pro/smime-outlook.rst:45
msgid "Outlook will only encrypt message to mail addresses which are saved in your address book. So make sure, that the persons you want to write an encrypted mail to have an entry in Outlook’s contacts. You can ask the person to write you a signed mail, so that you can import the certificate information."
msgstr ""

#: ../pro/smime-outlook.rst:47
#: ../pro/smime-outlook.rst:47
msgid "Depending on your certificate or the certificate of your partners you may have to import a so-called root certificate. This is the certificate of the party which issued the certificate you or your partner uses. You should usually got informed if this is necessary."
msgstr ""

#: ../hsm/windows/product_platform_heading.rst:3
#: ../hsm/windows/product_platform_heading.rst:3
#: ../hsm/windows/product_platform_heading.rst:3
#: ../hsm/windows/product_platform_heading.rst:3
#: ../hsm/windows/product_platform_heading.rst:3
#: ../hsm/windows/product_platform_heading.rst:3
msgid "(Nitrokey HSM 2 - Windows)"
msgstr ""

#: ../hsm/windows/index.rst:2
msgid "Nitrokey HSM with Windows"
msgstr ""

#: ../pro/smart-policy.rst:2
msgid "Login to Windows Domain Computers With MS Active Directory"
msgstr ""

#: ../pro/smart-policy.rst:8
msgid "Download and install the latest `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__."
msgstr ""

#: ../pro/smart-policy.rst:10
msgid "Use a text editor to add the following settings to *C:\\Program Files:\\OpenSC Project\\OpenSC\\opensc.conf*."
msgstr ""

#: ../pro/smart-policy.rst:49
msgid "Open a command terminal and enter “regedit”. Use regedit to import `this file <https://www.nitrokey.com/sites/default/files/nk-hsm.reg>`__."
msgstr ""

#: ../pro/smart-policy.rst:52
msgid "Now you can enroll Nitrokeys for your users managed in Microsoft Active Directory. You may either use Microsoft PKI, `gpgsm <https://www.gnupg.org/documentation/manuals/gnupg/Howto-Create-a-Server-Cert.html>`__, or `Smart Policy <http://www.mysmartlogon.com/products/smart-policy.html>`__. The following steps describe the usage of Smart Policy."
msgstr ""

#: ../pro/smart-policy.rst:58
msgid "`Download <http://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-%20Stage%203.exe>`__ and install Smart Policy."
msgstr ""

#: ../pro/smart-policy.rst:60
msgid "Select “Read a smart card”"
msgstr ""

#: ../pro/smart-policy.rst:67
msgid "Select the certificate, mapping, and user."
msgstr ""

#: ../pro/smart-policy.rst:74
msgid "Verify the device status via CRL."
msgstr ""

#: ../pro/smart-policy.rst:81
msgid "Choose a Group Policy Object (GPO)."
msgstr ""

#: ../pro/smart-policy.rst:88
msgid "Confirm applying the mapping."
msgstr ""

#: ../pro/smart-policy.rst:95
msgid "From now on, when logging on to your Windows computer you need to connect the Nitrokey and enter your PIN."
msgstr ""

