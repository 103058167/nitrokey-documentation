# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-31 15:35+0100\n"
"PO-Revision-Date: 2022-01-26 11:44+0000\n"
"Last-Translator: Ben (Weblate Admin) <ben@dotplex.com>\n"
"Language: lt\n"
"Language-Team: Lithuanian <https://translate.nitrokey.com/projects"
"/nitrokey-documentation/documentation-to-be-integrated/lt/>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"(n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../to-be-integrated.rst:1
msgid "# pro"
msgstr "# pro"

#: ../to-be-integrated.rst:5
msgid "PKCS#11 Driver"
msgstr "PKCS#11 tvarkyklė"

#: ../to-be-integrated.rst:7
msgid ""
"If you want to use S/MIME email encryption with Thunderbird, to use "
"TrueCrypt/VeraCrypt, certificate-based SSL authentication with Firefox, "
"PuTTY/KiTTY, OpenSSH, OpenSSL, or any other PKCS#11 compatible software, "
"you should install OpenSC."
msgstr ""
"Jei norite naudoti S/MIME el. pašto šifravimą su \"Thunderbird\", "
"\"TrueCrypt\" / \"VeraCrypt\", sertifikatais pagrįstą SSL autentifikavimą"
" su \"Firefox\", \"PuTTY / KiTTY\", \"OpenSSH\", \"OpenSSL\" ar bet kuria"
" kita su PKCS#11 suderinama programine įranga, turėtumėte įdiegti "
"\"OpenSC\"."

#: ../to-be-integrated.rst:9
msgid ""
"Note that a Nitrokey initialized with OpenSC doesn't work with "
"GnuPG/OpenPGP. But the other way around works fine. If you want to use "
"Nitrokey with both GnuPG and PKCS#11, generate the keys with GnuPG."
msgstr ""
"Atkreipkite dėmesį, kad \"Nitrokey\" raktas, inicializuotas naudojant "
"\"OpenSC\", neveikia su \"GnuPG/OpenPGP\". Tačiau atvirkščiai - veikia "
"gerai. Jei norite naudoti \"Nitrokey\" ir su GnuPG, ir su PKCS#11, "
"generuokite raktus su GnuPG."

#: ../to-be-integrated.rst:11
msgid ""
"Don't use PKCS#11 in parallel with GnuPG because both may interfere and "
"unexpected issues may result. (There is another promising project scd-"
"pkcs11 in development which may overcome this limitation eventually. "
"Currently it's limit to the authentication certificate and not widely "
"tested yet.)"
msgstr ""
"Nenaudokite PKCS#11 lygiagrečiai su GnuPG, nes abi sistemos gali trukdyti"
" ir gali kilti netikėtų problemų. (Kuriamas kitas perspektyvus projektas "
"scd-pkcs11, kuris galiausiai gali įveikti šį apribojimą. Šiuo metu jis "
"apsiriboja autentifikavimo sertifikatu ir dar nėra plačiai išbandytas.)"

#: ../to-be-integrated.rst:13
msgid ""
"Instructions, how to create a valid X.509 certificate with Nitrokey (1, "
"2, 3). These are general instructions how to use X.509 certificates. "
"Alternative PKCS#11 Driver:"
msgstr ""
"Instrukcijos, kaip sukurti galiojantį X.509 sertifikatą naudojant "
"\"Nitrokey\" (1, 2, 3). Tai bendri nurodymai, kaip naudoti X.509 "
"sertifikatus. Alternatyvi PKCS#11 tvarkyklė:"

#: ../to-be-integrated.rst:16
msgid "The recommended PKCS#11 driver is OpenSC."
msgstr "Rekomenduojama PKCS#11 tvarkyklė yra \"OpenSC\"."

#: ../to-be-integrated.rst:18
msgid "Windows Mini Driver"
msgstr "\"Windows\" mini tvarkyklė"

#: ../to-be-integrated.rst:20
msgid ""
"This Mini Driver allows to integrate Nitrokey with Window's certificate "
"store. Subsequently all applications which use this certificate storage "
"can be used with Nitrokey (e.g. Internet Explorer, Google Chrome web "
"browser, Windows Login). To install the driver, you may need to allow the"
" installation of unsigned drivers first. Aloaha"
msgstr ""
"Ši mini tvarkyklė leidžia integruoti \"Nitrokey\" su \"Window\" "
"sertifikatų Storage. Vėliau visos programos, kurios naudoja šią "
"sertifikatų saugyklą, gali būti naudojamos su \"Nitrokey\" (pvz., "
"\"Internet Explorer\", \"Google Chrome\" interneto naršyklė, \"Windows "
"Login\"). Norint įdiegti tvarkyklę, pirmiausia gali tekti leisti įdiegti "
"nepasirašytas tvarkykles. Aloaha"

#: ../to-be-integrated.rst:23
msgid ""
"All applications of Aloaha are working with the Nitrokey. This includes a"
" middleware to integrate Nitrokey with other PKCS#11 based applications "
"and with Windows as well as applications to encrypt and sign PDFs and the"
" hard disk."
msgstr ""
"Visos \"Aloaha\" programos veikia su \"Nitrokey\". Tai apima tarpinę "
"programinę įrangą, skirtą integruoti \"Nitrokey\" su kitomis PKCS#11 "
"pagrįstomis programomis ir \"Windows\", taip pat su programomis, "
"skirtomis PDF ir kietajam diskui šifruoti ir pasirašyti."

#: ../to-be-integrated.rst:25
msgid "Alternative PKCS#11 Driver:"
msgstr "Alternatyvi PKCS#11 tvarkyklė:"

#: ../to-be-integrated.rst:27
msgid ""
"The recommended PKCS#11 driver is OpenSC. Alternatively, you could use "
"Peter Koch's PKCS#11 driver which has the following limitations:"
msgstr ""
"Rekomenduojama PKCS#11 tvarkyklė yra \"OpenSC\". Taip pat galite naudoti "
"Peterio Kocho PKCS#11 tvarkyklę, kuri turi šiuos apribojimus:"

#: ../to-be-integrated.rst:29
msgid ""
"No import of existing X.509 certificates. (Instead, keys have to be "
"generated on the Nitrokey) The Linux version does not allow to generate "
"keys. Modification of the password/PIN under Linux is not possible."
msgstr ""
"Neimportuojami esami X.509 sertifikatai. (vietoj to raktai turi būti "
"generuojami \"Nitrokey\") \"Linux\" versija neleidžia generuoti raktų. "
"Keisti slaptažodžio / PIN kodo \"Linux\" sistemoje negalima."

#: ../to-be-integrated.rst:33
msgid "p11-glue"
msgstr "p11-klijai"

#: ../to-be-integrated.rst:35
msgid ""
"P11-glue uses PKCS#11 as glue between crypto libraries and security "
"applications on the open source desktop. Articles in German"
msgstr ""
"\"P11-glue\" naudoja PKCS#11 kaip klijus tarp kriptografinių bibliotekų "
"ir saugumo programų atvirojo kodo darbalaukyje. Straipsniai vokiečių "
"kalba"

#: ../to-be-integrated.rst:38
msgid ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."
msgstr ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."

#: ../to-be-integrated.rst:44
msgid "**Q:** How can I login into Windows?"
msgstr "**Q:** Kaip prisijungti prie \"Windows\"?"

#: ../to-be-integrated.rst:44
msgid ""
"To access Nitrokey devices read-only, download and install this Mini "
"Driver (CSP). If you are using Windows Server you may need to disable the"
" driver signature verification before being able to install the driver. "
"Note that the Mini Driver for Nitrokey Pro may not work yet for write "
"mode."
msgstr ""
"Norėdami pasiekti \"Nitrokey\" įrenginius tik skaitymo režimu, "
"atsisiųskite ir įdiekite šią mini tvarkyklę (CSP). Jei naudojate "
"\"Windows Server\", prieš diegiant tvarkyklę gali tekti išjungti "
"tvarkyklės parašo tikrinimą. Atkreipkite dėmesį, kad \"Nitrokey Pro\" "
"mini tvarkyklė dar gali neveikti rašymo režimu."

#: ../to-be-integrated.rst:46
msgid "There exist different ways to use a Nitrokey to logon on Windows:"
msgstr ""
"Yra įvairių būdų, kaip \"Nitrokey\" naudoti prisijungimui prie "
"\"Windows\":"

#: ../to-be-integrated.rst:48
msgid ""
"Login on stand alone Windows computers based on EIDAuthenticate. "
"Alternatively install OpenSC and use Aloaha Smart Login's PKCS#11 "
"Credentials. Login on Windows domain computers using MS Active Directory "
"based OpenPGP-CSP minidriver for Nitrokey Storage 2 Nitrokey Pro 2 Login "
"on Windows domain computers using MS Active Directory based on Smart "
"Policy for other Nitrokey devices."
msgstr ""
"Prisijungimas prie savarankiškų \"Windows\" kompiuterių pagal "
"\"EIDAuthenticate\". Arba įdiekite \"OpenSC\" ir naudokite \"Aloaha Smart"
" Login's PKCS#11 įgaliojimus. Prisijungimas \"Windows\" domeno "
"kompiuteriuose naudojant \"MS Active Directory\" pagrįstą \"OpenPGP-CSP\""
" minivaldiklį \"Nitrokey Storage 2 Nitrokey Pro 2\" Prisijungimas "
"\"Windows\" domeno kompiuteriuose naudojant \"MS Active Directory\" "
"pagrįstą \"Smart Policy\", skirtą kitiems \"Nitrokey\" įrenginiams."

#: ../to-be-integrated.rst:53
msgid "**Q:** How can I login into Linux? Linux Login with PAM"
msgstr ""
"**Q:** Kaip prisijungti prie \"Linux\"? Prisijungimas prie \"Linux\" "
"naudojant PAM"

#: ../to-be-integrated.rst:56
msgid "You have two options: pam_p11 or Poldi."
msgstr "Galite rinktis iš dviejų variantų: pam_p11 arba Poldi."

#: ../to-be-integrated.rst:58
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on "
"S/MIME certificates. Please have a look at the documentation for more "
"information."
msgstr ""
"Sprendimas su pam_p11 yra sudėtingesnis ir pagrįstas S/MIME "
"sertifikatais. Daugiau informacijos rasite dokumentuose."

#: ../to-be-integrated.rst:60
msgid ""
"Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication with "
"RSA keys (see Troubleshooting for information on ECC keys). Besides the "
"installation of poldi (e.g. 'sudo apt-get install libpam-poldi' on "
"Ubuntu) the following steps are needed to get it working."
msgstr ""
"Poldi 0.4.1 nepriekaištingai veikia su \"Nitrokey\" PAM autentifikavimui "
"su RSA raktais (informacijos apie ECC raktus ieškokite skyriuje Trikčių "
"sprendimas). Be poldi diegimo (pvz., 'sudo apt-get install libpam-poldi' "
"Ubuntu), reikia atlikti šiuos veiksmus, kad jis pradėtų veikti."

#: ../to-be-integrated.rst:62
msgid ""
"It is necessary to already have keys generated on the Nitrokey, as the "
"authentication key is used by PAM."
msgstr ""
"Būtina, kad \"Nitrokey\" jau būtų sugeneruoti raktai, nes autentifikavimo"
" raktą naudoja PAM."

#: ../to-be-integrated.rst:64
msgid ""
"At first you need to find out the \"Application ID\" of your Nitrokey. "
"You can use \"gpg --card-status | grep Application\" to find out what's "
"yours. It looks like 'D00600012401020000000000xxxxxxxx' or similiar. Now "
"you have to add a line to /etc/poldi/localdb/users which contains the "
"following information"
msgstr ""
"Pirmiausia turite sužinoti savo \"Nitrokey\" programos ID\". Galite "
"naudoti \"gpg --card-status | grep Application\", kad sužinotumėte, koks "
"yra jūsų raktas. Jis atrodo kaip 'D006000124010200000000000000xxxxxxxxxx'"
" arba panašiai. Dabar į /etc/poldi/localdb/users reikia įrašyti eilutę, "
"kurioje būtų tokia informacija"

#: ../to-be-integrated.rst:66
msgid "<YourApplicationID> <YourUsername>"
msgstr "<YourApplicationID> <YourUsername>"

#: ../to-be-integrated.rst:68
msgid ""
"This could look like 'D00600012401020000000000xxxxxxxx nitrokeyuser'. Now"
" dump the public key from the Nitrokey into poldi local db:"
msgstr ""
"Tai gali atrodyti taip 'D006000124010200000000000000xxxxxxxx "
"nitrokeyuser'. Dabar išmeskite viešąjį raktą iš Nitrokey į poldi vietinę "
"db:"

#: ../to-be-integrated.rst:70
msgid ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye'"
msgstr ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \" \"SCD READKEY --advanced"
" OPENPGP.3\" /bye'"

#: ../to-be-integrated.rst:72
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick!"
msgstr ""
"Atkreipkite dėmesį, kad eilutėje viršuje turite įrašyti savo paraiškos ID"
" su savo lazdelės ID!"

#: ../to-be-integrated.rst:74
msgid ""
"Then you have to configure PAM. Just add \"auth sufficient pam_poldi.so\""
" to pam configuration files according to your needs:"
msgstr ""
"Tada reikia sukonfigūruoti PAM. Tiesiog pridėkite \"auth sufficient "
"pam_poldi.so\" į pam konfigūracijos failus pagal savo poreikius:"

#: ../to-be-integrated.rst:76
msgid ""
"/etc/pam.d/common-auth for graphical user login /etc/pam.d/login for "
"console login /etc/pam.d/sudo for sudo authentication /etc/pam.d/gnome-"
"screensaver for login back from a locked screen etc."
msgstr ""
"/etc/pam.d/common-auth grafiniam vartotojo prisijungimui /etc/pam.d/login"
" prisijungimui prie konsolės /etc/pam.d/sudo sudo autentifikavimui "
"/etc/pam.d/gnome-screensaver prisijungimui iš užrakinto ekrano ir t. t."

#: ../to-be-integrated.rst:82
msgid ""
"Note: Pam is dangerous to play around with, so make sure you have a way "
"of accessing the machine if you break authentication completely. Remember"
" that booting into rescue mode from Grub requires a root password, so "
"keep that or a live CD which can read your filesystems to hand."
msgstr ""
"Pastaba: su Pam yra pavojinga žaisti, todėl įsitikinkite, kad turite "
"būdą, kaip patekti į kompiuterį, jei visiškai sugadinsite "
"autentifikaciją. Nepamirškite, kad įkraunant į gelbėjimo režimą iš "
"\"Grub\" reikia turėti root slaptažodį, todėl turėkite jį arba gyvą "
"kompaktinį diską, galintį skaityti failų sistemas."

#: ../to-be-integrated.rst:84
msgid ""
"Here you find further instructions (in German, partially outdated). "
"Troubleshooting"
msgstr ""
"Čia rasite tolesnes instrukcijas (vokiečių kalba, iš dalies neaktualios)."
" Trikčių šalinimas"

#: ../to-be-integrated.rst:87
msgid ""
"If you get an error similar to 'ERR 100663414 Invalid ID <SCD>' you "
"should try instead"
msgstr ""
"Jei gaunate klaidą, panašią į 'ERR 100663414 Invalid ID <SCD>', "
"turėtumėte pabandyti"

#: ../to-be-integrated.rst:89
msgid ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"
msgstr ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"

#: ../to-be-integrated.rst:91
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick! ECC Keys Unfortunately, poldi has no "
"support for ECC keys yet. But there is a patch for ECC keys used with "
"Nitrokey Start. This is already included in the master branch of the "
"poldi development repository and thus will be released in a newer version"
" eventually. In the meantime the only option is to build poldi from "
"source."
msgstr ""
"Atkreipkite dėmesį, kad eilutėje viršuje turite įrašyti savo paraiškos ID"
" su savo lazdelės ID! ECC raktai Deja, \"poldi\" dar nepalaiko ECC raktų."
" Tačiau yra pataisa, skirta ECC raktams, naudojamiems su \"Nitrokey "
"Start\". Jis jau įtrauktas į pagrindinę poldi kūrimo saugyklos šaką, "
"todėl ilgainiui bus išleistas naujesnėje versijoje. Tuo tarpu vienintelė "
"galimybė yra sukurti \"poldi\" iš pirminio šaltinio."

#: ../to-be-integrated.rst:97
msgid "**Q:** How can I login with One Time Passwords?"
msgstr "**Q:** Kaip prisijungti naudojant vienkartinius slaptažodžius?"

#: ../to-be-integrated.rst:97
msgid ""
"One-Time-Passwords (OTP) are used for secure login to websites and local "
"applications."
msgstr ""
"Vienkartiniai slaptažodžiai (OTP) naudojami saugiam prisijungimui prie "
"svetainių ir vietinių programų."

#: ../to-be-integrated.rst:99
msgid "Two OTP modes exist:"
msgstr "Yra du OTP režimai:"

#: ../to-be-integrated.rst:101
msgid ""
"Time-based One-time Passwords (TOTP) is widely used for websites. If "
"unsure, assume you are using this mode. HMAC-based One-time Passwords "
"(HOTP) is used for local applications and computer logins."
msgstr ""
"Vienkartiniai slaptažodžiai, pagrįsti laiku (TOTP), plačiai naudojami "
"interneto svetainėse. Jei nesate tikri, manykite, kad naudojate šį "
"režimą. HMAC pagrįsti vienkartiniai slaptažodžiai (HMAC-based One-time "
"Passwords, HOTP) naudojami vietinėms programoms ir kompiuterių "
"prisijungimams."

#: ../to-be-integrated.rst:104
msgid ""
"To use One-Time-Passwords with your Nitrokey Pro or Nitrokey Storage, you"
" need to download and install the latest Nitrokey App. Time-based One-"
"time Passwords - TOTP"
msgstr ""
"Norėdami naudoti vienkartinius slaptažodžius su \"Nitrokey Pro\" arba "
"\"Nitrokey\" Storage, turite atsisiųsti ir įdiegti naujausią \"Nitrokey\""
" programėlę. Vienkartiniai laiko slaptažodžiai - TOTP"

#: ../to-be-integrated.rst:107
msgid ""
"For login to a Google account. For login to a Microsoft account. For "
"login to a Nextcloud account. Generic instructions for all other "
"services."
msgstr ""
"Prisijungimui prie \"Google\" paskyros. Prisijungimui prie \"Microsoft\" "
"paskyros. Prisijungimui prie \"Nextcloud\" paskyros. Bendros instrukcijos"
" visoms kitoms paslaugoms."

#: ../to-be-integrated.rst:112
msgid "**Q:** How can I use the Nitrokey Pro with Android?"
msgstr "**Q:** Kaip naudoti \"Nitrokey Pro\" su \"Android\"?"

#: ../to-be-integrated.rst:114
msgid ""
"It is possible to use the Nitrokey on an Android devices in combination "
"with OpenKeychain. This enables one to encrypt/decrypt E-Mails or files "
"via OpenPGP."
msgstr ""
"\"Nitrokey\" galima naudoti \"Android\" įrenginiuose kartu su "
"\"OpenKeychain\". Taip galima šifruoti / iššifruoti el. laiškus arba "
"failus naudojant OpenPGP."

#: ../to-be-integrated.rst:116
msgid ""
"Cotech provides Android software with commercial support. Please have a "
"look there, if you like. The following instructions are based on "
"OpenKeychain."
msgstr ""
"\"Cotech\" teikia \"Android\" programinę įrangą su komerciniu palaikymu. "
"Jei norite, pažvelkite ten. Toliau pateiktos instrukcijos pagrįstos "
"\"OpenKeychain\"."

#: ../to-be-integrated.rst:118
msgid ""
"Tested with Nitrokey Start, Pro and Storage in combination with Android "
"7.1, OpenKeychain 4.5 and K9Mail 5.207. Prerequisites"
msgstr ""
"Išbandyta su \"Nitrokey Start\", \"Pro\" ir \"Storage\" kartu su "
"\"Android 7.1\", \"OpenKeychain 4.5\" ir \"K9Mail 5.207\". Būtinosios "
"sąlygos"

#: ../to-be-integrated.rst:121
msgid ""
"Android phone which is capable of USB OTG USB OTG cable to connect the "
"Nitrokey with your phone OpenKeychain installed on Device Public key "
"saved on the device or uploaded on a keyserver"
msgstr ""
"\"Android\" telefonas, kuriame galima naudoti USB OTG USB OTG laidas, "
"skirtas \"Nitrokey\" sujungti su telefonu Įrenginyje įdiegta "
"\"OpenKeychain\" Viešasis raktas, išsaugotas įrenginyje arba įkeltas į "
"raktų serverį."

#: ../to-be-integrated.rst:126
msgid "First steps"
msgstr "Pirmieji žingsniai"

#: ../to-be-integrated.rst:128
msgid ""
"To import the keys of the Nitrokey you should at first start the "
"OpenKeychain app. Then insert the Nitrokey with the USB OTG cable. "
"OpenKeychain starts a dialog to use the Nitrokey (you may have to accept "
"the usage of the key with OpenKeychain first). Now you can choose between"
" looking for public key on a keyserver or choosing the public key from "
"storage. After the public key got imported you have to tap on 'connect "
"key' to import a reference to the private key of the Nitrokey. That’s "
"basically it."
msgstr ""
"Norėdami importuoti \"Nitrokey\" raktus, pirmiausia turėtumėte paleisti "
"programą \"OpenKeychain\". Tada USB OTG kabeliu įdėkite \"Nitrokey\". "
"Programa \"OpenKeychain\" paleidžia dialogo langą, kad galėtumėte naudoti"
" \"Nitrokey\" raktą (iš pradžių gali tekti sutikti su rakto naudojimu su "
"\"OpenKeychain\"). Dabar galite pasirinkti, ar ieškoti viešojo rakto "
"raktų serveryje, ar pasirinkti viešąjį raktą iš saugyklos. Importavus "
"viešąjį raktą, reikia bakstelėti 'connect key', kad importuotumėte "
"nuorodą į \"Nitrokey\" privatųjį raktą. Tai iš esmės viskas."

#: ../to-be-integrated.rst:130
msgid ""
"In the case that no there are no keys on the Nitrokey yet, OpenKeychain "
"will help with the creation of a new key pair instead. Usage"
msgstr ""
"Jei \"Nitrokey\" rakte dar nėra raktų, \"OpenKeychain\" padės sukurti "
"naują raktų porą. Naudojimas"

#: ../to-be-integrated.rst:133
msgid ""
"You can use all functions of OpenKeychain and Apps which make use of "
"OpenKeychain. Therefore you can just encrypt/decrypt messages or files by"
" hand using the app directly or for example you combine K9Mail with "
"OpenKeychain to decrypt your mails automatically. It is important to "
"choose the right key in the K9Mail account settings first."
msgstr ""
"Galite naudotis visomis \"OpenKeychain\" funkcijomis ir programėlėmis, "
"kurios naudoja \"OpenKeychain\". Todėl galite tiesiog užšifruoti / "
"iššifruoti pranešimus ar failus rankiniu būdu, naudodamiesi tiesiogiai "
"programėle, arba, pavyzdžiui, galite sujungti \"K9Mail\" su "
"\"OpenKeychain\" ir automatiškai iššifruoti laiškus. Svarbu pirmiausia "
"K9Mail paskyros nustatymuose pasirinkti tinkamą raktą."

#: ../to-be-integrated.rst:135
msgid ""
"Note that you may have to enable the on-screen keyboard in the android "
"settings to type the PIN as the system recognizes the Nitrokey as a "
"physical keyboard and therefore tries to hide the on-screen keyboard. Go "
"to 'Language and Input' > 'Current Keyboard' > 'Hardware show input "
"method'."
msgstr ""
"Atkreipkite dėmesį, kad norint įvesti PIN kodą gali tekti įjungti ekrano "
"klaviatūrą \"Android\" nustatymuose, nes sistema atpažįsta \"Nitrokey\" "
"kaip fizinę klaviatūrą, todėl bando paslėpti ekrano klaviatūrą. Eikite į "
"'Language and Input' > 'Current Keyboard' > 'Hardware show input method'."

#: ../to-be-integrated.rst:138
msgid "**Q:** How can I use the Nitrokey Pro with Iphone?"
msgstr "**Q:** Kaip naudoti \"Nitrokey Pro\" su \"Iphone\"?"

#: ../to-be-integrated.rst:139
msgid "Currently it is not possible"
msgstr "Šiuo metu neįmanoma"

#: ../to-be-integrated.rst:141
msgid "**Q:** How can I use the Nitrokey Pro with Ubuntu Phone?"
msgstr "**Q:** Kaip naudoti \"Nitrokey Pro\" su \"Ubuntu Phone\"?"

#: ../to-be-integrated.rst:141
msgid ""
"There are instructions on gnupg.org about how to use a OpenPGP Card on a "
"UbuntuPhone which should work for the Nitrokey Start, Pro and Storage."
msgstr ""
"Yra gnupg.org instrukcijų, kaip naudoti OpenPGP kortelę UbuntuPhone, kuri"
" turėtų veikti Nitrokey Start, Pro ir Storage."

#: ../to-be-integrated.rst:143
msgid ""
"**Q:** How can I do Email encryption? There are two widely used standards"
" for email encryption. While OpenPGP/GnuPG is popular among individuals, "
"S/MIME/X.509 is mostly used by enterprises. If you are in doubt which one"
" to choose, you should use OpenPGP."
msgstr ""
"**Q:** Kaip atlikti el. pašto šifravimą? Yra du plačiai naudojami el. "
"pašto šifravimo standartai. OpenPGP/GnuPG populiarus tarp privačių "
"asmenų, o S/MIME/X.509 dažniausiai naudoja įmonės. Jei abejojate, kurį "
"pasirinkti, turėtumėte naudoti \"OpenPGP\"."

#: ../to-be-integrated.rst:146
msgid ""
"instructions for using the OpenPGP standard with the Nitrokey "
"instructions for using S/MIME with the Nitrokey. Note: SMIME certificates"
" can be purchased cheaply from CERTUM and SSLTrust."
msgstr ""
"OpenPGP standarto naudojimo su \"Nitrokey\" instrukcijos S/MIME naudojimo"
" su \"Nitrokey\" instrukcijos. Pastaba: SMIME sertifikatų galima "
"nebrangiai įsigyti iš CERTUM ir SSLTrust."

#: ../to-be-integrated.rst:149
msgid ""
"Please note, that it is currently advised to use either OpenPGP or S/MIME"
" encryption, but not both with the Nitrokey."
msgstr ""
"Atkreipkite dėmesį, kad šiuo metu su \"Nitrokey\" rekomenduojama naudoti "
"\"OpenPGP\" arba S/MIME šifravimą, bet ne abu."

#: ../to-be-integrated.rst:151
msgid "To use a Nitrokey Storage with Thunderbird 78+, you can try this tutorial."
msgstr ""
"Norėdami naudoti \"Nitrokey\" saugyklą su \"Thunderbird 78+\", galite "
"išbandyti šią pamoką."

#: ../to-be-integrated.rst:153
msgid "**Q:** How can I do Hard Disk Encryption?"
msgstr "**Q:** Kaip atlikti kietojo disko šifravimą?"

#: ../to-be-integrated.rst:156
msgid ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (formerly "
"TrueCrypt)"
msgstr ""
"Dėl: \"Nitrokey Pro\", \"Nitrokey Storage\", \"Nitrokey Start VeraCrypt\""
" (anksčiau - \"TrueCrypt\")"

#: ../to-be-integrated.rst:159
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey "
"Storage or Pro:"
msgstr ""
"\"VeraCrypt\" yra nemokama atvirojo kodo disko šifravimo programinė "
"įranga, skirta \"Windows\", \"MacOS\" ir \"GNU/Linux\". Ji yra "
"\"TrueCrypt\" įpėdinė, todėl ją rekomenduojama naudoti, nors toliau "
"pateiktos instrukcijos turėtų būti taikomos ir \"TrueCrypt\". Norėdami "
"naudoti programą su \"Nitrokey Storage\" arba \"Pro\", atlikite šiuos "
"veiksmus:"

#: ../to-be-integrated.rst:161 ../to-be-integrated.rst:673
msgid ""
"Install OpenSC Choose the library in VeraCrypt under "
"Settings>Preferences>Security Token (location depends on system, e.g. "
"/usr/lib/opensc). Generate a 64 Byte key file via Tools>Keyfile "
"Generator. Now you should be able to import the generated key file via "
"Tools>Manage Security Token Keyfiles. You should choose the first Slot "
"([0] User PIN). The keyfile is then stored on the Nitrokey as 'Private "
"Data Object 1' (PrivDO1). After this you should wipe the original keyfile"
" on your Computer securely! Now you can use VeraCrypt with the Nitrokey: "
"Create a container, choose the keyfile on the device as an alternative to"
" a password."
msgstr ""
"Įdiekite OpenSC Pasirinkite biblioteką VeraCrypt skiltyje "
"Settings>Preferences>Security Token (vieta priklauso nuo sistemos, pvz., "
"/usr/lib/opensc). Sugeneruokite 64 baitų rakto failą naudodami "
"Tools>Keyfile Generator. Dabar turėtumėte turėti galimybę importuoti "
"sugeneruotą rakto failą naudodami Tools>Manage Security Token Keyfiles. "
"Turėtumėte pasirinkti pirmąjį lizdą ([0] Vartotojo PIN kodas). Tada rakto"
" failas bus išsaugotas \"Nitrokey\" kaip 'Private Data Object 1' "
"(PrivDO1). Po to turėtumėte saugiai ištrinti originalų raktų failą savo "
"Kompiuteryje! Dabar galite naudoti \"VeraCrypt\" su \"Nitrokey\": "
"Sukurkite konteinerį, pasirinkite įrenginyje esantį rakto failą kaip "
"alternatyvą slaptažodžiui."

#: ../to-be-integrated.rst:168
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the PIN."
msgstr ""
"Saugumo aspektas: Atkreipkite dėmesį, kad \"VeraCrypt\" nesinaudoja "
"visomis \"Nitrokey\" (ir apskritai lustinių kortelių) teikiamomis saugumo"
" priemonėmis. Vietoj to \"Nitrokey\" kortelėje saugomas rakto failas, "
"kurį teoriškai gali pavogti kompiuterinis virusas, naudotojui įvedus PIN "
"kodą."

#: ../to-be-integrated.rst:170
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation."
msgstr ""
"Pastaba: \"Aloaha Crypt\" remiasi \"TrueCrypt\" / \"VeraCrypt\", tačiau "
"be aprašytų saugumo apribojimų."

#: ../to-be-integrated.rst:173
msgid ""
"Hard Disk Encryption on Linux, Based on LUKS/dm-crypt Here are excellent "
"instructions how to use Nitrokey to encrypt your hard disk under Linux "
"with LUKS/dm-crypt. Other instruction."
msgstr ""
"Kietojo disko šifravimas \"Linux\" sistemoje, remiantis LUKS/dm-crypt Čia"
" pateikiamos puikios instrukcijos, kaip naudoti \"Nitrokey\" kietajam "
"diskui šifruoti \"Linux\" sistemoje naudojant LUKS/dm-crypt. Kitos "
"instrukcijos."

#: ../to-be-integrated.rst:176
msgid ""
"Purism has created a simple script to add the Nitrokey/LibremKey as a way"
" to unlock LUKS partitions (not tested by Nitrokey yet)."
msgstr ""
"\"Purism\" sukūrė paprastą scenarijų, kuriuo galima pridėti "
"\"Nitrokey/LibremKey\" raktą kaip būdą atrakinti LUKS skaidinius (dar "
"neišbandyta \"Nitrokey\")."

#: ../to-be-integrated.rst:178
msgid ""
"This project aims to ease the use of LUKS with the Nitrokey Pro or "
"Storage based on the Password Safe (not tested by Nitrokey yet). A "
"description on how to use it on Gentoo can be found here."
msgstr ""
"Šio projekto tikslas - palengvinti LUKS naudojimą su \"Nitrokey Pro\" "
"arba Storage, pagrįsta slaptažodžių seifu (dar neišbandyta \"Nitrokey\")."
" Jo naudojimo \"Gentoo\" sistemoje aprašymą rasite čia."

#: ../to-be-integrated.rst:180
msgid ""
"For Arch Linux, see initramfs-scencrypt. Storage Encryption on Linux, "
"Based on EncFS"
msgstr ""
"Arch Linux atveju žr. initramfs-scencrypt. Saugyklų šifravimas \"Linux\","
" pagrįstas EncFS"

#: ../to-be-integrated.rst:183
msgid ""
"Prerequisite: Please ensure that you installed the device driver, changed"
" the default PINs and generated or imported keys with GnuPG."
msgstr ""
"Būtina sąlyga: Prieš tai įsitikinkite, kad įdiegėte įrenginio tvarkyklę, "
"pakeitėte numatytuosius PIN kodus ir sugeneravote arba importavote raktus"
" su GnuPG."

#: ../to-be-integrated.rst:185
msgid ""
"An easy to use encrypted file system is EncFS, which is based on FUSE. "
"You may follow these steps to use it with very long passwords and "
"Nitrokey:"
msgstr ""
"Lengvai naudojama šifruotų failų sistema yra EncFS, pagrįsta FUSE. "
"Norėdami ją naudoti su labai ilgais slaptažodžiais ir \"Nitrokey\", "
"galite atlikti šiuos veiksmus:"

#: ../to-be-integrated.rst:187
msgid "Initialization"
msgstr "Inicializacija"

#: ../to-be-integrated.rst:189
msgid ""
"# Create a key file with random data: $ dd bs=64 count=1 if=/dev/urandom "
"of=keyfile"
msgstr ""
"# Sukurkite raktų failą su atsitiktiniais duomenimis: $ dd bs=64 count=1 "
"if=/dev/urandom of=keyfile"

#: ../to-be-integrated.rst:192
msgid ""
"# Encrypt the key file and use the User-ID of your Nitrokey $ gpg "
"--encrypt keyfile"
msgstr ""
"# Užšifruokite rakto failą ir naudokite \"Nitrokey\" vartotojo ID $ gpg "
"--encrypt keyfile"

#: ../to-be-integrated.rst:195
msgid ""
"# Remove the key file in clear text: $ rm keyfile # you may want to use "
"'wipe' or 'shred' to securely delete the keyfile"
msgstr ""
"# Pašalinkite rakto failą atviru tekstu: $ rm keyfile # galite naudoti "
"'wipe' arba 'shred', kad saugiai ištrintumėte rakto failą."

#: ../to-be-integrated.rst:198
msgid "# Create mount point: $ mkdir ~/.cryptdir ~/cryptdir"
msgstr "# Sukurti prijungimo tašką: $ mkdir ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:201
msgid ""
"# Create the actual encryption folder $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"
msgstr ""
"# Sukurkite tikrąjį šifravimo aplanką $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:204
msgid ""
"# There may appears an error message about missing permission of "
"fusermount # This message can be ignored"
msgstr ""
"# Gali pasirodyti klaidos pranešimas apie trūkstamą fusermount leidimą # "
"Šį pranešimą galima ignoruoti"

#: ../to-be-integrated.rst:207
msgid "# Unmount the new file system: $ fusermount -u ~/cryptdir"
msgstr "# Atjunkite naująją failų sistemą: $ fusermount -u ~/cryptdir"

#: ../to-be-integrated.rst:210
msgid "Usage"
msgstr "Naudojimas"

#: ../to-be-integrated.rst:212
msgid ""
"# Mount encrypted file system and enter PIN of Nitrokey: $ gpg -d "
"keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"
msgstr ""
"# Prijungti užšifruotą failų sistemą ir įvesti \"Nitrokey\" PIN kodą: $ "
"gpg -d keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:215
msgid "# After usage, unmount the file system: $ fusermount -u ~/cryptdir"
msgstr "# Po naudojimo atmontuokite failų sistemą: $ fusermount -u ~/cryptdir"

#: ../to-be-integrated.rst:219
msgid "Storage Encryption on Linux, Based on ECryptFS"
msgstr "Saugyklos šifravimas \"Linux\" sistemoje, pagrįstas \"ECryptFS"

#: ../to-be-integrated.rst:221
msgid ""
"eCryptfs is a file based transparent encryption file system for Linux "
"which can be used with Nitrokey through a PKCS#11 driver. See these "
"instructions. Alternatively, try ESOSI or follow these steps using OpenSC"
" and OpenVPN:"
msgstr ""
"\"eCryptfs\" yra \"Linux\" skirta skaidri šifravimo failų sistema, kurią "
"galima naudoti su \"Nitrokey\" naudojant PKCS#11 tvarkyklę. Žr. šias "
"instrukcijas. Arba išbandykite ESOSI arba atlikite šiuos veiksmus "
"naudodami \"OpenSC\" ir \"OpenVPN\":"

#: ../to-be-integrated.rst:223
msgid "Warning: This will delete existing keys on your Nitrokey!"
msgstr "Įspėjimas: Tai ištrins jūsų \"Nitrokey\" esamus raktus!"

#: ../to-be-integrated.rst:225
msgid ""
"# Import the certificate and key to the Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"
msgstr ""
"# Importuokite sertifikatą ir raktą į Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"

#: ../to-be-integrated.rst:228
msgid "# Create the file ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"
msgstr "# Sukurkite failą ~/.ecryptfsrc.pkcs11: $ redaktorius ~/.ecryptfsrc.pkcs11"

#: ../to-be-integrated.rst:231
msgid ""
"# Enter this content: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids path to opensc-pkcs11 module "
"Certificate"
msgstr ""
"# Įveskite šį turinį: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids kelias į opensc-pkcs11 modulį "
"Sertifikatas"

#: ../to-be-integrated.rst:235
msgid ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Serial: 066E04 Serialized id: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"
msgstr ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Serijinis: 066E04 Serializuotas id: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"

#: ../to-be-integrated.rst:239
msgid "# Copy the serialized id for later usage: $ ecryptfs-manager"
msgstr "# Nukopijuokite serializuotą ID vėlesniam naudojimui: $ ecryptfs-manager"

#: ../to-be-integrated.rst:242
msgid ""
"# This will show list option. Choose option \"Add public key to keyring\""
" # Choose pkcs11-helper # Enter the serialized ID of step 3 to PKCS#11 "
"ID."
msgstr ""
"# Tai parodys sąrašo parinktį. Pasirinkite parinktį \"Add public key to "
"keyring\" # Pasirinkite pkcs11-helper # Įveskite 3 veiksmo serijinį ID į "
"PKCS#11 ID."

#: ../to-be-integrated.rst:250
msgid "**Q:** How can I sign and encrypt Files and PDFs? GnuPG"
msgstr "**Q:** Kaip galiu pasirašyti ir užšifruoti failus ir PDF failus? GnuPG"

#: ../to-be-integrated.rst:253
msgid ""
"Use the gpgsm tool to sign, verify, encrypt and decrypt files. Use a "
"signature key on a Nitrokey to sign documents using Acrobat Reader, Open "
"Office / Libre Office or any other PDF reader supporting electronic "
"signatures."
msgstr ""
"Naudokite gpgsm įrankį failams pasirašyti, tikrinti, šifruoti ir "
"iššifruoti. Naudokite \"Nitrokey\" parašo raktą dokumentams pasirašyti "
"naudodami \"Acrobat Reader\", \"Open Office\" / \"Libre Office\" ar bet "
"kurią kitą PDF skaityklę, palaikančią elektroninius parašus."

#: ../to-be-integrated.rst:256
msgid "GPA - GNU Privacy Assistant"
msgstr "GPA - GNU privatumo asistentas"

#: ../to-be-integrated.rst:258
msgid ""
"The Gnu Privacy Assistant (GPA) recognizes Nitrokey out-of-the-box, has "
"various features to manage keys and cards. It also allows file operations"
" such as file encryption, decryption, signing."
msgstr ""
"\"Gnu Privacy Assistant\" (GPA) atpažįsta \"Nitrokey\" iš karto, turi "
"įvairių funkcijų raktams ir kortelėms tvarkyti. Jis taip pat leidžia "
"atlikti failų operacijas, tokias kaip failų šifravimas, iššifravimas, "
"pasirašymas."

#: ../to-be-integrated.rst:261
msgid "SOPS - Secrect OPerationS"
msgstr "SOPS - Secrect OPerationS"

#: ../to-be-integrated.rst:263
msgid ""
"SOPS is an editor of encrypted files that supports YAML, JSON and BINARY "
"formats and encrypts with AWS KMS and PGP. You can find it on github."
msgstr ""
"SOPS yra šifruotų failų redaktorius, palaikantis YAML, JSON ir BINARY "
"formatus ir šifruojantis naudojant AWS KMS ir PGP. Jį galite rasti "
"\"github\" svetainėje."

#: ../to-be-integrated.rst:266
msgid "Aloaha"
msgstr "Aloaha"

#: ../to-be-integrated.rst:268
msgid ""
"Aloaha provides several applications to encrypt and sign PDFs. All of "
"them, which allow smart card integration, work with Nitrokey. You can for"
" example import key and certificate by using OpenSC or any other "
"appropriate variant. After this Windows recognize your certificate and "
"you can sign the document as it is shown in the screencast below."
msgstr ""
"\"Aloaha\" teikia keletą programų, skirtų PDF užšifruoti ir pasirašyti. "
"Visos jos, kuriose galima integruoti lustines korteles, veikia su "
"\"Nitrokey\". Pavyzdžiui, raktą ir sertifikatą galite importuoti "
"naudodami \"OpenSC\" arba bet kurį kitą tinkamą variantą. Po to "
"\"Windows\" atpažins jūsų sertifikatą ir galėsite pasirašyti dokumentą, "
"kaip parodyta toliau pateiktoje ekrano kopijoje."

#: ../to-be-integrated.rst:270
msgid "GpgEx for Windows Explorer"
msgstr "GpgEx \"Windows Explorer"

#: ../to-be-integrated.rst:272
msgid ""
"GpgEx integrates smoothly into Windows Explorer to allow encryption and "
"decryption of files. Install it as part of the GPG4Win package."
msgstr ""
"\"GpgEx\" sklandžiai integruojamas į \"Windows Explorer\", kad būtų "
"galima šifruoti ir iššifruoti failus. Įdiekite jį kaip \"GPG4Win\" paketo"
" dalį."

#: ../to-be-integrated.rst:275
msgid ""
"Before you start to use any of these applications with your Nitrokey, "
"please ensure that you installed the device driver and initialized the "
"device (e.g. generated keys)."
msgstr ""
"Prieš pradėdami naudoti bet kurią iš šių programų su \"Nitrokey\", "
"įsitikinkite, kad įdiegėte įrenginio tvarkyklę ir inicializavote įrenginį"
" (pvz., sugeneravote raktus)."

#: ../to-be-integrated.rst:277
msgid ""
"Certificate-based login with TLS and web browser is a very secure "
"authentication method but it is only used rarely. If you are unsure what "
"this means, this approach is most likely not relevant for you."
msgstr ""
"Sertifikatu pagrįstas prisijungimas naudojant TLS ir žiniatinklio "
"naršyklę yra labai saugus autentifikavimo metodas, tačiau jis naudojamas "
"retai. Jei nesate tikri, ką tai reiškia, greičiausiai šis metodas jums "
"netinka."

#: ../to-be-integrated.rst:279
msgid ""
"This page refers to websites and applications which support certificate "
"authentication, so that users don't need to enter username and password "
"when login. For instance WebID is a great protocol which makes use of it."
" Certificate authentication can be used easily with the Nitrokey and also"
" with any other certificate storages. Mozilla Firefox"
msgstr ""
"Šiame puslapyje nurodomos svetainės ir programos, kurios palaiko "
"autentiškumo patvirtinimą sertifikatu, kad naudotojams prisijungiant "
"nereikėtų įvesti vartotojo vardo ir slaptažodžio. Pavyzdžiui, WebID yra "
"puikus protokolas, kuriame jis naudojamas. Sertifikato autentiškumo "
"patvirtinimą galima lengvai naudoti su \"Nitrokey\", taip pat su bet "
"kuriomis kitomis sertifikatų saugyklomis. Mozilla Firefox"

#: ../to-be-integrated.rst:282
msgid "You need to install the PKCS#11 driver:"
msgstr "Reikia įdiegti PKCS#11 tvarkyklę:"

#: ../to-be-integrated.rst:284
msgid ""
"Download the PKCS11 driver and store it on your local hard disk or "
"install OpenSC. Open the Preferences in Firefox and go to  Privacy & "
"Security -> Security (just a headline) -> Button 'Security Devices...' "
"Press the button Load. Enter \"Nitrokey\" as the Module Name and press "
"the Browse button to select the previously downloaded PKCS11 driver file."
" Confirm and close all dialogs."
msgstr ""
"Atsisiųskite PKCS11 tvarkyklę ir išsaugokite ją vietiniame standžiajame "
"diske arba įdiekite \"OpenSC\". Atidarykite \"Firefox\" naršyklės "
"nuostatas ir eikite į Privatumas & amp; Saugumas -> Saugumas (tik "
"antraštė) -> Mygtukas 'Saugumo įrenginiai...' Paspauskite mygtuką Įkelti."
" Įveskite \"Nitrokey\" kaip modulio pavadinimą ir paspauskite mygtuką "
"Browse (Naršyti), kad pasirinktumėte anksčiau atsisiųstą PKCS11 "
"tvarkyklės failą. Patvirtinkite ir uždarykite visus dialogo langus."

#: ../to-be-integrated.rst:288
msgid ""
"Now you are ready to access websites which provide certificate "
"authentication. Internet Explorer"
msgstr ""
"Dabar galite pasiekti svetaines, kuriose teikiamas sertifikato "
"autentiškumo patvirtinimas. \"Internet Explorer"

#: ../to-be-integrated.rst:291
msgid ""
"Install this Mini Driver for Windows. Now you are ready to access "
"websites which provide certificate authentication. Google Chrome"
msgstr ""
"Įdiekite šį \"Mini\" tvarkyklę \"Windows\". Dabar galite naudotis "
"svetainėmis, kuriose teikiamas autentiškumo patvirtinimas sertifikatu. "
"\"Google Chrome"

#: ../to-be-integrated.rst:294
msgid ""
"Under Windows, install this Mini Driver. Under Linux, follow these "
"instructions. Now you are ready to access websites which provide "
"certificate authentication. WebID"
msgstr ""
"\"Windows\" sistemoje įdiekite šį \"Mini Driver\". Jei naudojate "
"\"Linux\", vadovaukitės šiais nurodymais. Dabar galite naudotis "
"svetainėmis, kuriose teikiamas autentiškumo patvirtinimas sertifikatu. "
"WebID"

#: ../to-be-integrated.rst:297
msgid ""
"WebID is a technology to enable secure and federated social websites. "
"Here is a video (WebM, Ogg video, H.264) which demonstrates how to use "
"Nitrokey to create a WebID profile and subsequently to use it in an "
"Internet cafe in Singapore. Nitrokey protects against computer viruses "
"which might otherwise steel the username and password. Websites Web Site"
"        Category CAcert  community-based Certificate Authority "
"PrivaSphere     Secure messaging HM Revenue & Customs    UK's tax "
"administration Software Application     Category Roundcube (plugin)      "
"Webmail Drupal (WebID, Certificate login)       Content management system"
" Media Wiki (plugin)     Wiki Joomla!         Content management system "
"Apache + mod_ssl        Web server OpenSSH         SSH (remote secure "
"shell) client and server Wordpress (plugin)      Blog and CMS Tivoli  "
"System management framework Globalscape EFT         managed file transfer"
" (MFT) Oracle Identity Manager         I&AM Fuse Source     Middleware "
"Liferay         Blog FusionForge     web-based project-management and "
"collaboration software"
msgstr ""
"\"WebID\" - tai technologija, leidžianti kurti saugias ir susietas "
"socialines svetaines. Čia pateikiamas vaizdo įrašas (WebM, Ogg vaizdo "
"įrašas, H.264), kuriame demonstruojama, kaip naudojant \"Nitrokey\" "
"sukurti \"WebID\" profilį ir vėliau jį naudoti Singapūro interneto "
"kavinėje. Nitrokey apsaugo nuo kompiuterinių virusų, kurie priešingu "
"atveju gali išstatyti vartotojo vardą ir slaptažodį. Interneto svetainės "
"Interneto svetainės kategorija CAcert bendruomenės sertifikatų tarnyba "
"PrivaSphere Saugus susirašinėjimas HM Revenue & amp; Customs JK mokesčių "
"administracija Programinė įranga Programos kategorija Roundcube "
"(įskiepis) Interneto paštas Drupal (WebID, prisijungimo sertifikatas) "
"Turinio valdymo sistema Media Wiki (įskiepis) Wiki Joomla!         "
"Turinio valdymo sistema Apache + mod_ssl Žiniatinklio serveris OpenSSH "
"SSH (nuotolinis saugus apvalkalas) klientas ir serveris Wordpress "
"(įskiepis) Tinklaraštis ir TVS Tivoli Sistemos valdymo sistema "
"Globalscape EFT valdomas failų perdavimas (MFT) Oracle Identity Manager "
"I&AM Fuse Source Middleware Liferay Dienoraštis FusionForge žiniatinklio "
"projektų valdymo ir bendradarbiavimo programinė įranga"

#: ../to-be-integrated.rst:319
msgid ""
"This website is a good read about strong authentication mechanisms, why "
"client certificate authentication isn't popular and better alternatives "
"at the horizon."
msgstr ""
"Šioje svetainėje galima paskaityti apie stiprius autentifikavimo "
"mechanizmus, kodėl kliento sertifikato autentifikavimas nėra populiarus, "
"ir apie geresnes alternatyvas."

#: ../to-be-integrated.rst:321
msgid "**Q:** How can I use Enterprise Authentication?"
msgstr "**Q:** Kaip naudoti įmonės autentifikavimą?"

#: ../to-be-integrated.rst:323
msgid ""
"LinOTP privacyIDEA RCDevs OpenOTP Usage of Nitrokey HSM as a secure key "
"store for the Forgerock OpenDJ server and Forgerock Identity Gateway"
msgstr ""
"LinOTP privacyIDEA RCDevs OpenOTP \"Nitrokey HSM\" naudojimas kaip "
"saugios raktų saugyklos \"Forgerock OpenDJ\" serveriui ir \"Forgerock "
"Identity Gateway"

#: ../to-be-integrated.rst:329
msgid ""
"**Q:** How can I do SSH for Server Administration on Windows? The "
"Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"**Q:** Kaip atlikti SSH serverio administravimą \"Windows\" sistemoje? "
"\"Nitrokey\" jau turėtų būti įdiegti PGP raktai, o vietinis GnuPG raktų "
"rinkinys turėtų žinoti apie raktus, t. y. sistemoje turėtų būti įdiegta "
"GPG4Win (reikia tik pagrindinės GnuPG programos). Be to, turėtumėte "
"įdiegti PuTTY. Pasirengimas klientui"

#: ../to-be-integrated.rst:333 ../to-be-integrated.rst:705
msgid ""
"There are two steps needed to make PuTTY work. At first we need to enable"
" PuTTY support of GnuPG. To achieve this we use the following command:"
msgstr ""
"Kad \"PuTTY\" veiktų, reikia atlikti du veiksmus. Pirmiausia reikia "
"įjungti \"PuTTY\" GnuPG palaikymą. Tam naudojame šią komandą:"

#: ../to-be-integrated.rst:335 ../to-be-integrated.rst:707
msgid "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"
msgstr "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"

#: ../to-be-integrated.rst:337 ../to-be-integrated.rst:709
msgid ""
"Now we want to make sure, that the gpg-agent is starting automatically in"
" the background (you can start it manually with the command below, if you"
" prefer). We create a shortcut to gpg-connect-agent.exe. Press and hold "
"the Windows-key and press 'R'. Type in \"shell:startup\" in the opening "
"textfield (see picture below). The Windows-Explorer opens and you right-"
"click on an empty space and choose \"New\" -> \"Shortcut\". Now you "
"should insert the actual command and proceed:"
msgstr ""
"Dabar norime įsitikinti, kad gpg agentas automatiškai paleidžiamas fone "
"(jei pageidaujate, galite paleisti jį rankiniu būdu, naudodami toliau "
"pateiktą komandą). Sukuriame gpg-connect-agent.exe nuorodą. Paspauskite "
"ir palaikykite Windows klavišą ir paspauskite 'R'. Atsidariusiame teksto "
"lauke įveskite \"shell:startup\" (žr. toliau pateiktą paveikslėlį). "
"Atsidarys langas \"Windows-Explorer\", dešiniuoju pelės klavišu "
"spustelėkite tuščią vietą ir pasirinkite \"New\" -> \"Shortcut\". Dabar "
"turėtumėte įterpti tikrąją komandą ir tęsti:"

#: ../to-be-integrated.rst:339 ../to-be-integrated.rst:711
msgid "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"
msgstr "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"

#: ../to-be-integrated.rst:343 ../to-be-integrated.rst:715
msgid ""
"Reboot your system to make sure the shortcut works. If everything is "
"alright you now can use PuTTY as usual and PuTTY will make use of the "
"Nitrokey automatically. Preparation for the server"
msgstr ""
"Perkraukite sistemą, kad įsitikintumėte, jog spartusis klavišas veikia. "
"Jei viskas gerai, dabar galite naudoti \"PuTTY\" kaip įprastai, o "
"\"PuTTY\" automatiškai pasinaudos \"Nitrokey\". Pasirengimas serveriui"

#: ../to-be-integrated.rst:346 ../to-be-integrated.rst:718
msgid "You can generate an authorized_keys file by running"
msgstr "Galite sugeneruoti autorizuotų_raktų failą paleidę"

#: ../to-be-integrated.rst:348 ../to-be-integrated.rst:720
msgid ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"
msgstr ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> > authorized_keys"

#: ../to-be-integrated.rst:350 ../to-be-integrated.rst:722
msgid ""
"where 'keyID' is either the fingerprint of your key or just the E-Mail "
"address bind to your key. The Nitrokey must already be known to the local"
" GnuPG keyring. You can now append that file to a remote server's "
"authorized_keys and when you ssh to the server you'll be asked for a pin "
"rather than a passphrase."
msgstr ""
"kur 'keyID' yra arba rakto pirštų atspaudas, arba tik su raktu susietas "
"el. pašto adresas. Nitro raktas jau turi būti žinomas vietiniam GnuPG "
"raktų rinkiniui. Dabar galite pridėti šį failą prie nutolusio serverio's "
"authorized_keys ir, kai ssh prisijungsite prie serverio, jūsų bus "
"paprašyta nurodyti PIN kodą, o ne slaptažodžių frazę."

#: ../to-be-integrated.rst:357
msgid "**Q:** How can I do SSH for Server Administration on Linux?"
msgstr "**Q:** Kaip atlikti SSH serverio administravimą \"Linux\" sistemoje?"

#: ../to-be-integrated.rst:359 ../to-be-integrated.rst:726
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys. Preparation on client"
msgstr ""
"\"Nitrokey\" jau turėtų būti įdiegti PGP raktai, o vietinis GnuPG raktų "
"rinkinys turėtų žinoti raktus. Pasirengimas klientui"

#: ../to-be-integrated.rst:362 ../to-be-integrated.rst:729
msgid ""
"Make sure ~/.gnupg/gpg.conf contains 'use-agent' Add ssh support to "
"gnupg-agent by adding 'enable-ssh-support' to ~/.gnupg/gpg-agent.conf If "
"the file does not exist yet, you can just create it. Add the following "
"code somewhere into your ~/.bashrc (for fish shell, look here)"
msgstr ""
"Įsitikinkite, kad ~/.gnupg/gpg.conf yra 'use-agent' Pridėkite ssh "
"palaikymą į gnupg-agent, pridėdami 'enable-ssh-ssh-support' į ~/.gnupg"
"/gpg-agent.conf Jei failo dar nėra, galite jį tiesiog sukurti. Kur nors į"
" savo ~/.bashrc įrašykite šį kodą (fish shell ieškokite čia)"

#: ../to-be-integrated.rst:367 ../to-be-integrated.rst:734
msgid ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"
msgstr ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"

#: ../to-be-integrated.rst:372 ../to-be-integrated.rst:739
msgid ""
"Simply restart your system or try pkill gpg-agent and open a new "
"commandline to make sure everything is set In case of problems, please "
"try gpg2 --card-status on first usage to make sure the gpg-agent gets "
"started"
msgstr ""
"Tiesiog perkraukite sistemą arba pabandykite pkill gpg-agent ir "
"atidarykite naują komandinę eilutę, kad įsitikintumėte, jog viskas "
"nustatyta Jei kyla problemų, pirmą kartą naudodami gpg2 pabandykite gpg2 "
"--card-status, kad įsitikintumėte, jog gpg-agent paleidžiamas."

#: ../to-be-integrated.rst:375 ../to-be-integrated.rst:742
msgid "Preparation for the server"
msgstr "Pasiruošimas serveriui"

#: ../to-be-integrated.rst:377 ../to-be-integrated.rst:744
msgid "You can generate an authorized_keys file by running either"
msgstr "Galite sukurti autorizuotų_raktų failą, paleisdami"

#: ../to-be-integrated.rst:379 ../to-be-integrated.rst:746
msgid ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) or "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(for newer GnuPG "
"versions)"
msgstr ""
"gpgkey2ssh keyID >> ~/authorized_keys #(GnuPG versijai <= 2.1.11) arba "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(naujesnėms GnuPG "
"versijoms)"

#: ../to-be-integrated.rst:382 ../to-be-integrated.rst:749
msgid "where"
msgstr "kur"

#: ../to-be-integrated.rst:384 ../to-be-integrated.rst:751
msgid "keyID"
msgstr "keyID"

#: ../to-be-integrated.rst:386 ../to-be-integrated.rst:753
msgid ""
"is the subkey id being used for authentication on your Nitrokey. The "
"Nitrokey must already be known to the local GnuPG keyring. You can now "
"append that file to a remote server's authorized_keys and when you ssh to"
" the server you'll be asked for a pin rather than a passphrase."
msgstr ""
"yra \"Nitrokey\" autentifikavimui naudojamo subklavišo ID. \"Nitrokey\" "
"raktas jau turi būti žinomas vietiniam GnuPG raktų rinkiniui. Dabar "
"galite pridėti šį failą prie nutolusio serverio autorizuotų raktų "
"(authorized_keys) ir, kai ssh prisijungsite prie serverio, jūsų bus "
"paprašyta PIN kodo, o ne slaptažodžio frazės."

#: ../to-be-integrated.rst:389 ../to-be-integrated.rst:756
msgid "Troubleshooting"
msgstr "Trikčių šalinimas"

#: ../to-be-integrated.rst:391 ../to-be-integrated.rst:758
msgid "If you are still asked for a password please make sure that"
msgstr "Jei vis dar prašoma įvesti slaptažodį, įsitikinkite, kad"

#: ../to-be-integrated.rst:393 ../to-be-integrated.rst:760
msgid "echo $SSH_AUTH_SOCK"
msgstr "echo $SSH_AUTH_SOCK"

#: ../to-be-integrated.rst:395 ../to-be-integrated.rst:762
msgid ""
"returns something reasonable like '/run/user/1000/gnupg/S.gpg-agent.ssh' "
"or '/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were "
"some changes in GnuPG in the past so that the actual content can differ "
"from system and GnuPG version. On some systems there may are even "
"multiple folders in this variable saved. You have to adapt the above "
"given code in .bashrc so that the variable SSH_AUTH_SOCK is correct. In "
"doubt look for 'SSH_AUTH_SOCK' in"
msgstr ""
"grąžina kažką protingo, pavyzdžiui, '/run/user/1000/gnupg/S.gpg-"
"agent.ssh' arba '/home/username/.gnupg/.S.gpg-agent.ssh'. Deja, praeityje"
" GnuPG buvo keletas pakeitimų, todėl tikrasis turinys gali skirtis "
"priklausomai nuo sistemos ir GnuPG versijos. Kai kuriose sistemose šiame "
"kintamajame gali būti išsaugoti net keli aplankai. Turite pritaikyti "
"pirmiau pateiktą .bashrc kodą taip, kad kintamasis SSH_AUTH_SOCK būtų "
"teisingas. Jei abejojate, ieškokite 'SSH_AUTH_SOCK' eilutėje"

#: ../to-be-integrated.rst:397 ../to-be-integrated.rst:764
msgid "man gpg-agent"
msgstr "man gpg-agent"

#: ../to-be-integrated.rst:399 ../to-be-integrated.rst:766
msgid "to find the actual code for your version/system."
msgstr "rasti savo versijai ir (arba) sistemai skirtą tikrąjį kodą."

#: ../to-be-integrated.rst:401 ../to-be-integrated.rst:768
msgid ""
"You may check if you have a 'pinentry' program installed via your package"
" manager. You may need to set it in the gpg-agent.conf as well. You may "
"need to point gpg-agent to the correct TTY."
msgstr ""
"Galite patikrinti, ar turite įdiegtą 'pinentry' programą per paketų "
"tvarkytuvę. Ją gali tekti nustatyti ir gpg-agent.conf. Gali prireikti "
"nukreipti gpg-agent į tinkamą TTY."

#: ../to-be-integrated.rst:415
msgid "**Q:** How can I use the Nitrokey for VPN access?"
msgstr "**Q:** Kaip naudoti \"Nitrokey\" VPN prieigai?"

#: ../to-be-integrated.rst:418 ../to-be-integrated.rst:789
msgid "For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"
msgstr ""
"Dėl: \"Nitrokey Pro\", \"Nitrokey Storage\", \"Nitrokey Start\", "
"\"Nitrokey HSM OpenVPN"

#: ../to-be-integrated.rst:421 ../to-be-integrated.rst:792
msgid "Generate a key on Nitrokey via pkcs11-tool."
msgstr "Sugeneruokite raktą \"Nitrokey\" naudodami pkcs11-tool."

#: ../to-be-integrated.rst:423 ../to-be-integrated.rst:794
msgid "Generate a certificate signing request via openssl + pkcs11 module:"
msgstr ""
"Sugeneruoti sertifikato pasirašymo užklausą naudojant openssl + pkcs11 "
"modulį:"

#: ../to-be-integrated.rst:425 ../to-be-integrated.rst:796
msgid ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:427 ../to-be-integrated.rst:798
msgid "Sign the certificate with our certificate authority"
msgstr "Pasirašykite sertifikatą su mūsų sertifikatų institucija"

#: ../to-be-integrated.rst:429 ../to-be-integrated.rst:800
msgid ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:431 ../to-be-integrated.rst:478
#: ../to-be-integrated.rst:802 ../to-be-integrated.rst:849
msgid "Import  the certificate into the Nitrokey via pkcs11-tool"
msgstr "Importuokite sertifikatą į \"Nitrokey\" naudodami pkcs11-tool"

#: ../to-be-integrated.rst:433 ../to-be-integrated.rst:804
msgid "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"
msgstr "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"

#: ../to-be-integrated.rst:435 ../to-be-integrated.rst:806
msgid "Read the certificate's ID required for openvpn configuration:"
msgstr "Perskaitykite sertifikato's ID, reikalingą openvpn konfigūracijai:"

#: ../to-be-integrated.rst:437 ../to-be-integrated.rst:808
msgid "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"
msgstr "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"

#: ../to-be-integrated.rst:439 ../to-be-integrated.rst:810
msgid ""
"Modify your openvpn configuration. Add the certificate ID which you "
"gathered in the previous step: E.g."
msgstr ""
"Pakeiskite openvpn konfigūraciją. Pridėkite sertifikato ID, kurį "
"surinkote ankstesniame žingsnyje: Pvz."

#: ../to-be-integrated.rst:441 ../to-be-integrated.rst:812
msgid ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"
msgstr ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"

#: ../to-be-integrated.rst:443 ../to-be-integrated.rst:814
msgid "Add the PKCS#11 driver to the configuration too, e.g.:"
msgstr "Į konfigūraciją įtraukite ir PKCS#11 tvarkyklę, pvz:"

#: ../to-be-integrated.rst:445 ../to-be-integrated.rst:816
msgid "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"
msgstr "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"

#: ../to-be-integrated.rst:447 ../to-be-integrated.rst:818
msgid "See this link for further information."
msgstr "Daugiau informacijos rasite šioje nuorodoje."

#: ../to-be-integrated.rst:451 ../to-be-integrated.rst:822
msgid ""
"Now all configurations are done. When executing OpenVPN client, "
"Nitrokey's PIN needs to be entered. Unfortunately OpenVPN doesn't prompt "
"to enter the PIN and it has to be entered in the following way:"
msgstr ""
"Dabar visos konfigūracijos atliktos. Vykdant \"OpenVPN\" klientą, reikia "
"įvesti \"Nitrokey'\" PIN kodą. Deja, \"OpenVPN\" neprašo įvesti PIN kodo,"
" todėl jį reikia įvesti tokiu būdu:"

#: ../to-be-integrated.rst:453 ../to-be-integrated.rst:824
msgid "$ telnet 8888 password 'User PIN (OpenPGP card) token' <PIN>"
msgstr ""
"$ telnet 8888 slaptažodis 'Vartotojo PIN kodas (OpenPGP kortelė) "
"simbolis' <PIN>"

#: ../to-be-integrated.rst:455 ../to-be-integrated.rst:826
msgid ""
"Alternatively you could recompile OpenVPN client with systemd support "
"disabled and it will prompt you for the PIN as expected. Alternatively to"
" the OpenVPN client you could use the Viscosity client which provides a "
"better user experience especially for entering the PIN."
msgstr ""
"Arba galite rekompiluoti OpenVPN klientą su išjungtu \"systemd\" "
"palaikymu, ir jis paprašys PIN kodo, kaip tikėtasi. Vietoj \"OpenVPN\" "
"kliento galite naudoti \"Viscosity\" klientą, kuris užtikrina geresnę "
"naudotojo patirtį, ypač įvedant PIN kodą."

#: ../to-be-integrated.rst:458 ../to-be-integrated.rst:829
msgid "IPsec"
msgstr "IPsec"

#: ../to-be-integrated.rst:460 ../to-be-integrated.rst:831
msgid "Strong Swan works using the PKCS#11 driver. Basically follow these steps:"
msgstr ""
"\"Strong Swan\" veikia naudojant PKCS#11 tvarkyklę. Iš esmės atlikite "
"šiuos veiksmus:"

#: ../to-be-integrated.rst:462 ../to-be-integrated.rst:833
msgid ""
"Generate a key on Nitrokey via pkcs11-tool. In this example it's a 4096 "
"bit RSA key."
msgstr ""
"Sugeneruokite raktą \"Nitrokey\" naudodami pkcs11-tool. Šiame pavyzdyje "
"tai 4096 bitų RSA raktas."

#: ../to-be-integrated.rst:464 ../to-be-integrated.rst:835
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"

#: ../to-be-integrated.rst:466 ../to-be-integrated.rst:837
msgid "Generate a certificate signing request via openssl + pkcs11 module"
msgstr ""
"Sertifikato pasirašymo užklausos generavimas naudojant openssl + pkcs11 "
"modulį"

#: ../to-be-integrated.rst:468 ../to-be-integrated.rst:839
msgid ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"
msgstr ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"

#: ../to-be-integrated.rst:472 ../to-be-integrated.rst:843
msgid "Sign the certificate with your certificate authority"
msgstr "Pasirašykite sertifikatą su savo sertifikatų institucija"

#: ../to-be-integrated.rst:474 ../to-be-integrated.rst:845
msgid "Convert the certificate to DER"
msgstr "Sertifikato konvertavimas į DER"

#: ../to-be-integrated.rst:476 ../to-be-integrated.rst:847
msgid ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"
msgstr ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"

#: ../to-be-integrated.rst:480 ../to-be-integrated.rst:851
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"

#: ../to-be-integrated.rst:482 ../to-be-integrated.rst:853
msgid ""
"Configure Strongswan to load opensc-pkcs11 module then to load the "
"certificate on Nitrokey. Edit /etc/strongswan.d/charon/pkcs11.conf and "
"add the following module:"
msgstr ""
"Sukonfigūruokite \"Strongswan\" taip, kad būtų įkeltas modulis opensc-"
"pkcs11, tada įkelkite \"Nitrokey\" sertifikatą. Redaguokite "
"/etc/strongswan.d/charon/pkcs11.conf ir pridėkite šį modulį:"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "modules {"
msgstr "moduliai {"

#: ../to-be-integrated.rst:485 ../to-be-integrated.rst:856
msgid "Nitrokey {"
msgstr "Nitrokey {"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"
msgstr "kelias = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"

#: ../to-be-integrated.rst:487 ../to-be-integrated.rst:488
#: ../to-be-integrated.rst:858 ../to-be-integrated.rst:859
msgid "}"
msgstr "}"

#: ../to-be-integrated.rst:490 ../to-be-integrated.rst:861
msgid ""
"Initiate the VPN connection via IPSec/Strongswan, then prompt for "
"Nitrokey PIN"
msgstr ""
"Inicijuokite VPN ryšį per \"IPSec/Strongswan\", tada paprašykite nurodyti"
" \"Nitrokey\" PIN kodą."

#: ../to-be-integrated.rst:492 ../to-be-integrated.rst:863
msgid "8. VPN is now connected Stunnel"
msgstr "8. Dabar VPN yra prijungtas Stunelis"

#: ../to-be-integrated.rst:495 ../to-be-integrated.rst:866
msgid ""
"Stunnel works as an SSL encryption wrapper between remote client and "
"local (inetd-startable) or remote server. It can be used to add SSL "
"functionality to commonly used inetd daemons like POP2, POP3, and IMAP "
"servers without any changes in the programs' code."
msgstr ""
"\"Stunnel\" veikia kaip SSL šifravimo apvalkalas tarp nutolusio kliento "
"ir vietinio (paleidžiamo inetd) arba nutolusio serverio. Jį galima "
"naudoti SSL funkcijoms pridėti prie dažniausiai naudojamų inetd demonų, "
"tokių kaip POP2, POP3 ir IMAP serveriai, nekeičiant programų kodo."

#: ../to-be-integrated.rst:497 ../to-be-integrated.rst:868
msgid "Stunnel is able to load OpenSC PKCS#11 engine using this configuration:"
msgstr ""
"Naudojant šią konfigūraciją \"Stunnel\" gali įkelti \"OpenSC PKCS#11\" "
"variklį:"

#: ../to-be-integrated.rst:499 ../to-be-integrated.rst:870
msgid ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"
msgstr ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"

#: ../to-be-integrated.rst:507 ../to-be-integrated.rst:878
msgid "[service] engineNum=1 key=id_45"
msgstr "[service] engineNum=1 key=id_45"

#: ../to-be-integrated.rst:525
msgid "**Q:** How can I do PKI / Certificate Authority (CA)?"
msgstr "**Q:** Kaip galiu atlikti PKI / Sertifikatų tarnyba (CA)?"

#: ../to-be-integrated.rst:527
msgid "CA keys are very sensitive and must not be compromised or lost. GnuPG"
msgstr "CA raktai yra labai jautrūs, todėl jų negalima pažeisti ar prarasti. GnuPG"

#: ../to-be-integrated.rst:530
msgid "Instructions OpenSSL"
msgstr "Instrukcijos OpenSSL"

#: ../to-be-integrated.rst:533
msgid ""
"Install OpenSC'S engine_pkcs11 Run the command \"pkcs11-tool --list-"
"slots\" to list the available slots. Run the command \"openssl> req "
"-engine pkcs11 -new -key slot_X-id_XXXX -keyform engine -x509 -out "
"cert.pem -text\" where X is the appropriate slot number and XXXX is the "
"slot ID, e.g. \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"
msgstr ""
"Įdiekite OpenSC'S engine_pkcs11 Įvykdykite komandą \"pkcs11-tool --list-"
"slots\", kad peržiūrėtumėte turimų lizdų sąrašą. Įvykdykite komandą "
"\"openssl> req -engine pkcs11 -new -key slot_X-id_XXXX -keyform engine "
"-x509 -out cert.pem -text\" kur X yra atitinkamas lizdo numeris, o XXXX -"
" lizdo ID, pvz., \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Testas"

#: ../to-be-integrated.rst:538
msgid "Other"
msgstr "Kita"

#: ../to-be-integrated.rst:540
msgid ""
"Please see this PDF (p. 30) from heinlein-support.de for summarized "
"instructions in German."
msgstr ""
"Apibendrintas instrukcijas vokiečių kalba rasite šiame PDF dokumente (30 "
"psl.) iš heinlein-support.de."

#: ../to-be-integrated.rst:542
msgid ""
"µ-CA-tool is a script based on GnuPG, OpenSC and OpenSSL which helps to "
"perform basic tasks of a CA. It works with Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"µ-CA-tool yra GnuPG, OpenSC ir OpenSSL pagrindu sukurtas skriptas, "
"padedantis atlikti pagrindines CA užduotis. Jis veikia su \"Nitrokey "
"Pro\" ir \"Nitrokey Storage\"."

#: ../to-be-integrated.rst:550
msgid "**Q:** How can I use the password manager?"
msgstr "**Q:** Kaip naudotis slaptažodžių tvarkykle?"

#: ../to-be-integrated.rst:552
msgid "You have the following options:"
msgstr "Galite pasirinkti šias parinktis:"

#: ../to-be-integrated.rst:554
msgid ""
"Use Nitrokey's built-in Password Safe to store passwords securely. For "
"this you need the Nitrokey App. Maximum are 16 passwords. Use Pass "
"(simple commandline password manager for Unix systems, mainly for "
"experts). Use KeePass as described below."
msgstr ""
"Naudokite \"Nitrokey\" integruotą slaptažodžių seifą ir saugiai saugokite"
" slaptažodžius. Tam reikia \"Nitrokey\" programėlės. Daugiausia galima "
"naudoti 16 slaptažodžių. Naudokite \"Pass\" (paprastą komandinės eilutės "
"slaptažodžių tvarkyklę \"Unix\" sistemoms, daugiausia skirtą ekspertams)."
" Naudokite \"KeePass\", kaip aprašyta toliau."

#: ../to-be-integrated.rst:558
msgid "Protecting KeePass with Nitrokey's One-Time Passwords"
msgstr "\"KeePass\" apsauga naudojant vienkartinius slaptažodžius \"Nitrokey"

#: ../to-be-integrated.rst:560
msgid ""
"You can also follow this video (It contains a mistake around time 4:22 "
"which is described later below). Keepass Installation"
msgstr ""
"Taip pat galite sekti šį vaizdo įrašą (Jame yra klaida maždaug 4:22, kuri"
" aprašyta toliau). Keepass diegimas"

#: ../to-be-integrated.rst:563
msgid ""
"Install Keepass 2.3.5. For Ubuntu: Because the main repository contains "
"the older 2.3.4, you have to use some other source like this private PPA "
"(please run these commands in terminal):"
msgstr ""
"Įdiekite \"Keepass 2.3.5\". Ubuntu: Kadangi pagrindinėje saugykloje yra "
"senesnė 2.3.4 versija, turite naudoti kitą šaltinį, pvz., šį privatų PPA "
"(paleiskite šias komandas terminale):"

#: ../to-be-integrated.rst:566
msgid ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"
msgstr ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"

#: ../to-be-integrated.rst:570
msgid ""
"Install the OtpKeyProv plugin by downloading the archive, unzipping and "
"copying the content to Keypass' Plugin directory. On Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ For Linux, optional: Install "
"mono-complete package if plugin is not detected when running Keepass2 "
"(you can check that in Tools/Plugins):"
msgstr ""
"Įdiekite \"OtpKeyProv\" įskiepį atsisiųsdami archyvą, išpakuodami ir "
"nukopijuodami turinį į Keypass' Įskiepio katalogą. Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ Linux, pasirinktinai: Įdiekite"
" mono-komplektinį paketą, jei įskiepis neaptinkamas paleidžiant Keepass2 "
"(tai galite patikrinti Tools/Plugins):"

#: ../to-be-integrated.rst:574
msgid "sudo apt-get install mono-complete"
msgstr "sudo apt-get install mono-complete"

#: ../to-be-integrated.rst:576
msgid "Keepass OTP Configuration Existing Database"
msgstr "Keepass OTP konfigūracija Esama duomenų bazė"

#: ../to-be-integrated.rst:579
msgid ""
"Do a backup of your database and keep it until you are really sure "
"everything works fine! Make sure you really did a backup. If you mess up,"
" your passwords are lost! Open database as usual Select File/Change "
"Master Key..."
msgstr ""
"Padarykite atsarginę duomenų bazės kopiją ir saugokite ją tol, kol tikrai"
" įsitikinsite, kad viskas veikia gerai! Įsitikinkite, kad tikrai padarėte"
" atsarginę kopiją. Jei suklysite, jūsų slaptažodžiai bus prarasti! "
"Atidarykite duomenų bazę kaip įprastai Pasirinkite File/Change Master "
"Key..."

#: ../to-be-integrated.rst:584
msgid "New Database"
msgstr "Nauja duomenų bazė"

#: ../to-be-integrated.rst:586
msgid "Create new database as usual"
msgstr "Sukurkite naują duomenų bazę kaip įprasta"

#: ../to-be-integrated.rst:588
msgid "Common"
msgstr "Bendra"

#: ../to-be-integrated.rst:590
msgid ""
"Insert Master Password (optional) Set Key file / provider: to One-Time "
"Passwords (OATH HOTP) Click OK With Nitrokey App: select HOTP slot and "
"generate HOTP secret (it will be copied to clipboard automatically). "
"Note: You may want write down this secret and store it anywhere secure. "
"Otherwise if you lose your Nitrokey or it gets broken your password "
"database is lost as well!!! Paste the secret to Keepass OTP Plugin window"
" Make sure the Counter field and digits count are set the same in both "
"windows. Click OK in Nitrokey App to save the slot. Select secret type: "
"Base32 Set the other settings as you like. Please consult plugin's manual"
" (should be in same downloaded archive). I would recommend to set look-"
"ahead value to non-zero to prevent locking up the database after "
"accidental code request from used HOTP slot. In that case counters on the"
" device and in Keepass would be out of sync and OTP codes will not be the"
" same with expected."
msgstr ""
"Įterpti pagrindinį slaptažodį (neprivaloma) Nustatyti rakto failą / "
"teikėją: į vienkartinius slaptažodžius (OATH HOTP) Spustelėkite OK Su "
"programa \"Nitrokey\": pasirinkite HOTP lizdą ir sugeneruokite HOTP "
"paslaptį (ji bus automatiškai nukopijuota į iškarpinę). Pastaba: galbūt "
"norėsite užsirašyti šią paslaptį ir laikyti ją saugioje vietoje. "
"Priešingu atveju, jei prarasite \"Nitrokey\" raktą arba jis bus "
"sulaužytas, bus prarasta ir jūsų slaptažodžių duomenų bazė!!! Įklijuokite"
" paslaptį į Keepass OTP įskiepio langą Įsitikinkite, kad Skaitiklio "
"laukas ir skaitmenų skaičius abiejuose languose nustatyti vienodi. "
"Spustelėkite OK Nitrokey programoje, kad išsaugotumėte slaptažodį. "
"Pasirinkite paslapties tipą: Nustatykite kitus nustatymus, kaip jums "
"patinka. Peržiūrėkite įskiepio vadovą (turėtų būti tame pačiame "
"atsisiųstame archyve). Rekomenduočiau nustatyti nenulinę Look-ahead "
"reikšmę, kad atsitiktinai užklausus kodą iš naudojamo HOTP lizdo "
"neužsiblokuotų duomenų bazė. Tokiu atveju prietaiso ir Keepass "
"skaitikliai nesinchronizuotųsi ir OTP kodai nesutaptų su numatytaisiais."

#: ../to-be-integrated.rst:599
msgid "Unlocking Database"
msgstr "Duomenų bazės atrakinimas"

#: ../to-be-integrated.rst:601
msgid ""
"Open database Insert Master Password (if set) Key file / provider: to "
"One-Time Passwords (OATH HOTP) Press OK Insert HOTP codes by repeatedly "
"choosing proper HOTP slot from the Nitrokey App and pasting the clipboard"
" content to proper field (the order of the codes is important). Press OK"
msgstr ""
"Atidaryti duomenų bazę Įterpti pagrindinį slaptažodį (jei nustatytas) "
"Rakto failas / teikėjas: į vienkartinius slaptažodžius (OATH HOTP) "
"Paspauskite OK Įterpkite HOTP kodus, pakartotinai pasirinkdami tinkamą "
"HOTP lizdą \"Nitrokey\" programoje ir įklijuodami iškarpinės turinį į "
"reikiamą lauką (svarbi kodų eilės tvarka). Paspauskite OK"

#: ../to-be-integrated.rst:608
msgid "Issues"
msgstr "Klausimai"

#: ../to-be-integrated.rst:610
msgid ""
"Due to nature of HOTP solution it is possible to get counters "
"desynchronized (by selecting wrong OTP slot during day-to-day use). Using"
" look-ahead plugin's setting should prevent that (value 10 or so should "
"suffice - depends on desired security requirements - this would allow to "
"10 accidental requests). TOTP is not having that problem. Setting the OTP"
" protection could be error-prone. There is no secret validation on "
"OtpKeyProv side. In the test movie at 4:22 I have managed to set the "
"Base32 coded secret as Hex (which was not a proper hex value) and it has "
"not complained about it. There is no information what happened to "
"database and how it is now configured. I have not noticed until I have "
"watched the movie."
msgstr ""
"Dėl HOTP sprendimo pobūdžio galima desinchronizuoti skaitiklius "
"(kasdienio naudojimo metu pasirinkus neteisingą OTP lizdą). Naudojant "
"Look-ahead įskiepio'nustatymą, to turėtų būti išvengta (turėtų pakakti 10"
" ar panašios vertės - tai priklauso nuo norimų saugumo reikalavimų - tai "
"leistų atlikti iki 10 atsitiktinių užklausų). TOTP nėra šios problemos. "
"OTP apsaugos nustatymas gali būti susijęs su klaidomis. OtpKeyProv pusėje"
" nėra slapto patvirtinimo. Bandomajame 4:22 min. filmuke man pavyko "
"nustatyti Base32 kodu užkoduotą paslaptį kaip Hex (kuri nebuvo tinkama "
"hex reikšmė) ir jis dėl to nesiskundė. Nėra jokios informacijos, kas "
"atsitiko su duomenų baze ir kaip ji dabar sukonfigūruota. Nepastebėjau, "
"kol neperžiūrėjau filmo."

#: ../to-be-integrated.rst:613
msgid "Tested under Ubuntu 16.10, Nitrokey App v0.6.3 and Nitrokey Storage v0.45."
msgstr ""
"Išbandyta naudojant Ubuntu 16.10, Nitrokey App v0.6.3 ir Nitrokey Storage"
" v0.45."

#: ../to-be-integrated.rst:622
msgid "**Q:** How can I use the True Random Number Generator?"
msgstr "**Q:** Kaip naudoti \"True Random Number Generator\"?"

#: ../to-be-integrated.rst:624
msgid ""
"Both devices are compatible to the OpenPGP Card, so that scdrand should "
"work. This script may be useful. The TRNG provides about 40 kbit/s."
msgstr ""
"Abu įrenginiai yra suderinami su OpenPGP kortele, todėl scdrand turėtų "
"veikti. Šis scenarijus gali būti naudingas. TRNG užtikrina apie 40 kbit/s"
" greitį."

#: ../to-be-integrated.rst:626
msgid ""
"The user comio created a systemd file to use scdrand and thus the TRNG "
"more generally. He created a ebuild for Gentoo, too."
msgstr ""
"Vartotojas comio sukūrė systemd failą, kad galėtų naudoti scdrand, taigi "
"ir TRNG apskritai. Jis taip pat sukūrė \"Gentoo\" skirtą ebuildą."

#: ../to-be-integrated.rst:632
msgid "**Q:** Do you have resources for development and integration?"
msgstr "**Klausimas:** Ar turite išteklių plėtrai ir integracijai?"

#: ../to-be-integrated.rst:635
msgid ""
"Use Nitrokey library to manage the one-time passwords and password safe "
"functionality. The project nitrokey-get-totp and nitrokey-get-password "
"are nice examples for using the python bindings of Nitrokey library to "
"get a custom interface. In order to access the integrated smart card, you"
" can use OpenSC's command line tools. If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. To work with the smart card low "
"level, see the OpenPGP Card specification. The source code of the "
"firmware and the hardware layout are available too. To develop special "
"applications or for command line access one can use the nitrocli created "
"by d-e-s-o. Gkey is a go-based command line tool to access the Password "
"Safe and OTP entries. A libnitrokey wrapper for Rust providing access to "
"Nitrokey devices."
msgstr ""
"Naudokite \"Nitrokey\" biblioteką vienkartiniams slaptažodžiams ir "
"slaptažodžių seifo funkcijoms valdyti. Projektai nitrokey-get-totp ir "
"nitrokey-get-password yra gražūs pavyzdžiai, kaip naudoti Nitrokey "
"bibliotekos python sąsajas, kad gautumėte pasirinktinę sąsają. Norėdami "
"pasiekti integruotą lustinę kortelę, galite naudoti OpenSC'komandinės "
"eilutės įrankius. Jei jūsų programa turi PKCS#11 sąsają, naudokite "
"OpenSC'PKCS#11 tvarkyklę. Norėdami dirbti su išmaniąja kortele žemame "
"lygyje, žr. dokumentą \"OpenPGP Card\" specifikacija. Taip pat galima "
"rasti programinės įrangos ir aparatinės įrangos išdėstymo pirminį kodą. "
"Specialioms programoms kurti arba komandinės eilutės prieigai galima "
"naudoti d-e-s-o sukurtą nitrocli. Gkey yra go pagrindu sukurta komandinės"
" eilutės priemonė, skirta prieigai prie slaptažodžių seifo ir OTP įrašų. "
"Rust skirtas libnitrokey apvalkalas, suteikiantis prieigą prie Nitrokey "
"įrenginių."

#: ../to-be-integrated.rst:646
msgid "# HSM 2"
msgstr "# HSM 2"

#: ../to-be-integrated.rst:648
msgid ""
"**Nitrokey HSM:** 124 dataobjects (DF, EF) can be created. Each EF can "
"have a size of up to 256 byte. The total storage capacity of ca. 32 KByte"
" is shared dynamically among keys and data objects."
msgstr ""
"**Nitrokey HSM:** Galima sukurti 124 duomenų objektus (DF, EF). Kiekvieno"
" EF dydis gali būti iki 256 baitų. Bendra apie 32 KByte atminties talpa "
"dinamiškai dalijama raktams ir duomenų objektams."

#: ../to-be-integrated.rst:652
msgid "**Q:** How to use the HSM for Login For: Nitrokey HSM"
msgstr "**Klausimas:** Kaip naudoti HSM prisijungimui: Nitrokey HSM"

#: ../to-be-integrated.rst:655
msgid "Select your use case:"
msgstr "Pasirinkite naudojimo atvejį:"

#: ../to-be-integrated.rst:657
msgid ""
"Login With Nitrokey HSM on Stand Alone Windows Computers Login With "
"Nitrokey HSM on Windows Domain Computers Using MS Active Directory For "
"Unix environments an integration with PAM and OpenSSH is available."
msgstr ""
"Prisijungimas su \"Nitrokey HSM\" atskiruose \"Windows\" kompiuteriuose "
"Prisijungimas su \"Nitrokey HSM\" \"Windows\" domeno kompiuteriuose "
"naudojant \"MS Active Directory\" \"Unix\" aplinkose galima integracija "
"su PAM ir OpenSSH."

#: ../to-be-integrated.rst:661
msgid "**Q:**  How to use the HSM for Email Encryption"
msgstr "**Q:** Kaip naudoti HSM el. pašto šifravimui"

#: ../to-be-integrated.rst:663
msgid ""
"Encrypt your email using the S/MIME industry standard available in all "
"major e-mail clients."
msgstr ""
"Užšifruokite el. laišką naudodami S/MIME pramonės standartą, kurį galima "
"naudoti visose pagrindinėse el. pašto programose."

#: ../to-be-integrated.rst:665
msgid ""
"The Nitrokey HSM has been tested to work with Mozilla Thunderbird and "
"Microsoft Outlook. Other email clients with support for PKCS#11 or "
"Microsoft CSP should work as well."
msgstr ""
"Patikrinta, ar \"Nitrokey HSM\" veikia su \"Mozilla Thunderbird\" ir "
"\"Microsoft Outlook\". Kiti el. pašto klientai, palaikantys PKCS#11 arba "
"\"Microsoft CSP\", taip pat turėtų veikti."

#: ../to-be-integrated.rst:667
msgid "Note: A certificate can be purchased cheaply from CERTUM."
msgstr "Pastaba: sertifikatą galima nebrangiai įsigyti iš CERTUM."

#: ../to-be-integrated.rst:669
msgid "**Q:**   How to use the Nitrokey for Hard Disk Encryption with VeraCrpt?"
msgstr ""
"**Q:** Kaip naudoti \"Nitrokey\" standžiojo disko šifravimui su "
"\"VeraCrpt\"?"

#: ../to-be-integrated.rst:671
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey:"
msgstr ""
"\"VeraCrypt\" yra nemokama atvirojo kodo disko šifravimo programinė "
"įranga, skirta \"Windows\", \"MacOS\" ir \"GNU/Linux\". Ji yra "
"\"TrueCrypt\" įpėdinė, todėl ją rekomenduojama naudoti, nors toliau "
"pateiktos instrukcijos turėtų būti taikomos ir \"TrueCrypt\". Norėdami "
"naudoti programą su \"Nitrokey\", atlikite šiuos veiksmus:"

#: ../to-be-integrated.rst:680
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the password."
msgstr ""
"Saugumo aspektas: Atkreipkite dėmesį, kad \"VeraCrypt\" nesinaudoja "
"visomis \"Nitrokey\" (ir apskritai lustinių kortelių) teikiamomis saugumo"
" priemonėmis. Vietoj to \"Nitrokey\" kortelėje saugomas rakto failas, "
"kurį, naudotojui įvedus slaptažodį, teoriškai gali pavogti kompiuterinis "
"virusas."

#: ../to-be-integrated.rst:682
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation. (Not tested with Nitrokey HSM!)"
msgstr ""
"Pastaba: \"Aloaha Crypt\" remiasi \"TrueCrypt\" / \"VeraCrypt\", tačiau "
"be aprašytų saugumo apribojimų. (Neišbandyta su Nitrokey HSM!)"

#: ../to-be-integrated.rst:685
msgid "**Q:** How to sign and encrypt files and pdfs?"
msgstr "**Q:** Kaip pasirašyti ir užšifruoti failus ir pdf?"

#: ../to-be-integrated.rst:687
msgid "GnuPG"
msgstr "GnuPG"

#: ../to-be-integrated.rst:689
msgid ""
"Starting with version 2.1, GnuPG has build-in but limited support for the"
" Nitrokey HSM. Use the gpgsm tool to sign, verify, encrypt and decrypt "
"files or S/MIME messaging using your Nitrokey HSM. Use a signature key on"
" a Nitrokey HSM to sign documents using Acrobat Reader, Open Office / "
"Libre Office or any other PDF reader supporting electronic signatures. "
"ECC HSM Encryptor"
msgstr ""
"Nuo 2.1 versijos \"GnuPG\" turi integruotą, bet ribotą \"Nitrokey HSM\" "
"palaikymą. Naudokite gpgsm įrankį, kad pasirašytumėte, patikrintumėte, "
"užšifruotumėte ir iššifruotumėte failus arba S/MIME pranešimus naudodami "
"\"Nitrokey HSM\". Naudokite \"Nitrokey HSM\" parašo raktą dokumentams "
"pasirašyti naudodami \"Acrobat Reader\", \"Open Office\" / \"Libre "
"Office\" ar bet kurią kitą PDF skaityklę, palaikančią elektroninius "
"parašus. ECC HSM šifratorius"

#: ../to-be-integrated.rst:692
msgid ""
"ECC HSM Encryptor is a small application to encrypt and decrypt files "
"with a Nitrokey HSM."
msgstr ""
"ECC HSM Encryptor yra nedidelė programa failams šifruoti ir iššifruoti "
"naudojant \"Nitrokey HSM\"."

#: ../to-be-integrated.rst:694
msgid ""
"**Q:** How to do certificat-based Web login Protect access to sensitive "
"information on your website with 2nd factor authentication."
msgstr ""
"**Q:** Kaip atlikti sertifikatais pagrįstą prisijungimą prie žiniatinklio"
" Apsaugokite prieigą prie slaptos informacijos savo svetainėje naudodami "
"2-ojo veiksnio autentifikavimą."

#: ../to-be-integrated.rst:697
msgid ""
"Use a Nitrokey HSM as authentication token via the build-in device "
"authentication PKI or use keys and certificates on a Nitrokey HSM for "
"TLS/SSL client authentication."
msgstr ""
"Naudokite \"Nitrokey HSM\" kaip autentifikavimo žetoną per integruotą "
"įrenginio autentifikavimo PKI arba naudokite \"Nitrokey HSM\" raktus ir "
"sertifikatus TLS/SSL kliento autentifikavimui."

#: ../to-be-integrated.rst:699
msgid ""
"**Q:** SSH for Server Administration with windows For: Nitrokey Pro, "
"Nitrokey Storage, Nitrokey Start, Nitrokey HSM"
msgstr ""
"**Q:** SSH serverio administravimui su \"Windows\" Dėl: \"Nitrokey Pro\","
" \"Nitrokey Storage\", \"Nitrokey Start\", \"Nitrokey HSM"

#: ../to-be-integrated.rst:702
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"\"Nitrokey\" jau turėtų būti įdiegti PGP raktai, o vietinė GnuPG raktų "
"rinkmena turėtų žinoti apie raktus, t. y. sistemoje turėtų būti įdiegta "
"\"GPG4Win\" (reikia tik pagrindinės GnuPG programos). Be to, turėtumėte "
"įdiegti PuTTY. Pasirengimas klientui"

#: ../to-be-integrated.rst:724
msgid "**Q:** SSH Server administration on linux"
msgstr "**Q:** SSH serverio administravimas Linux sistemoje"

#: ../to-be-integrated.rst:771
msgid "**Q:** DNSSEC"
msgstr "**Q:** DNSSEC"

#: ../to-be-integrated.rst:774
msgid "For: Nitrokey HSM"
msgstr "Dėl: Nitrokey HSM"

#: ../to-be-integrated.rst:776
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resource apply:"
msgstr ""
"Apsaugokite savo domeno vardų skirstymą naudodami DNSSEC ir \"Nitrokey "
"HSM\" kaip saugią raktų saugyklą. Ji pagrįsta \"Smartcard-HSM\", todėl "
"taikomi šie ištekliai:"

#: ../to-be-integrated.rst:778
msgid ""
"Signing NSD DNSSEC Zones with Nitrokey HSM by Vadim Penzin. Integration "
"with OpenDNSSEC has been successfully tested in a demo by Richard Lamb. "
"Luis D Espinoza Sanchez & Eberhard W Lisse held a session on using the "
"SmartCard-HSM for DNSSEC at the 2015 ICAAN Meeting in Singapore. Jan-Piet"
" Mens wrote a nice article about integrating the SmartCard-HSM with "
"PowerDNS."
msgstr ""
"NSD DNSSEC zonų pasirašymas naudojant Nitrokey HSM Vadimas Penzinas. "
"Integraciją su OpenDNSSEC sėkmingai išbandė Richard Lamb. 2015 m. ICAAN "
"susitikime Singapūre Luis D Espinoza Sanchez & amp; Eberhard W Lisse "
"surengė sesiją apie \"SmartCard-HSM\" naudojimą DNSSEC. Jan-Piet Mens "
"parašė gražų straipsnį apie SmartCard-HSM integravimą su PowerDNS."

#: ../to-be-integrated.rst:784
msgid ""
"**Q:** Physical Access Control With it's unique build-in device "
"authentication PKI, a Nitrokey HSM has a cryptographically protected "
"unique identity that can be verified in a fast authentication protocol. "
"An access control terminal can verify authenticity and identity of the "
"device, create a secure communication channel and perform offline PIN "
"verification. The coolPACS project has all the details."
msgstr ""
"**Q:** Fizinės prieigos kontrolė Naudojant unikalų integruotą įrenginio "
"autentiškumo nustatymo PKI, \"Nitrokey HSM\" turi kriptografiškai "
"apsaugotą unikalią tapatybę, kurią galima patikrinti greitu autentiškumo "
"nustatymo protokolu. Prieigos kontrolės terminalas gali patikrinti "
"įrenginio autentiškumą ir tapatybę, sukurti saugų ryšio kanalą ir atlikti"
" PIN kodo patikrinimą neprisijungus. Visa išsami informacija pateikiama "
"projekte coolPACS."

#: ../to-be-integrated.rst:787 ../to-be-integrated.rst:883
msgid "**Q:**"
msgstr "**Q:**"

#: ../to-be-integrated.rst:885
msgid "PKI / Certificate Authority (CA)"
msgstr "PKI / Sertifikatų tarnyba (CA)"

#: ../to-be-integrated.rst:887
msgid "**Q:** Secret Management and Cloud Infrastructure"
msgstr "**Q:** Slaptas valdymas ir debesų infrastruktūra"

#: ../to-be-integrated.rst:889
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey "
"HSM can be found at banzaicloud.com."
msgstr ""
"\"Nitrokey HSM\" saugyklos \"Hashicorp Vault/Bank-Vault\" raktų saugumo "
"užtikrinimo būdą galima rasti adresu banzaicloud.com."

#: ../to-be-integrated.rst:891
msgid "**Q:** How to do N-of-m Schemes"
msgstr "**Q:** Kaip atlikti N-of-m schemas"

#: ../to-be-integrated.rst:893
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure"
" sharing of key material/passwords and one for public key authentication "
"to control the access to the device. Please see this blog post for more "
"detailed information. N-of-m for DKEK Shares"
msgstr ""
"\"Nitrokey HSM 2\" palaiko dvi skirtingas n-of-m schemas - vieną, skirtą "
"saugiam dalijimuisi raktų medžiaga / slaptažodžiais, ir kitą, skirtą "
"autentiškumo nustatymui viešuoju raktu, kad būtų galima kontroliuoti "
"prieigą prie įrenginio. Išsamesnės informacijos rasite šiame tinklaraščio"
" įraše. N-of-m DKEK dalijimuisi"

#: ../to-be-integrated.rst:896
msgid ""
"This feature can be used with OpenSC as described here. The general "
"approach is seen in the videos below (external links)."
msgstr ""
"Šią funkciją galima naudoti su \"OpenSC\", kaip aprašyta čia. Bendrą "
"metodą galima pamatyti toliau pateiktuose vaizdo įrašuose (išorinės "
"nuorodos)."

#: ../to-be-integrated.rst:898
msgid "Nitrokey HSM's Secure Key Backup and Restore:"
msgstr "\"Nitrokey HSM's\" saugi raktų atsarginė kopija ir atkūrimas:"

#: ../to-be-integrated.rst:900
msgid "Screencast"
msgstr "Ekrano transliacija"

#: ../to-be-integrated.rst:902
msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
msgstr "Nitrokey HSM's M-of-N slenksčio schema:"

#: ../to-be-integrated.rst:904
msgid "screencast N-of-m for public key authentication"
msgstr "ekrano kopija N-of-m viešajam rakto autentifikavimui"

#: ../to-be-integrated.rst:907
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. The blog post"
" gives an overview and a how-to here (CDN access required) is shown the "
"process step by step in the Smart Card Shell. For OpenSC there is a "
"ticket to get that integrated."
msgstr ""
"Kol kas n-of-m autentifikavimas palaikomas tik \"OpenSCDP\". Tinklaraščio"
" įraše pateikiama apžvalga, o čia (reikalinga CDN prieiga) žingsnis po "
"žingsnio pateikiamas procesas \"Smart Card Shell\". Dėl OpenSC yra "
"bilietas, kad tai būtų integruota."

#: ../to-be-integrated.rst:909
msgid ""
"n-of-m authentication is also supported in the PKI-as-a-Service Portal "
"for locally and remote connected HSMs. The PKI-as-a-Service Portal is "
"based on OpenSCDP."
msgstr ""
"n-of-m autentiškumo nustatymas taip pat palaikomas PKI-as-a-Service "
"portale, skirtame vietoje ir nuotoliniu būdu prijungtiems HSM. \"PKI kaip"
" paslauga\" portalas pagrįstas \"OpenSCDP\"."

#: ../to-be-integrated.rst:911
msgid "**Q:** How to safe Cryptocurrences in the Nitrokey HSM"
msgstr "**Q:** Kaip apsaugoti kriptovaliutas \"Nitrokey HSM"

#: ../to-be-integrated.rst:914
msgid ""
"J.v.d.Bosch wrote a simple, free python program to secure the private key"
" of a Bitcoin wallet in a HSM. See here for further information. Using "
"the HSM in an Ethereum PoA Chain. Tezos has been reported to work with "
"Nitrokey HSM."
msgstr ""
"J.v.d.Boschas parašė paprastą nemokamą python programą, skirtą Bitcoin "
"piniginės privačiam raktui apsaugoti HSM. Daugiau informacijos rasite "
"čia. HSM naudojimas Ethereum PoA grandinėje. Pranešama, kad \"Tezos\" "
"veikia su \"Nitrokey HSM\"."

#: ../to-be-integrated.rst:918
msgid ""
"**Q:** How to use the True Random Number Generator? Nitrokey HSM can be "
"used with Botan and TokenTools by using OpenSC as a PKCS#11 driver."
msgstr ""
"**Q:** Kaip naudoti \"True Random Number Generator\"? \"Nitrokey HSM\" "
"galima naudoti su \"Botan\" ir \"TokenTools\", naudojant \"OpenSC\" kaip "
"PKCS#11 tvarkyklę."

#: ../to-be-integrated.rst:921
msgid ""
"OpenSSL can't use Nitrokey HSM's RNG directly because engine-pkcs11 "
"doesn't contain a mapping for OpenSSL to C_GenerateRandom."
msgstr ""
"OpenSSL negali tiesiogiai naudoti Nitrokey HSM's RNG, nes engine-pkcs11 "
"neturi OpenSSL atvaizdavimo į C_GenerateRandom."

#: ../to-be-integrated.rst:923
msgid "**Q:** What can I use for development and integration?"
msgstr "**Q:** Ką galiu naudoti kūrimui ir integravimui?"

#: ../to-be-integrated.rst:925
msgid ""
"se OpenSC's commandline tools If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. Depending on your Linux "
"distribution, the PKCS driver may may be located at /usr/lib/x86_64"
"-linux-gnu/opensc-pkcs11.so for example."
msgstr ""
"Jei jūsų programa turi PKCS#11 sąsają, naudokite OpenSC'PKCS#11 "
"tvarkyklę. Priklausomai nuo jūsų \"Linux\" distributyvo, PKCS tvarkyklė "
"gali būti, pavyzdžiui, /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so."

#: ../to-be-integrated.rst:927
msgid ""
"Alternatively to OpenSC, you might use sc-hsm-embedded PKCS#11 and CSP-"
"Minidriver Module."
msgstr ""
"Kaip alternatyvą \"OpenSC\" galite naudoti sc-hsm-embedded PKCS#11 ir "
"\"CSP-Minidriver\" modulį."

#: ../to-be-integrated.rst:928
msgid ""
"In case you use Java, you find a JCE Provider as part of Smart Card "
"Shell. You can find information about the m-of-n scheme here. Secure "
"Messaging can be used with the JCE provider. Please register at the "
"CardContact Developer Network to get access to the user manual and "
"further tools. You can also request the manual from us. Smart card "
"forwarding with Fedora A user generated tool on GitHub to provide an easy"
" frontend to OpenSCs toolset - nitrotool A forum post describes the "
"procedure to sign executables with a key stored on HSM on Windows."
msgstr ""
"Jei naudojate \"Java\", JCE teikėjas yra \"Smart Card Shell\" dalis. "
"Informacijos apie m-of-n schemą rasite čia. Su JCE teikėju galima naudoti"
" saugų pranešimų siuntimą. Užsiregistruokite \"CardContact Developer "
"Network\", kad gautumėte prieigą prie naudotojo vadovo ir kitų priemonių."
" Taip pat galite prašyti vadovo iš mūsų. Išmaniųjų kortelių persiuntimas "
"su \"Fedora\" Vartotojo sukurta priemonė \"GitHub\" svetainėje, skirta "
"suteikti paprastą \"OpenSC\" įrankių rinkinio priedėlį - nitrotool Forumo"
" įraše aprašyta procedūra, kaip pasirašyti vykdomąsias programas su HSM "
"saugomu raktu \"Windows\" sistemoje."

#: ../to-be-integrated.rst:936
msgid "Key Use Counter"
msgstr "Pagrindinio naudojimo skaitiklis"

#: ../to-be-integrated.rst:938
msgid ""
"The Key Use Counter is displayed in the Key Manager of the Smart Card "
"Shell. At the moment you can only set it with a script "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter in the class "
"scsh/sc-hsm/SmartCardHSM.js)."
msgstr ""
"Raktų naudojimo skaitiklis rodomas išmaniosios kortelės apvalkalo raktų "
"tvarkytuve. Šiuo metu jį galima nustatyti tik scenarijumi "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter klasėje scsh/sc-"
"hsm/SmartCardHSM.js)."

#: ../to-be-integrated.rst:940
msgid ""
"In our PKCS#11 module there is a proprietary attribute "
"CKA_SC_HSM_KEY_USE_COUNTER with the key use of the C_GenerateKeyPair "
"counter can be set. The attribute can then also be set for a key can be "
"queried."
msgstr ""
"Mūsų PKCS#11 modulyje yra patentuotas atributas "
"CKA_SC_HSM_KEY_USE_COUNTER, kuriuo galima nustatyti C_GenerateKeyPair "
"skaitiklio rakto naudojimą. Tada atributą taip pat galima nustatyti "
"raktui, kurio galima klausti."

#: ../to-be-integrated.rst:942
msgid ""
"In OCF and the JCE Provider, the Key Use Counter can be queried with "
"SmartCardHSMKey.getUseCounter() and confirm with "
"SmartCardHSMKeySpec.setKeyUseCounter() can be set."
msgstr ""
"OCF ir JCE teikėjo programoje galima užklausti raktų naudojimo skaitiklio"
" naudojant SmartCardHSMKey.getUseCounter() ir patvirtinti naudojant "
"SmartCardHSMKeySpec.setKeyUseCounter()."

#~ msgid "# storage"
#~ msgstr "# storage"

#~ msgid "Configure Hidden Volumes:"
#~ msgstr "Konfigūruokite paslėptus tomus:"

#~ msgid ""
#~ "Unlock encrypted volume from the "
#~ "Nitrokey App menu. Select \"setup hidden"
#~ " volume\". Now you need to enter "
#~ "a new password twice to protect "
#~ "your hidden volume. The password "
#~ "strength is indicated below."
#~ msgstr ""
#~ "Užšifruotą tomą atrakinkite iš \"Nitrokey "
#~ "App\" meniu. Pasirinkite \"setup hidden "
#~ "volume\". Dabar reikia du kartus įvesti"
#~ " naują slaptažodį, kad apsaugotumėte "
#~ "paslėptą tomą. Slaptažodžio stiprumas "
#~ "nurodytas toliau."

#~ msgid ""
#~ "Note: PINs can only be tried three"
#~ " times only which is why they "
#~ "can be short. Passwords like used "
#~ "for hidden devices can potentially be"
#~ " attacked unlimited which is why they"
#~ " need to be sufficiently strong."
#~ msgstr ""
#~ "Pastaba: PIN kodus galima išbandyti tik"
#~ " tris kartus, todėl jie gali būti "
#~ "trumpi. Slaptažodžius, pavyzdžiui, naudojamus "
#~ "paslėptiems įrenginiams, galima atakuoti "
#~ "neribotai, todėl jie turi būti "
#~ "pakankamai stiprūs."

#~ msgid ""
#~ "Next you need to define the "
#~ "storage area being used. Hidden volumes"
#~ " are stored in the empty space "
#~ "of the encrypted volume. This is a"
#~ " critical choice because it could "
#~ "destroy data on the (not-hidden) "
#~ "encrypted volume and reveal the "
#~ "existience of the hidden volume."
#~ msgstr ""
#~ "Toliau reikia apibrėžti naudojamą saugojimo"
#~ " sritį. Paslėpti tomai saugomi tuščioje "
#~ "užšifruoto tomo vietoje. Tai labai "
#~ "svarbus pasirinkimas, nes gali būti "
#~ "sunaikinti (neslėpto) užšifruoto tomo duomenys"
#~ " ir atskleistas paslėpto tomo egzistavimas."

#~ msgid ""
#~ "You should use one FAT32 partition "
#~ "on your encrypted volume as journaling"
#~ " filesystems, especially NTFS, may destroy"
#~ " the encrypted data. Copy some files"
#~ " to the encrypted volume prior to "
#~ "creating the hidden volume. Once you "
#~ "configured a hidden volume you shouldn't"
#~ " add or change files on the "
#~ "encrypted volume anymore. Identify the "
#~ "storage space your files consume on "
#~ "the encrypted volume. For example: 10%"
#~ " The hiden volume should start after"
#~ " your files on the encrypted volume."
#~ " For example: 10% files + 10% "
#~ "buffer = 20% The hidden volume "
#~ "should end in a distance before "
#~ "the end of the storage. For "
#~ "example: 90%"
#~ msgstr ""
#~ "Užšifruotame tome turėtumėte naudoti vieną "
#~ "FAT32 skirsnį, nes žurnalinės failų "
#~ "sistemos, ypač NTFS, gali sunaikinti "
#~ "užšifruotus duomenis. Prieš kurdami paslėptą"
#~ " tomą, į užšifruotą tomą nukopijuokite "
#~ "kai kuriuos failus. Sukonfigūravę paslėptą "
#~ "tomą, į užšifruotą tomą nebeturėtumėte'dėti"
#~ " ar keisti failų. Nustatykite, kiek "
#~ "vietos saugykloje užšifruotame tome užima "
#~ "jūsų failai. Pavyzdžiui: 10% Tpaslėptasis "
#~ "tomas turėtų prasidėti po jūsų failų "
#~ "užšifruotame tome. Pavyzdžiui: 10% files "
#~ "+ 10% buffer = 20% Tpaslėptas "
#~ "tomas turėtų baigtis likus tam tikram"
#~ " atstumui iki saugyklos pabaigos. "
#~ "Pavyzdžiui: 90%"

#~ msgid ""
#~ "In case you use two or more "
#~ "hidden volumes, note that their storage"
#~ " area must not overlap. Otherwise "
#~ "they would override and destroy each "
#~ "other's data. Each hidden volume would"
#~ " require a different password."
#~ msgstr ""
#~ "Jei naudojate du ar daugiau paslėptų "
#~ "tomų, atkreipkite dėmesį, kad jų "
#~ "saugojimo sritis neturi persidengti. Priešingu"
#~ " atveju jie užgoš ir sunaikins vienas"
#~ " kito duomenis. Kiekvienam paslėptajam "
#~ "tūriui reikėtų skirtingo slaptažodžio."

#~ msgid "Usage of Hidden Volumes:"
#~ msgstr "Paslėptų tomų naudojimas:"

#~ msgid ""
#~ "Select \"unlock encrypted volume\" and "
#~ "enter your User PIN. Select \"unlock "
#~ "hidden volume\" and enter any of "
#~ "the hidden volume's passwords. If this"
#~ " is the first time you may need"
#~ " to create a partition on the "
#~ "hidden volume. Windows will open an "
#~ "appropriate window and ask you to "
#~ "do so. On Linux and Mac OS "
#~ "you may need to open a partition"
#~ " manager and create a partition "
#~ "manually. You can create as many "
#~ "partitions as you want. We recommend "
#~ "FAT(32) if you want to access the"
#~ " partition from various operating systems."
#~ " Make sure to unmount/eject all "
#~ "partitions on the hidden volumes before"
#~ " locking or disconnecting the Nitrokey."
#~ msgstr ""
#~ "Pasirinkite \"atrakinti užšifruotą tomą\" ir"
#~ " įveskite naudotojo PIN kodą. Pasirinkite"
#~ " \"atrakinti paslėptą tomą\" ir įveskite"
#~ " bet kurį paslėpto tomo slaptažodį. "
#~ "Jei tai daroma pirmą kartą, gali "
#~ "tekti sukurti paslėpto tomo skirsnį. "
#~ "Sistema \"Windows\" atidarys atitinkamą langą"
#~ " ir paprašys tai padaryti. Linux ir"
#~ " Mac OS gali tekti atidaryti skirsnių"
#~ " tvarkyklę ir sukurti skirsnį rankiniu "
#~ "būdu. Galite sukurti tiek skirsnių, kiek"
#~ " norite. Rekomenduojame naudoti FAT(32), "
#~ "jei norite pasiekti skaidinį iš įvairių"
#~ " operacinių sistemų. Prieš užrakindami arba"
#~ " atjungdami \"Nitrokey\" įsitikinkite, kad "
#~ "atjungėte / išstūmėte visus paslėptų "
#~ "tomų skaidinius."

#~ msgid "Also see older but comprehensive Nitrokey Storage manual."
#~ msgstr "Taip pat žr. senesnį, bet išsamų \"Nitrokey\" saugojimo vadovą."

