# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-06 01:52+0200\n"
"PO-Revision-Date: 2022-01-15 15:11+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Danish <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-to-be-integrated/da/>\n"
"Language: da\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"

#: ../to-be-integrated.rst:1
msgid "# storage"
msgstr "Pro + opbevaring"

#: ../to-be-integrated.rst:4
msgid "Configure Hidden Volumes:"
msgstr "Konfigurer skjulte volumener:"

#: ../to-be-integrated.rst:6
msgid ""
"Unlock encrypted volume from the Nitrokey App menu. Select \"setup hidden"
" volume\". Now you need to enter a new password twice to protect your "
"hidden volume. The password strength is indicated below."
msgstr ""
"Lås krypteret volumen op fra Nitrokey App-menuen. Vælg \"opsætning af skjult "
"volumen\". Nu skal du indtaste en ny adgangskode to gange for at beskytte "
"din skjulte volumen. Adgangskodestyrken er angivet nedenfor."

#: ../to-be-integrated.rst:10
msgid ""
"Note: PINs can only be tried three times only which is why they can be "
"short. Passwords like used for hidden devices can potentially be attacked"
" unlimited which is why they need to be sufficiently strong."
msgstr ""
"Bemærk: PIN-koder kan kun prøves tre gange, hvilket er grunden til, at de "
"kan være korte. Adgangskoder som dem, der bruges til skjulte enheder, kan "
"potentielt angribes ubegrænset, og derfor skal de være tilstrækkeligt stærke."

#: ../to-be-integrated.rst:17
msgid ""
"Next you need to define the storage area being used. Hidden volumes are "
"stored in the empty space of the encrypted volume. This is a critical "
"choice because it could destroy data on the (not-hidden) encrypted volume"
" and reveal the existience of the hidden volume."
msgstr ""
"Dernæst skal du definere det lagerområde, der skal bruges. Skjulte volumener "
"gemmes i det tomme rum på den krypterede volumen. Dette er et kritisk valg, "
"fordi det kan ødelægge data på den (ikke skjulte) krypterede volumen og "
"afsløre eksistensen af den skjulte volumen."

#: ../to-be-integrated.rst:13
#, python-format
msgid ""
"You should use one FAT32 partition on your encrypted volume as journaling"
" filesystems, especially NTFS, may destroy the encrypted data. Copy some "
"files to the encrypted volume prior to creating the hidden volume. Once "
"you configured a hidden volume you shouldn't add or change files on the "
"encrypted volume anymore. Identify the storage space your files consume "
"on the encrypted volume. For example: 10% The hiden volume should start "
"after your files on the encrypted volume. For example: 10% files + 10% "
"buffer = 20% The hidden volume should end in a distance before the end of"
" the storage. For example: 90%"
msgstr ""
"Du bør bruge en FAT32-partition på din krypterede disk, da "
"journalfilesystemer, især NTFS, kan ødelægge de krypterede data. Kopier "
"nogle filer til den krypterede volumen, før du opretter den skjulte volumen. "
"Når du har konfigureret en skjult volumen, bør du ikke længere tilføje eller "
"ændre filer på den krypterede volumen. Identificer den lagerplads, som dine "
"filer bruger på den krypterede volumen. For eksempel: 10% TDen skjulte "
"volumen skal starte efter dine filer på den krypterede volumen. For eksempel:"
" 10% ffiler + 10% buffer = 20% Tdet skjulte volumen bør slutte i en afstand "
"før lagerpladsens slutning. For eksempel: 90%."

#: ../to-be-integrated.rst:19
msgid ""
"In case you use two or more hidden volumes, note that their storage area "
"must not overlap. Otherwise they would override and destroy each other's "
"data. Each hidden volume would require a different password."
msgstr ""
"Hvis du bruger to eller flere skjulte volumener, skal du være opmærksom på, "
"at deres lagerområde ikke må overlappe hinanden. Ellers vil de tilsidesætte "
"og ødelægge hinandens data. Hver skjult volumen vil kræve en anden "
"adgangskode."

#: ../to-be-integrated.rst:21
msgid "Usage of Hidden Volumes:"
msgstr "Anvendelse af skjulte volumener:"

#: ../to-be-integrated.rst:23
msgid ""
"Select \"unlock encrypted volume\" and enter your User PIN. Select "
"\"unlock hidden volume\" and enter any of the hidden volume's passwords. "
"If this is the first time you may need to create a partition on the "
"hidden volume. Windows will open an appropriate window and ask you to do "
"so. On Linux and Mac OS you may need to open a partition manager and "
"create a partition manually. You can create as many partitions as you "
"want. We recommend FAT(32) if you want to access the partition from "
"various operating systems. Make sure to unmount/eject all partitions on "
"the hidden volumes before locking or disconnecting the Nitrokey."
msgstr ""
"Vælg \"unlock encrypted volume\" og indtast din bruger-PIN-kode. Vælg "
"\"unlock hidden volume\" og indtast en af de skjulte volumens adgangskoder. "
"Hvis det er første gang, skal du muligvis oprette en partition på den "
"skjulte volumen. Windows åbner et passende vindue og beder dig om at gøre "
"det. På Linux og Mac OS skal du muligvis åbne en partitionshåndtering og "
"oprette en partition manuelt. Du kan oprette så mange partitioner, som du "
"ønsker. Vi anbefaler FAT(32), hvis du ønsker at få adgang til partitionen "
"fra forskellige operativsystemer. Sørg for at afmontere/udskubbe alle "
"partitioner på de skjulte volumener, før du låser eller afbryder Nitrokey."

#: ../to-be-integrated.rst:28
msgid "Also see older but comprehensive Nitrokey Storage manual."
msgstr "Se også den ældre, men omfattende Nitrokey Storage-manual."

#: ../to-be-integrated.rst:32
msgid "# pro"
msgstr "# pro"

#: ../to-be-integrated.rst:36
msgid "PKCS#11 Driver"
msgstr "PKCS#11-driver"

#: ../to-be-integrated.rst:38
msgid ""
"If you want to use S/MIME email encryption with Thunderbird, to use "
"TrueCrypt/VeraCrypt, certificate-based SSL authentication with Firefox, "
"PuTTY/KiTTY, OpenSSH, OpenSSL, or any other PKCS#11 compatible software, "
"you should install OpenSC."
msgstr ""
"Hvis du vil bruge S/MIME-kryptering af e-mails med Thunderbird, TrueCrypt/"
"VeraCrypt, certifikatbaseret SSL-godkendelse med Firefox, PuTTY/KiTTY, "
"OpenSSH, OpenSSL eller enhver anden PKCS#11-kompatibel software, skal du "
"installere OpenSC."

#: ../to-be-integrated.rst:40
msgid ""
"Note that a Nitrokey initialized with OpenSC doesn't work with "
"GnuPG/OpenPGP. But the other way around works fine. If you want to use "
"Nitrokey with both GnuPG and PKCS#11, generate the keys with GnuPG."
msgstr ""
"Bemærk, at en Nitrokey initialiseret med OpenSC ikke virker med GnuPG/"
"OpenPGP. Men den anden vej rundt fungerer fint. Hvis du ønsker at bruge "
"Nitrokey med både GnuPG og PKCS#11, skal du generere nøglerne med GnuPG."

#: ../to-be-integrated.rst:42
msgid ""
"Don't use PKCS#11 in parallel with GnuPG because both may interfere and "
"unexpected issues may result. (There is another promising project scd-"
"pkcs11 in development which may overcome this limitation eventually. "
"Currently it's limit to the authentication certificate and not widely "
"tested yet.)"
msgstr ""
"Brug ikke PKCS#11 parallelt med GnuPG, da begge dele kan forstyrre hinanden, "
"og der kan opstå uventede problemer. (Der er et andet lovende projekt scd-"
"pkcs11 under udvikling, som måske vil overvinde denne begrænsning med tiden. "
"I øjeblikket er det begrænset til autentifikationscertifikatet og er ikke "
"bredt testet endnu)."

#: ../to-be-integrated.rst:44
msgid ""
"Instructions, how to create a valid X.509 certificate with Nitrokey (1, "
"2, 3). These are general instructions how to use X.509 certificates. "
"Alternative PKCS#11 Driver:"
msgstr ""
"Vejledning om, hvordan du opretter et gyldigt X.509-certifikat med Nitrokey ("
"1, 2, 3). Dette er generelle instruktioner om, hvordan man bruger X.509-"
"certifikater. Alternativ PKCS#11-driver:"

#: ../to-be-integrated.rst:47
msgid "The recommended PKCS#11 driver is OpenSC."
msgstr "Den anbefalede PKCS#11-driver er OpenSC."

#: ../to-be-integrated.rst:49
msgid "Windows Mini Driver"
msgstr "Windows Mini driver"

#: ../to-be-integrated.rst:51
msgid ""
"This Mini Driver allows to integrate Nitrokey with Window's certificate "
"store. Subsequently all applications which use this certificate storage "
"can be used with Nitrokey (e.g. Internet Explorer, Google Chrome web "
"browser, Windows Login). To install the driver, you may need to allow the"
" installation of unsigned drivers first. Aloaha"
msgstr ""
"Denne minidriver gør det muligt at integrere Nitrokey med Window's "
"certifikatlager. Derefter kan alle programmer, der bruger dette "
"certifikatlager, bruges med Nitrokey (f.eks. Internet Explorer, Google "
"Chrome-webbrowseren, Windows Login). For at installere driveren skal du "
"muligvis først tillade installation af usignerede drivere. Aloaha"

#: ../to-be-integrated.rst:54
msgid ""
"All applications of Aloaha are working with the Nitrokey. This includes a"
" middleware to integrate Nitrokey with other PKCS#11 based applications "
"and with Windows as well as applications to encrypt and sign PDFs and the"
" hard disk."
msgstr ""
"Alle Aloaha-applikationer fungerer med Nitrokey. Dette omfatter en "
"middleware til at integrere Nitrokey med andre PKCS#11-baserede "
"applikationer og med Windows samt applikationer til at kryptere og signere "
"PDF-filer og harddisken."

#: ../to-be-integrated.rst:56
msgid "Alternative PKCS#11 Driver:"
msgstr "Alternativ PKCS#11-driver:"

#: ../to-be-integrated.rst:58
msgid ""
"The recommended PKCS#11 driver is OpenSC. Alternatively, you could use "
"Peter Koch's PKCS#11 driver which has the following limitations:"
msgstr ""
"Den anbefalede PKCS#11-driver er OpenSC. Alternativt kan du bruge Peter "
"Koch's PKCS#11-driver, som har følgende begrænsninger:"

#: ../to-be-integrated.rst:60
msgid ""
"No import of existing X.509 certificates. (Instead, keys have to be "
"generated on the Nitrokey) The Linux version does not allow to generate "
"keys. Modification of the password/PIN under Linux is not possible."
msgstr ""
"Ingen import af eksisterende X.509-certifikater. (Nøglerne skal i stedet "
"genereres på Nitrokey) Linux-versionen giver ikke mulighed for at generere "
"nøgler. Ændring af password/PIN under Linux er ikke mulig."

#: ../to-be-integrated.rst:64
msgid "p11-glue"
msgstr "p11-lim"

#: ../to-be-integrated.rst:66
msgid ""
"P11-glue uses PKCS#11 as glue between crypto libraries and security "
"applications on the open source desktop. Articles in German"
msgstr ""
"P11-glue bruger PKCS#11 som lim mellem kryptobiblioteker og "
"sikkerhedsprogrammer på open source-skrivebordet. Artikler på tysk"

#: ../to-be-integrated.rst:69
msgid ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."
msgstr ""
"En generel og god forståelig introduktion til artiklen Magisches Leuchten i "
"Linux Magazin 2010/12. En omfattende vejledning findes på Pro-Linux. Einen "
"ausfuehrlichen Erfahrungsbericht unter CentOS."

#: ../to-be-integrated.rst:75
msgid "**Q:** How can I login into Windows?"
msgstr "**Q:** Hvordan kan jeg logge ind på Windows?"

#: ../to-be-integrated.rst:75
msgid ""
"To access Nitrokey devices read-only, download and install this Mini "
"Driver (CSP). If you are using Windows Server you may need to disable the"
" driver signature verification before being able to install the driver. "
"Note that the Mini Driver for Nitrokey Pro may not work yet for write "
"mode."
msgstr ""
"Hvis du vil have skrivebeskyttet adgang til Nitrokey-enheder, skal du "
"downloade og installere denne minidriver (CSP). Hvis du bruger Windows "
"Server, skal du muligvis deaktivere bekræftelsen af driverens signatur, før "
"du kan installere driveren. Bemærk, at minidriveren til Nitrokey Pro "
"muligvis endnu ikke fungerer i skrivetilstand."

#: ../to-be-integrated.rst:77
msgid "There exist different ways to use a Nitrokey to logon on Windows:"
msgstr ""
"Der findes forskellige måder at bruge en Nitrokey til at logge på Windows på:"

#: ../to-be-integrated.rst:79
msgid ""
"Login on stand alone Windows computers based on EIDAuthenticate. "
"Alternatively install OpenSC and use Aloaha Smart Login's PKCS#11 "
"Credentials. Login on Windows domain computers using MS Active Directory "
"based OpenPGP-CSP minidriver for Nitrokey Storage 2 Nitrokey Pro 2 Login "
"on Windows domain computers using MS Active Directory based on Smart "
"Policy for other Nitrokey devices."
msgstr ""
"Login på enkeltstående Windows-computere baseret på EIDAuthenticate. "
"Alternativt kan du installere OpenSC og bruge Aloaha Smart Login's PKCS#11 "
"Credentials. Login på Windows-domænecomputere ved hjælp af MS Active "
"Directory baseret på OpenPGP-CSP-minidriver til Nitrokey Storage 2 Nitrokey "
"Pro 2 Login på Windows-domænecomputere ved hjælp af MS Active Directory "
"baseret på Smart Policy for andre Nitrokey-enheder."

#: ../to-be-integrated.rst:84
msgid "**Q:** How can I login into Linux? Linux Login with PAM"
msgstr "**Q:** Hvordan kan jeg logge ind på Linux? Linux login med PAM"

#: ../to-be-integrated.rst:87
msgid "You have two options: pam_p11 or Poldi."
msgstr "Du har to muligheder: pam_p11 eller Poldi."

#: ../to-be-integrated.rst:89
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on "
"S/MIME certificates. Please have a look at the documentation for more "
"information."
msgstr ""
"Løsningen med pam_p11 er vanskeligere at opnå og er baseret på S/MIME-"
"certifikater. Se venligst dokumentationen for at få flere oplysninger."

#: ../to-be-integrated.rst:91
msgid ""
"Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication with "
"RSA keys (see Troubleshooting for information on ECC keys). Besides the "
"installation of poldi (e.g. 'sudo apt-get install libpam-poldi' on "
"Ubuntu) the following steps are needed to get it working."
msgstr ""
"Poldi 0.4.1 fungerer uden problemer med Nitrokey til PAM-godkendelse med RSA-"
"nøgler (se Fejlfinding for oplysninger om ECC-nøgler). Udover installationen "
"af poldi (f.eks. 'sudo apt-get install libpam-poldi' på Ubuntu) er følgende "
"trin nødvendige for at få det til at virke."

#: ../to-be-integrated.rst:93
msgid ""
"It is necessary to already have keys generated on the Nitrokey, as the "
"authentication key is used by PAM."
msgstr ""
"Det er nødvendigt, at nøglerne allerede er genereret på Nitrokey, da "
"autentifikationsnøglen bruges af PAM."

#: ../to-be-integrated.rst:95
msgid ""
"At first you need to find out the \"Application ID\" of your Nitrokey. "
"You can use \"gpg --card-status | grep Application\" to find out what's "
"yours. It looks like 'D00600012401020000000000xxxxxxxx' or similiar. Now "
"you have to add a line to /etc/poldi/localdb/users which contains the "
"following information"
msgstr ""
"Først skal du finde ud af din Nitrokey's \"Application ID\". Du kan bruge "
"\"gpg --card-status | grep Application\" for at finde ud af, hvad der er "
"din. Det ligner 'D006000124010200200000000000000xxxxxxxx' eller lignende. Nu "
"skal du tilføje en linje til /etc/poldi/localdb/users, som indeholder "
"følgende oplysninger"

#: ../to-be-integrated.rst:97
msgid "<YourApplicationID> <YourUsername>"
msgstr "<YourApplicationID> <YourUsername>"

#: ../to-be-integrated.rst:99
msgid ""
"This could look like 'D00600012401020000000000xxxxxxxx nitrokeyuser'. Now"
" dump the public key from the Nitrokey into poldi local db:"
msgstr ""
"Det kunne se ud som 'D006000124010200200000000000000xxxxxxxxxxxx "
"nitrokeyuser'. Nu dumpes den offentlige nøgle fra Nitrokey til poldi local "
"db:"

#: ../to-be-integrated.rst:101
msgid ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye'"
msgstr ""
"sudo sh -c 'gpg-connect-agent \"/datafile /etc/poldi/localdb/keys/"
"<YourApplicationID>\" \"SCD READKEY --advanced OPENPGP.3\" /bye'"

#: ../to-be-integrated.rst:103
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick!"
msgstr ""
"Vær opmærksom på, at du skal indsætte dit ansøgnings-ID i linjen ovenfor "
"sammen med dit stick-ID!"

#: ../to-be-integrated.rst:105
msgid ""
"Then you have to configure PAM. Just add \"auth sufficient pam_poldi.so\""
" to pam configuration files according to your needs:"
msgstr ""
"Derefter skal du konfigurere PAM. Du skal blot tilføje \"auth sufficient "
"pam_poldi.so\" til pam-konfigurationsfilerne i overensstemmelse med dine "
"behov:"

#: ../to-be-integrated.rst:107
msgid ""
"/etc/pam.d/common-auth for graphical user login /etc/pam.d/login for "
"console login /etc/pam.d/sudo for sudo authentication /etc/pam.d/gnome-"
"screensaver for login back from a locked screen etc."
msgstr ""
"/etc/pam.d/common-auth for grafisk brugerlogin /etc/pam.d/login for "
"konsollogin /etc/pam.d/sudo for sudo autentifikation /etc/pam.d/gnome-"
"screensaver for login tilbage fra en låst skærm osv."

#: ../to-be-integrated.rst:113
msgid ""
"Note: Pam is dangerous to play around with, so make sure you have a way "
"of accessing the machine if you break authentication completely. Remember"
" that booting into rescue mode from Grub requires a root password, so "
"keep that or a live CD which can read your filesystems to hand."
msgstr ""
"Bemærk: Pam er farligt at lege med, så sørg for, at du har en måde at få "
"adgang til maskinen på, hvis du bryder godkendelsen helt. Husk, at opstart i "
"rescue mode fra Grub kræver en root-adgangskode, så hav den eller en live-"
"cd, der kan læse dine filsystemer, ved hånden."

#: ../to-be-integrated.rst:115
msgid ""
"Here you find further instructions (in German, partially outdated). "
"Troubleshooting"
msgstr ""
"Her finder du yderligere instruktioner (på tysk, delvist forældet). "
"Fejlfinding"

#: ../to-be-integrated.rst:118
msgid ""
"If you get an error similar to 'ERR 100663414 Invalid ID <SCD>' you "
"should try instead"
msgstr ""
"Hvis du får en fejl, der ligner 'ERR 100663414 Invalid ID <SCD>' bør du i "
"stedet prøve"

#: ../to-be-integrated.rst:120
msgid ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"
msgstr ""
"poldi-ctrl -k > <YourApplicationID>;; sudo mv <YourApplicationID> /etc/poldi/"
"localdb/keys"

#: ../to-be-integrated.rst:122
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick! ECC Keys Unfortunately, poldi has no "
"support for ECC keys yet. But there is a patch for ECC keys used with "
"Nitrokey Start. This is already included in the master branch of the "
"poldi development repository and thus will be released in a newer version"
" eventually. In the meantime the only option is to build poldi from "
"source."
msgstr ""
"Vær opmærksom på, at du skal indsætte dit ansøgnings-ID i linjen ovenfor "
"sammen med dit stick-ID! ECC-nøgler Desværre har poldi endnu ingen "
"understøttelse af ECC-nøgler. Men der er en patch til ECC-nøgler, der bruges "
"med Nitrokey Start. Denne er allerede inkluderet i mastergrenen af poldi-"
"udviklingsrepositoriet og vil således blive frigivet i en nyere version på "
"et tidspunkt. I mellemtiden er den eneste mulighed at bygge poldi fra "
"kildekoden."

#: ../to-be-integrated.rst:128
msgid "**Q:** How can I login with One Time Passwords?"
msgstr "**Q:** Hvordan kan jeg logge ind med engangskoder?"

#: ../to-be-integrated.rst:128
msgid ""
"One-Time-Passwords (OTP) are used for secure login to websites and local "
"applications."
msgstr ""
"One-Time-Passwords (OTP) bruges til sikkert login til websteder og lokale "
"applikationer."

#: ../to-be-integrated.rst:130
msgid "Two OTP modes exist:"
msgstr "Der findes to OTP-tilstande:"

#: ../to-be-integrated.rst:132
msgid ""
"Time-based One-time Passwords (TOTP) is widely used for websites. If "
"unsure, assume you are using this mode. HMAC-based One-time Passwords "
"(HOTP) is used for local applications and computer logins."
msgstr ""
"Tidsbaserede engangsadgangskoder (TOTP) anvendes i vid udstrækning på "
"websteder. Hvis du er usikker, skal du antage, at du bruger denne tilstand. "
"HMAC-baserede engangsadgangskoder (HOTP) bruges til lokale programmer og "
"computerlogins."

#: ../to-be-integrated.rst:135
msgid ""
"To use One-Time-Passwords with your Nitrokey Pro or Nitrokey Storage, you"
" need to download and install the latest Nitrokey App. Time-based One-"
"time Passwords - TOTP"
msgstr ""
"Hvis du vil bruge engangskoder med din Nitrokey Pro eller Nitrokey Storage, "
"skal du downloade og installere den nyeste Nitrokey-app. Tidsbaserede "
"engangsadgangskoder - TOTP"

#: ../to-be-integrated.rst:138
msgid ""
"For login to a Google account. For login to a Microsoft account. For "
"login to a Nextcloud account. Generic instructions for all other "
"services."
msgstr ""
"For at logge ind på en Google-konto. For login til en Microsoft-konto. For "
"login til en Nextcloud-konto. Generiske instruktioner for alle andre "
"tjenester."

#: ../to-be-integrated.rst:143
msgid "**Q:** How can I use the Nitrokey Pro with Android?"
msgstr "**Q:** Hvordan kan jeg bruge Nitrokey Pro med Android?"

#: ../to-be-integrated.rst:145
msgid ""
"It is possible to use the Nitrokey on an Android devices in combination "
"with OpenKeychain. This enables one to encrypt/decrypt E-Mails or files "
"via OpenPGP."
msgstr ""
"Det er muligt at bruge Nitrokey på en Android-enhed i kombination med "
"OpenKeychain. Dette gør det muligt at kryptere/afkryptere e-mails eller "
"filer via OpenPGP."

#: ../to-be-integrated.rst:147
msgid ""
"Cotech provides Android software with commercial support. Please have a "
"look there, if you like. The following instructions are based on "
"OpenKeychain."
msgstr ""
"Cotech leverer Android-software med kommerciel support. Tag et kig der, hvis "
"du har lyst. De følgende instruktioner er baseret på OpenKeychain."

#: ../to-be-integrated.rst:149
msgid ""
"Tested with Nitrokey Start, Pro and Storage in combination with Android "
"7.1, OpenKeychain 4.5 and K9Mail 5.207. Prerequisites"
msgstr ""
"Testet med Nitrokey Start, Pro og Storage i kombination med Android 7.1, "
"OpenKeychain 4.5 og K9Mail 5.207. Forudsætninger"

#: ../to-be-integrated.rst:152
msgid ""
"Android phone which is capable of USB OTG USB OTG cable to connect the "
"Nitrokey with your phone OpenKeychain installed on Device Public key "
"saved on the device or uploaded on a keyserver"
msgstr ""
"Android-telefon, der kan bruge USB OTG USB OTG-kabel til at forbinde "
"Nitrokey med din telefon OpenKeychain installeret på enheden Offentlig nøgle "
"gemt på enheden eller uploadet på en nøgleserver"

#: ../to-be-integrated.rst:157
msgid "First steps"
msgstr "De første skridt"

#: ../to-be-integrated.rst:159
msgid ""
"To import the keys of the Nitrokey you should at first start the "
"OpenKeychain app. Then insert the Nitrokey with the USB OTG cable. "
"OpenKeychain starts a dialog to use the Nitrokey (you may have to accept "
"the usage of the key with OpenKeychain first). Now you can choose between"
" looking for public key on a keyserver or choosing the public key from "
"storage. After the public key got imported you have to tap on 'connect "
"key' to import a reference to the private key of the Nitrokey. That’s "
"basically it."
msgstr ""
"For at importere nøglerne i Nitrokey skal du først starte OpenKeychain-"
"appen. Derefter skal du indsætte Nitrokey med USB OTG-kablet. OpenKeychain "
"starter en dialogboks for at bruge Nitrokey (du skal muligvis først "
"acceptere brugen af nøglen med OpenKeychain). Nu kan du vælge mellem at søge "
"efter den offentlige nøgle på en nøgleserver eller vælge den offentlige "
"nøgle fra lageret. Når den offentlige nøgle er blevet importeret, skal du "
"trykke på 'connect key' for at importere en reference til den private nøgle "
"til Nitrokey. Det er i princippet det hele."

#: ../to-be-integrated.rst:161
msgid ""
"In the case that no there are no keys on the Nitrokey yet, OpenKeychain "
"will help with the creation of a new key pair instead. Usage"
msgstr ""
"Hvis der endnu ikke er nogen nøgler på Nitrokey, hjælper OpenKeychain i "
"stedet med at oprette et nyt nøglepar. Anvendelse"

#: ../to-be-integrated.rst:164
msgid ""
"You can use all functions of OpenKeychain and Apps which make use of "
"OpenKeychain. Therefore you can just encrypt/decrypt messages or files by"
" hand using the app directly or for example you combine K9Mail with "
"OpenKeychain to decrypt your mails automatically. It is important to "
"choose the right key in the K9Mail account settings first."
msgstr ""
"Du kan bruge alle funktioner i OpenKeychain og apps, der bruger "
"OpenKeychain. Du kan derfor bare kryptere/afkryptere beskeder eller filer i "
"hånden ved hjælp af appen direkte, eller du kan f.eks. kombinere K9Mail med "
"OpenKeychain for at dekryptere dine mails automatisk. Det er vigtigt først "
"at vælge den rigtige nøgle i K9Mail kontoindstillingerne."

#: ../to-be-integrated.rst:166
msgid ""
"Note that you may have to enable the on-screen keyboard in the android "
"settings to type the PIN as the system recognizes the Nitrokey as a "
"physical keyboard and therefore tries to hide the on-screen keyboard. Go "
"to 'Language and Input' > 'Current Keyboard' > 'Hardware show input "
"method'."
msgstr ""
"Bemærk, at du muligvis skal aktivere skærmtastaturet i Android-"
"indstillingerne for at skrive PIN-koden, da systemet genkender Nitrokey som "
"et fysisk tastatur og derfor forsøger at skjule skærmtastaturet. Gå til "
"'Sprog og input' > 'Nuværende tastatur' > 'Hardware viser inputmetode'."

#: ../to-be-integrated.rst:169
msgid "**Q:** How can I use the Nitrokey Pro with Iphone?"
msgstr "**Q:** Hvad kan jeg bruge Nitrokey til?"

#: ../to-be-integrated.rst:170
msgid "Currently it is not possible"
msgstr "I øjeblikket er det ikke muligt"

#: ../to-be-integrated.rst:172
msgid "**Q:** How can I use the Nitrokey Pro with Ubuntu Phone?"
msgstr "**Q:** Hvordan kan jeg bruge Nitrokey Pro med Ubuntu Phone?"

#: ../to-be-integrated.rst:172
msgid ""
"There are instructions on gnupg.org about how to use a OpenPGP Card on a "
"UbuntuPhone which should work for the Nitrokey Start, Pro and Storage."
msgstr ""
"Der er en vejledning på gnupg.org om, hvordan man bruger et OpenPGP-kort på "
"en UbuntuPhone, som burde fungere for Nitrokey Start, Pro og Storage."

#: ../to-be-integrated.rst:174
msgid ""
"**Q:** How can I do Email encryption? There are two widely used standards"
" for email encryption. While OpenPGP/GnuPG is popular among individuals, "
"S/MIME/X.509 is mostly used by enterprises. If you are in doubt which one"
" to choose, you should use OpenPGP."
msgstr ""
"Der findes to udbredte standarder for e-mail-kryptering. Mens OpenPGP/GnuPG "
"er populært blandt privatpersoner, bruges S/MIME/x.509 mest af virksomheder. "
"Hvis du er i tvivl om, hvilken af dem du skal vælge, bør du bruge OpenPGP."

#: ../to-be-integrated.rst:177
msgid ""
"instructions for using the OpenPGP standard with the Nitrokey "
"instructions for using S/MIME with the Nitrokey. Note: SMIME certificates"
" can be purchased cheaply from CERTUM and SSLTrust."
msgstr ""
"instruktioner til brug af OpenPGP-standarden med Nitrokey instruktioner til "
"brug af S/MIME med Nitrokey. Bemærk: SMIME-certifikater kan købes billigt "
"hos CERTUM og SSLTrust."

#: ../to-be-integrated.rst:180
msgid ""
"Please note, that it is currently advised to use either OpenPGP or S/MIME"
" encryption, but not both with the Nitrokey."
msgstr ""
"Bemærk venligst, at det i øjeblikket anbefales at bruge enten OpenPGP- eller "
"S/MIME-kryptering, men ikke begge dele med Nitrokey."

#: ../to-be-integrated.rst:182
msgid "To use a Nitrokey Storage with Thunderbird 78+, you can try this tutorial."
msgstr ""
"Hvis du vil bruge et Nitrokey-lager med Thunderbird 78+, kan du prøve denne "
"vejledning."

#: ../to-be-integrated.rst:184
msgid "**Q:** How can I do Hard Disk Encryption?"
msgstr "Kryptering af harddisken"

#: ../to-be-integrated.rst:187
msgid ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (formerly "
"TrueCrypt)"
msgstr ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (tidligere "
"TrueCrypt)"

#: ../to-be-integrated.rst:190
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey "
"Storage or Pro:"
msgstr ""
"VeraCrypt er en gratis og open source-disk-krypteringssoftware til Windows, "
"macOS og GNU/Linux. Det er efterfølgeren til TrueCrypt og kan derfor "
"anbefales, selv om de følgende instruktioner også bør gælde for TrueCrypt. "
"Følg disse trin for at bruge programmet med Nitrokey Storage eller Pro:"

#: ../to-be-integrated.rst:192 ../to-be-integrated.rst:704
msgid ""
"Install OpenSC Choose the library in VeraCrypt under "
"Settings>Preferences>Security Token (location depends on system, e.g. "
"/usr/lib/opensc). Generate a 64 Byte key file via Tools>Keyfile "
"Generator. Now you should be able to import the generated key file via "
"Tools>Manage Security Token Keyfiles. You should choose the first Slot "
"([0] User PIN). The keyfile is then stored on the Nitrokey as 'Private "
"Data Object 1' (PrivDO1). After this you should wipe the original keyfile"
" on your Computer securely! Now you can use VeraCrypt with the Nitrokey: "
"Create a container, choose the keyfile on the device as an alternative to"
" a password."
msgstr ""
"Installer OpenSC Vælg biblioteket i VeraCrypt under "
"Settings>Preferences>Security Token (placeringen afhænger af systemet, "
"f.eks. /usr/lib/opensc). Generer en 64 Byte nøglefil via Tools>Keyfile "
"Generator. Nu bør du kunne importere den genererede nøglefil via "
"Tools>Manage Security Token Keyfiles. Du skal vælge den første Slot ([0] "
"User PIN). Nøglefilen gemmes derefter på Nitrokey som 'Private Data Object "
"1' (PrivDO1). Herefter skal du slette den originale nøglefil på din computer "
"sikkert! Nu kan du bruge VeraCrypt med Nitrokey: Opret en beholder, vælg "
"nøglefilen på enheden som et alternativ til en adgangskode."

#: ../to-be-integrated.rst:199
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the PIN."
msgstr ""
"Bemærk venligst, at VeraCrypt ikke udnytter den fulde sikkerhed, som "
"Nitrokey (og smart cards generelt) tilbyder. I stedet lagrer den en nøglefil "
"på Nitrokey, som teoretisk set kan blive stjålet af en computervirus, efter "
"at brugeren har indtastet PIN-koden."

#: ../to-be-integrated.rst:201
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation."
msgstr ""
"Bemærk: `Aloaha Crypt <http://www.aloaha.com/aloaha-crypt-disk/>`_ er "
"baseret på TrueCrypt/VeraCrypt, men uden de beskrevne "
"sikkerhedsbegrænsninger."

#: ../to-be-integrated.rst:204
msgid ""
"Hard Disk Encryption on Linux, Based on LUKS/dm-crypt Here are excellent "
"instructions how to use Nitrokey to encrypt your hard disk under Linux "
"with LUKS/dm-crypt. Other instruction."
msgstr ""
"Kryptering af harddisken på Linux, baseret på LUKS/dm-crypt Her er en "
"glimrende vejledning i hvordan du bruger Nitrokey til at kryptere din "
"harddisk under Linux med LUKS/dm-crypt. Anden instruktion."

#: ../to-be-integrated.rst:207
msgid ""
"Purism has created a simple script to add the Nitrokey/LibremKey as a way"
" to unlock LUKS partitions (not tested by Nitrokey yet)."
msgstr ""
"Purism har oprettet et `enkelt script <https://docs.puri.sm/PureBoot/"
"LibremKeyLUKS.html>`_ for at tilføje Nitrokey/LibremKey som en måde at låse "
"LUKS-partitioner op på (ikke testet af Nitrokey endnu)."

#: ../to-be-integrated.rst:209
msgid ""
"This project aims to ease the use of LUKS with the Nitrokey Pro or "
"Storage based on the Password Safe (not tested by Nitrokey yet). A "
"description on how to use it on Gentoo can be found here."
msgstr ""
"`Dette projekt <https://github.com/artosan/nitroluks/>`_ har til formål at "
"lette brugen af LUKS med Nitrokey Pro eller opbevaring baseret på Password "
"Safe (endnu ikke testet af Nitrokey). En beskrivelse af hvordan man bruger "
"det på Gentoo kan findes `her <https://amedeos.github.io/gentoo/nitrokey/"
"2019/01/21/gentoo-nitrokey-luks.html>`_."

#: ../to-be-integrated.rst:211
msgid ""
"For Arch Linux, see initramfs-scencrypt. Storage Encryption on Linux, "
"Based on EncFS"
msgstr ""
"For Arch Linux, se initramfs-scencrypt. Lagringskryptering på Linux, baseret "
"på EncFS"

#: ../to-be-integrated.rst:214
msgid ""
"Prerequisite: Please ensure that you installed the device driver, changed"
" the default PINs and generated or imported keys with GnuPG."
msgstr ""
"Sørg for, at du `installerede enhedsdriveren, ændrede standard-PIN-koderne "
"og genererede eller importerede nøgler med GnuPG <https://www.nitrokey.com/"
"start>`_."

#: ../to-be-integrated.rst:216
msgid ""
"An easy to use encrypted file system is EncFS, which is based on FUSE. "
"You may follow these steps to use it with very long passwords and "
"Nitrokey:"
msgstr ""
"`EncFS <http://www.arg0.net/encfs>`_ er en let anvendelig enhed til "
"krypterede filsystemer, og den er baseret på `FUSE <http://de.wikipedia.org/"
"wiki/Filesystem_in_Userspace>`_. Du kan følge disse trin for at bruge det "
"med meget lange adgangskoder og Nitrokey Pro 2:"

#: ../to-be-integrated.rst:218
msgid "Initialization"
msgstr "Initialisering"

#: ../to-be-integrated.rst:220
msgid ""
"# Create a key file with random data: $ dd bs=64 count=1 if=/dev/urandom "
"of=keyfile"
msgstr ""
"# Opret en nøglefil med tilfældige data: $ dd bs=64 count=1 if=/dev/urandom "
"of=keyfile"

#: ../to-be-integrated.rst:223
msgid ""
"# Encrypt the key file and use the User-ID of your Nitrokey $ gpg "
"--encrypt keyfile"
msgstr "Krypter nøglefilen og brug din Nitrokey-bruger-ID"

#: ../to-be-integrated.rst:226
msgid ""
"# Remove the key file in clear text: $ rm keyfile # you may want to use "
"'wipe' or 'shred' to securely delete the keyfile"
msgstr ""
"# Fjern nøglefilen i klartekst: $ rm keyfile # du kan bruge 'wipe' eller "
"'shred' til at slette nøglefilen på en sikker måde"

#: ../to-be-integrated.rst:229
msgid "# Create mount point: $ mkdir ~/.cryptdir ~/cryptdir"
msgstr "Opret monteringspunkt:"

#: ../to-be-integrated.rst:232
msgid ""
"# Create the actual encryption folder $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"
msgstr "Opret den egentlige krypteringsmappe"

#: ../to-be-integrated.rst:235
msgid ""
"# There may appears an error message about missing permission of "
"fusermount # This message can be ignored"
msgstr ""
"# Der kan vises en fejlmeddelelse om manglende tilladelse til fusermount # "
"Denne meddelelse kan ignoreres"

#: ../to-be-integrated.rst:238
msgid "# Unmount the new file system: $ fusermount -u ~/cryptdir"
msgstr "Afmonter det nye filsystem:"

#: ../to-be-integrated.rst:241
msgid "Usage"
msgstr "Anvendelse"

#: ../to-be-integrated.rst:243
msgid ""
"# Mount encrypted file system and enter PIN of Nitrokey: $ gpg -d "
"keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"
msgstr "Monter det krypterede filsystem, og indtast PIN-koden til Nitrokey:"

#: ../to-be-integrated.rst:246
msgid "# After usage, unmount the file system: $ fusermount -u ~/cryptdir"
msgstr "Efter brug skal du afmontere filsystemet:"

#: ../to-be-integrated.rst:250
msgid "Storage Encryption on Linux, Based on ECryptFS"
msgstr "Lagringskryptering på Linux med ECryptFS"

#: ../to-be-integrated.rst:252
msgid ""
"eCryptfs is a file based transparent encryption file system for Linux "
"which can be used with Nitrokey through a PKCS#11 driver. See these "
"instructions. Alternatively, try ESOSI or follow these steps using OpenSC"
" and OpenVPN:"
msgstr ""
"eCryptfs er et filbaseret gennemsigtigt krypteringssystem til Linux, som kan "
"bruges sammen med Nitrokey via en PKCS#11-driver. Se disse instruktioner. "
"Alternativt kan du prøve ESOSI eller følge disse trin ved hjælp af OpenSC og "
"OpenVPN:"

#: ../to-be-integrated.rst:254
msgid "Warning: This will delete existing keys on your Nitrokey!"
msgstr "Advarsel: Dette vil slette eksisterende nøgler på din Nitrokey!"

#: ../to-be-integrated.rst:256
msgid ""
"# Import the certificate and key to the Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"
msgstr ""
"# Importer certifikatet og nøglen til Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 --"
"format pkcs12 --auth-id 3 --verify-pin"

#: ../to-be-integrated.rst:259
msgid "# Create the file ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"
msgstr "Opret filen ~/.ecryptfsrc.pkcs11:"

#: ../to-be-integrated.rst:262
msgid ""
"# Enter this content: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids path to opensc-pkcs11 module "
"Certificate"
msgstr ""
"# Indtast dette indhold: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids sti til opensc-pkcs11-modulet "
"Certifikat"

#: ../to-be-integrated.rst:266
msgid ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Serial: 066E04 Serialized id: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"
msgstr ""
"DN: /description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@"
"example.com Serial: 066E04 Serialiseret id: ZeitControl/PKCS\\x2315"
"\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"

#: ../to-be-integrated.rst:270
msgid "# Copy the serialized id for later usage: $ ecryptfs-manager"
msgstr "Kopier det serialiserede id til senere brug:"

#: ../to-be-integrated.rst:273
msgid ""
"# This will show list option. Choose option \"Add public key to keyring\""
" # Choose pkcs11-helper # Enter the serialized ID of step 3 to PKCS#11 "
"ID."
msgstr ""
"# Dette vil vise listens indstilling. Vælg indstilling \"Add public key to "
"keyring\"; # Vælg pkcs11-helper # Indtast det serialiserede ID fra trin 3 "
"til PKCS#11 ID."

#: ../to-be-integrated.rst:281
msgid "**Q:** How can I sign and encrypt Files and PDFs? GnuPG"
msgstr "**Q:** Hvordan kan jeg signere og kryptere filer og PDF-filer? GnuPG"

#: ../to-be-integrated.rst:284
msgid ""
"Use the gpgsm tool to sign, verify, encrypt and decrypt files. Use a "
"signature key on a Nitrokey to sign documents using Acrobat Reader, Open "
"Office / Libre Office or any other PDF reader supporting electronic "
"signatures."
msgstr ""
"Brug gpgsm-værktøjet til at signere, verificere, kryptere og dekryptere "
"filer. Brug en signaturnøgle på en Nitrokey til at underskrive dokumenter "
"ved hjælp af Acrobat Reader, Open Office / Libre Office eller enhver anden "
"PDF-læser, der understøtter elektroniske signaturer."

#: ../to-be-integrated.rst:287
msgid "GPA - GNU Privacy Assistant"
msgstr "Opsætning med Gnu Privacy Assistant (GPA)"

#: ../to-be-integrated.rst:289
msgid ""
"The Gnu Privacy Assistant (GPA) recognizes Nitrokey out-of-the-box, has "
"various features to manage keys and cards. It also allows file operations"
" such as file encryption, decryption, signing."
msgstr ""
"Gnu Privacy Assistant (GPA) kan genkende Nitrokey uden videre og har "
"forskellige funktioner til at administrere nøgler og kort. Den giver også "
"mulighed for filoperationer som f.eks. filkryptering, dekryptering og "
"signering."

#: ../to-be-integrated.rst:292
msgid "SOPS - Secrect OPerationS"
msgstr "SOPS - Secrect OPerationS"

#: ../to-be-integrated.rst:294
msgid ""
"SOPS is an editor of encrypted files that supports YAML, JSON and BINARY "
"formats and encrypts with AWS KMS and PGP. You can find it on github."
msgstr ""
"SOPS er en editor af krypterede filer, der understøtter YAML-, JSON- og "
"BINARY-formater og krypterer med AWS KMS og PGP. Du kan finde det på github."

#: ../to-be-integrated.rst:297
msgid "Aloaha"
msgstr "Aloaha"

#: ../to-be-integrated.rst:299
msgid ""
"Aloaha provides several applications to encrypt and sign PDFs. All of "
"them, which allow smart card integration, work with Nitrokey. You can for"
" example import key and certificate by using OpenSC or any other "
"appropriate variant. After this Windows recognize your certificate and "
"you can sign the document as it is shown in the screencast below."
msgstr ""
"Aloaha tilbyder flere programmer til at kryptere og signere PDF-filer. Alle "
"de programmer, der tillader integration af smartkort, fungerer sammen med "
"Nitrokey. Du kan f.eks. importere nøgle og certifikat ved at bruge OpenSC "
"eller en anden passende variant. Herefter genkender Windows dit certifikat, "
"og du kan underskrive dokumentet, som det vises i screencastet nedenfor."

#: ../to-be-integrated.rst:301
msgid "GpgEx for Windows Explorer"
msgstr "GpgEx til Windows Stifinder"

#: ../to-be-integrated.rst:303
msgid ""
"GpgEx integrates smoothly into Windows Explorer to allow encryption and "
"decryption of files. Install it as part of the GPG4Win package."
msgstr ""
"GpgEx integreres problemfrit i Windows Stifinder for at muliggøre kryptering "
"og dekryptering af filer. Installer den som en del af GPG4Win-pakken."

#: ../to-be-integrated.rst:306
msgid ""
"Before you start to use any of these applications with your Nitrokey, "
"please ensure that you installed the device driver and initialized the "
"device (e.g. generated keys)."
msgstr ""
"Før du begynder at bruge et af disse programmer med din Nitrokey, skal du "
"sikre dig, at du har installeret enhedsdriveren og initialiseret enheden ("
"f.eks. genereret nøgler)."

#: ../to-be-integrated.rst:308
msgid ""
"Certificate-based login with TLS and web browser is a very secure "
"authentication method but it is only used rarely. If you are unsure what "
"this means, this approach is most likely not relevant for you."
msgstr ""
"Certifikatbaseret login med TLS og webbrowser er en meget sikker "
"godkendelsesmetode, men den bruges kun sjældent. Hvis du er usikker på, hvad "
"dette betyder, er denne metode sandsynligvis ikke relevant for dig."

#: ../to-be-integrated.rst:310
msgid ""
"This page refers to websites and applications which support certificate "
"authentication, so that users don't need to enter username and password "
"when login. For instance WebID is a great protocol which makes use of it."
" Certificate authentication can be used easily with the Nitrokey and also"
" with any other certificate storages. Mozilla Firefox"
msgstr ""
"Denne side henviser til websteder og applikationer, der understøtter "
"certifikatgodkendelse, så brugerne ikke behøver at indtaste brugernavn og "
"adgangskode, når de logger ind. WebID er f.eks. en god protokol, som gør "
"brug af dette. Certifikatgodkendelse kan nemt bruges med Nitrokey og også "
"med alle andre certifikatlagre. Mozilla Firefox"

#: ../to-be-integrated.rst:313
msgid "You need to install the PKCS#11 driver:"
msgstr "Du skal installere PKCS#11-driveren:"

#: ../to-be-integrated.rst:315
msgid ""
"Download the PKCS11 driver and store it on your local hard disk or "
"install OpenSC. Open the Preferences in Firefox and go to  Privacy & "
"Security -> Security (just a headline) -> Button 'Security Devices...' "
"Press the button Load. Enter \"Nitrokey\" as the Module Name and press "
"the Browse button to select the previously downloaded PKCS11 driver file."
" Confirm and close all dialogs."
msgstr ""
"Download PKCS11-driveren, og gem den på din lokale harddisk, eller installer "
"OpenSC. Åbn indstillingerne i Firefox, og gå til Privacy & Security -&> "
"Security (bare en overskrift) -> Button 'Security Devices...' Tryk på "
"knappen Load. Indtast \"Nitrokey\" som modulnavn, og tryk på knappen "
"Gennemse for at vælge den tidligere downloadede PKCS11-driverfil. Bekræft og "
"luk alle dialogbokse."

#: ../to-be-integrated.rst:319
msgid ""
"Now you are ready to access websites which provide certificate "
"authentication. Internet Explorer"
msgstr ""
"Nu er du klar til at få adgang til websteder, der tilbyder "
"certifikatgodkendelse. Internet Explorer"

#: ../to-be-integrated.rst:322
msgid ""
"Install this Mini Driver for Windows. Now you are ready to access "
"websites which provide certificate authentication. Google Chrome"
msgstr ""
"Installer denne Mini Driver til Windows. Nu er du klar til at få adgang til "
"websteder, der tilbyder certifikatgodkendelse. Google Chrome"

#: ../to-be-integrated.rst:325
msgid ""
"Under Windows, install this Mini Driver. Under Linux, follow these "
"instructions. Now you are ready to access websites which provide "
"certificate authentication. WebID"
msgstr ""
"Under Windows skal du installere denne minidriver. Under Linux skal du følge "
"disse instruktioner. Nu er du klar til at få adgang til websteder, der "
"tilbyder certifikatgodkendelse. WebID"

#: ../to-be-integrated.rst:328
msgid ""
"WebID is a technology to enable secure and federated social websites. "
"Here is a video (WebM, Ogg video, H.264) which demonstrates how to use "
"Nitrokey to create a WebID profile and subsequently to use it in an "
"Internet cafe in Singapore. Nitrokey protects against computer viruses "
"which might otherwise steel the username and password. Websites Web Site"
"        Category CAcert  community-based Certificate Authority "
"PrivaSphere     Secure messaging HM Revenue & Customs    UK's tax "
"administration Software Application     Category Roundcube (plugin)      "
"Webmail Drupal (WebID, Certificate login)       Content management system"
" Media Wiki (plugin)     Wiki Joomla!         Content management system "
"Apache + mod_ssl        Web server OpenSSH         SSH (remote secure "
"shell) client and server Wordpress (plugin)      Blog and CMS Tivoli  "
"System management framework Globalscape EFT         managed file transfer"
" (MFT) Oracle Identity Manager         I&AM Fuse Source     Middleware "
"Liferay         Blog FusionForge     web-based project-management and "
"collaboration software"
msgstr ""
"WebID er en teknologi, der muliggør sikre og forbundede sociale websteder. "
"Her er en video (WebM, Ogg-video, H.264), der viser, hvordan man bruger "
"Nitrokey til at oprette en WebID-profil og derefter bruger den på en "
"internetcafé i Singapore. Nitrokey beskytter mod computervirus, som ellers "
"kan stjæle brugernavn og adgangskode. Websteder Webstedkategori CAcert "
"fællesskabsbaseret certifikatmyndighed PrivaSphere Sikker messaging HM "
"Revenue & Customs UK's skatteadministration Software Applikationskategori "
"Roundcube (plugin) Webmail Drupal (WebID, certifikatlogin) "
"Indholdsstyringssystem Media Wiki (plugin) Wiki Joomla!         "
"Indholdsstyringssystem Apache + mod_ssl Webserver OpenSSH SSH (remote secure "
"shell) klient og server Wordpress (plugin) Blog og CMS Tivoli System "
"management framework Globalscape EFT managed file transfer (MFT) Oracle "
"Identity Manager I&AM Fuse Source Middleware Liferay Blog FusionForge "
"webbaseret projektledelses- og samarbejdssoftware"

#: ../to-be-integrated.rst:350
msgid ""
"This website is a good read about strong authentication mechanisms, why "
"client certificate authentication isn't popular and better alternatives "
"at the horizon."
msgstr ""
"Dette websted er en god læsning om stærke autentifikationsmekanismer, "
"hvorfor klientcertifikatautentifikation ikke er populær og hvorfor der er "
"bedre alternativer på vej."

#: ../to-be-integrated.rst:352
msgid "**Q:** How can I use Enterprise Authentication?"
msgstr "**Q:** Hvordan kan jeg bruge Enterprise Authentication?"

#: ../to-be-integrated.rst:354
msgid ""
"LinOTP privacyIDEA RCDevs OpenOTP Usage of Nitrokey HSM as a secure key "
"store for the Forgerock OpenDJ server and Forgerock Identity Gateway"
msgstr ""
"LinOTP privacyIDEA RCDevs OpenOTP Anvendelse af Nitrokey HSM som et sikkert "
"nøglelager for Forgerock OpenDJ-serveren og Forgerock Identity Gateway"

#: ../to-be-integrated.rst:360
msgid ""
"**Q:** How can I do SSH for Server Administration on Windows? The "
"Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"**Q:** Hvordan kan jeg bruge SSH til serveradministration på Windows? "
"Nitrokey skal allerede have PGP-nøgler installeret, og den lokale GnuPG-"
"nøglering skal være bekendt med nøglerne, dvs. GPG4Win skal være installeret "
"på systemet (kun kerneprogrammet GnuPG er nødvendigt). Desuden bør du "
"installere PuTTY. Forberedelse på klienten"

#: ../to-be-integrated.rst:364 ../to-be-integrated.rst:736
msgid ""
"There are two steps needed to make PuTTY work. At first we need to enable"
" PuTTY support of GnuPG. To achieve this we use the following command:"
msgstr ""
"Der er to trin, der er nødvendige for at få PuTTY til at fungere. Først skal "
"vi aktivere PuTTY-understøttelse af GnuPG. For at opnå dette bruger vi "
"følgende kommando:"

#: ../to-be-integrated.rst:366 ../to-be-integrated.rst:738
msgid "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"
msgstr "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"

#: ../to-be-integrated.rst:368 ../to-be-integrated.rst:740
msgid ""
"Now we want to make sure, that the gpg-agent is starting automatically in"
" the background (you can start it manually with the command below, if you"
" prefer). We create a shortcut to gpg-connect-agent.exe. Press and hold "
"the Windows-key and press 'R'. Type in \"shell:startup\" in the opening "
"textfield (see picture below). The Windows-Explorer opens and you right-"
"click on an empty space and choose \"New\" -> \"Shortcut\". Now you "
"should insert the actual command and proceed:"
msgstr ""
"Nu vil vi sikre os, at gpg-agenten starter automatisk i baggrunden (du kan "
"starte den manuelt med nedenstående kommando, hvis du foretrækker det). Vi "
"opretter en genvej til gpg-connect-agent.exe. Tryk og hold Windows-tasten "
"nede og tryk 'R'. Skriv \"shell:startup\" i det åbne tekstfelt (se billedet "
"nedenfor). Windows-Explorer åbnes, og du højreklikker på et tomt felt og "
"vælger \"New\" -&&> \"Shortcut\". Nu skal du indsætte den egentlige kommando "
"og fortsætte:"

#: ../to-be-integrated.rst:370 ../to-be-integrated.rst:742
msgid "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"
msgstr "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"

#: ../to-be-integrated.rst:374 ../to-be-integrated.rst:746
msgid ""
"Reboot your system to make sure the shortcut works. If everything is "
"alright you now can use PuTTY as usual and PuTTY will make use of the "
"Nitrokey automatically. Preparation for the server"
msgstr ""
"Genstart systemet for at sikre dig, at genvejen fungerer. Hvis alt er i "
"orden, kan du nu bruge PuTTY som sædvanlig, og PuTTY vil automatisk bruge "
"Nitrokey. Forberedelse til serveren"

#: ../to-be-integrated.rst:377 ../to-be-integrated.rst:749
msgid "You can generate an authorized_keys file by running"
msgstr "Du kan generere en authorized_keys-fil ved at køre"

#: ../to-be-integrated.rst:379 ../to-be-integrated.rst:751
msgid ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"
msgstr ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID >> "
"authorized_keys"

#: ../to-be-integrated.rst:381 ../to-be-integrated.rst:753
msgid ""
"where 'keyID' is either the fingerprint of your key or just the E-Mail "
"address bind to your key. The Nitrokey must already be known to the local"
" GnuPG keyring. You can now append that file to a remote server's "
"authorized_keys and when you ssh to the server you'll be asked for a pin "
"rather than a passphrase."
msgstr ""
"hvor 'keyID' enten er fingeraftrykket af din nøgle eller blot den e-mail-"
"adresse, der er bundet til din nøgle. Nitrokey skal allerede være kendt af "
"den lokale GnuPG-nøglering. Du kan nu føje denne fil til en fjernserver's "
"authorized_keys og når du ssh'er til serveren bliver du'spurgt om en pin i "
"stedet for en passphrase."

#: ../to-be-integrated.rst:388
msgid "**Q:** How can I do SSH for Server Administration on Linux?"
msgstr "**Q:** Hvordan kan jeg bruge SSH til serveradministration på Linux?"

#: ../to-be-integrated.rst:390 ../to-be-integrated.rst:757
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys. Preparation on client"
msgstr ""
"Nitrokey bør allerede have PGP-nøgler installeret, og den lokale GnuPG-"
"nøglering bør kende nøglerne. Forberedelse på klienten"

#: ../to-be-integrated.rst:393 ../to-be-integrated.rst:760
msgid ""
"Make sure ~/.gnupg/gpg.conf contains 'use-agent' Add ssh support to "
"gnupg-agent by adding 'enable-ssh-support' to ~/.gnupg/gpg-agent.conf If "
"the file does not exist yet, you can just create it. Add the following "
"code somewhere into your ~/.bashrc (for fish shell, look here)"
msgstr ""
"Sørg for at ~/.gnupg/gpg.conf indeholder 'use-agent' Tilføj ssh-"
"understøttelse til gnupg-agent ved at tilføje 'enable-ssh-support' til ~/."
"gnupg/gpg-agent.conf Hvis filen ikke eksisterer endnu, kan du bare oprette "
"den. Tilføj følgende kode et sted i din ~/.bashrc (for fish shell, se her)"

#: ../to-be-integrated.rst:398 ../to-be-integrated.rst:765
msgid ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"
msgstr ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"

#: ../to-be-integrated.rst:403 ../to-be-integrated.rst:770
msgid ""
"Simply restart your system or try pkill gpg-agent and open a new "
"commandline to make sure everything is set In case of problems, please "
"try gpg2 --card-status on first usage to make sure the gpg-agent gets "
"started"
msgstr ""
"Du skal blot genstarte dit system eller prøve pkill gpg-agent og åbne en ny "
"kommandolinje for at sikre dig, at alt er indstillet I tilfælde af problemer "
"skal du prøve gpg2 --card-status ved første brug for at sikre dig, at gpg-"
"agenten bliver startet"

#: ../to-be-integrated.rst:406 ../to-be-integrated.rst:773
msgid "Preparation for the server"
msgstr "Forberedelse til serveren"

#: ../to-be-integrated.rst:408 ../to-be-integrated.rst:775
msgid "You can generate an authorized_keys file by running either"
msgstr "Du kan generere en authorized_keys-fil ved at køre enten"

#: ../to-be-integrated.rst:410 ../to-be-integrated.rst:777
msgid ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) or "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(for newer GnuPG "
"versions)"
msgstr ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) eller "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(for nyere GnuPG-versioner)"

#: ../to-be-integrated.rst:413 ../to-be-integrated.rst:780
msgid "where"
msgstr "hvor"

#: ../to-be-integrated.rst:415 ../to-be-integrated.rst:782
msgid "keyID"
msgstr "keyID"

#: ../to-be-integrated.rst:417 ../to-be-integrated.rst:784
msgid ""
"is the subkey id being used for authentication on your Nitrokey. The "
"Nitrokey must already be known to the local GnuPG keyring. You can now "
"append that file to a remote server's authorized_keys and when you ssh to"
" the server you'll be asked for a pin rather than a passphrase."
msgstr ""
"er det undernøgle-id, der bruges til godkendelse på din Nitrokey. Nitrokey "
"skal allerede være kendt af den lokale GnuPG-nøglering. Du kan nu føje denne "
"fil til en fjernserver's authorized_keys og når du ssh'er til serveren, "
"bliver du bedt om en pin i stedet for en passphrase."

#: ../to-be-integrated.rst:420 ../to-be-integrated.rst:787
msgid "Troubleshooting"
msgstr "Fejlfinding"

#: ../to-be-integrated.rst:422 ../to-be-integrated.rst:789
msgid "If you are still asked for a password please make sure that"
msgstr ""
"Hvis du stadig bliver bedt om at angive en adgangskode, skal du sikre dig, at"

#: ../to-be-integrated.rst:424 ../to-be-integrated.rst:791
msgid "echo $SSH_AUTH_SOCK"
msgstr "echo $SSH_AUTH_SOCK"

#: ../to-be-integrated.rst:426 ../to-be-integrated.rst:793
msgid ""
"returns something reasonable like '/run/user/1000/gnupg/S.gpg-agent.ssh' "
"or '/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were "
"some changes in GnuPG in the past so that the actual content can differ "
"from system and GnuPG version. On some systems there may are even "
"multiple folders in this variable saved. You have to adapt the above "
"given code in .bashrc so that the variable SSH_AUTH_SOCK is correct. In "
"doubt look for 'SSH_AUTH_SOCK' in"
msgstr ""
"returnerer noget fornuftigt som '/run/user/1000/gnupg/S.gpg-agent.ssh' eller "
"'/home/username/.gnupg/.S.gpg-agent.ssh'. Desværre er der sket nogle "
"ændringer i GnuPG i fortiden, så det faktiske indhold kan variere fra system "
"og GnuPG-version til system. På nogle systemer kan der endda være flere "
"mapper i denne variabel gemt. Du er nødt til at tilpasse den ovenfor angivne "
"kode i .bashrc, så variablen SSH_AUTH_SOCK er korrekt. I tvivlstilfælde skal "
"du kigge efter 'SSH_AUTH_SOCK' i"

#: ../to-be-integrated.rst:428 ../to-be-integrated.rst:795
msgid "man gpg-agent"
msgstr "man gpg-agent"

#: ../to-be-integrated.rst:430 ../to-be-integrated.rst:797
msgid "to find the actual code for your version/system."
msgstr "for at finde den aktuelle kode for din version/dit system."

#: ../to-be-integrated.rst:432 ../to-be-integrated.rst:799
msgid ""
"You may check if you have a 'pinentry' program installed via your package"
" manager. You may need to set it in the gpg-agent.conf as well. You may "
"need to point gpg-agent to the correct TTY."
msgstr ""
"Du kan kontrollere, om du har et 'pinentry' program installeret via din "
"pakkehåndtering. Du skal muligvis også indstille det i gpg-agent.conf. Du "
"skal muligvis pege gpg-agent til den korrekte TTY."

#: ../to-be-integrated.rst:446
msgid "**Q:** How can I use the Nitrokey for VPN access?"
msgstr "**Q:** Hvad kan jeg bruge Nitrokey til?"

#: ../to-be-integrated.rst:449 ../to-be-integrated.rst:820
msgid "For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"
msgstr "Nitrokey Pro 2, Nitrokey Storage 2 eller Nitrokey HSM 2"

#: ../to-be-integrated.rst:452 ../to-be-integrated.rst:823
msgid "Generate a key on Nitrokey via pkcs11-tool."
msgstr "Generer en nøgle på Nitrokey via pkcs11-tool."

#: ../to-be-integrated.rst:454 ../to-be-integrated.rst:825
msgid "Generate a certificate signing request via openssl + pkcs11 module:"
msgstr ""
"Generer en anmodning om signering af et certifikat via openssl + "
"pkcs11-modulet:"

#: ../to-be-integrated.rst:456 ../to-be-integrated.rst:827
msgid ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:458 ../to-be-integrated.rst:829
msgid "Sign the certificate with our certificate authority"
msgstr "Den certificeringsmyndighed"

#: ../to-be-integrated.rst:460 ../to-be-integrated.rst:831
msgid ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out <FILE.CRT> "
"-config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:462 ../to-be-integrated.rst:509
#: ../to-be-integrated.rst:833 ../to-be-integrated.rst:880
msgid "Import  the certificate into the Nitrokey via pkcs11-tool"
msgstr "Importer certifikatet og nøglen til Nitrokey"

#: ../to-be-integrated.rst:464 ../to-be-integrated.rst:835
msgid "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"
msgstr "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"

#: ../to-be-integrated.rst:466 ../to-be-integrated.rst:837
msgid "Read the certificate's ID required for openvpn configuration:"
msgstr "Læs certifikatets ID, der kræves til openvpn-konfiguration:"

#: ../to-be-integrated.rst:468 ../to-be-integrated.rst:839
msgid "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"
msgstr "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"

#: ../to-be-integrated.rst:470 ../to-be-integrated.rst:841
msgid ""
"Modify your openvpn configuration. Add the certificate ID which you "
"gathered in the previous step: E.g."
msgstr ""
"Ændre din openvpn-konfiguration. Tilføj det certifikat-id, som du indsamlede "
"i det foregående trin: F.eks."

#: ../to-be-integrated.rst:472 ../to-be-integrated.rst:843
msgid ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"
msgstr ""
"$ pkcs11-id 'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/"
"User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"

#: ../to-be-integrated.rst:474 ../to-be-integrated.rst:845
msgid "Add the PKCS#11 driver to the configuration too, e.g.:"
msgstr "Tilføj også PKCS#11-driveren til konfigurationen, f.eks:"

#: ../to-be-integrated.rst:476 ../to-be-integrated.rst:847
msgid "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"
msgstr "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"

#: ../to-be-integrated.rst:478 ../to-be-integrated.rst:849
msgid "See this link for further information."
msgstr "Se dette link for yderligere oplysninger."

#: ../to-be-integrated.rst:482 ../to-be-integrated.rst:853
msgid ""
"Now all configurations are done. When executing OpenVPN client, "
"Nitrokey's PIN needs to be entered. Unfortunately OpenVPN doesn't prompt "
"to enter the PIN and it has to be entered in the following way:"
msgstr ""
"Nu er alle konfigurationer udført. Når du udfører OpenVPN-klienten, skal "
"Nitrokey's PIN-kode indtastes. Desværre beder OpenVPN ikke om at indtaste "
"PIN-koden, og den skal indtastes på følgende måde:"

#: ../to-be-integrated.rst:484 ../to-be-integrated.rst:855
msgid "$ telnet 8888 password 'User PIN (OpenPGP card) token' <PIN>"
msgstr "$ telnet 8888 password 'Bruger-PIN-kode (OpenPGP-kort) token' <PIN>"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid ""
"Alternatively you could recompile OpenVPN client with systemd support "
"disabled and it will prompt you for the PIN as expected. Alternatively to"
" the OpenVPN client you could use the Viscosity client which provides a "
"better user experience especially for entering the PIN."
msgstr ""
"Alternativt kan du genkompilere OpenVPN-klienten med systemd-understøttelse "
"deaktiveret, og den vil bede dig om PIN-koden som forventet. Alternativt til "
"OpenVPN-klienten kan du bruge Viscosity-klienten, som giver en bedre "
"brugeroplevelse, især ved indtastning af PIN-koden."

#: ../to-be-integrated.rst:489 ../to-be-integrated.rst:860
msgid "IPsec"
msgstr "IPsec"

#: ../to-be-integrated.rst:491 ../to-be-integrated.rst:862
msgid "Strong Swan works using the PKCS#11 driver. Basically follow these steps:"
msgstr ""
"Strong Swan fungerer ved hjælp af PKCS#11-driveren. Følg grundlæggende disse "
"trin:"

#: ../to-be-integrated.rst:493 ../to-be-integrated.rst:864
msgid ""
"Generate a key on Nitrokey via pkcs11-tool. In this example it's a 4096 "
"bit RSA key."
msgstr ""
"Generer en nøgle på Nitrokey via pkcs11-tool. I dette eksempel er det en "
"4096 bit RSA-nøgle."

#: ../to-be-integrated.rst:495 ../to-be-integrated.rst:866
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so -l -"
"k --key-type rsa:4096 --id 10 --label 'Staging Access'"

#: ../to-be-integrated.rst:497 ../to-be-integrated.rst:868
msgid "Generate a certificate signing request via openssl + pkcs11 module"
msgstr ""
"Generer en anmodning om signering af certifikat via openssl + pkcs11-modulet"

#: ../to-be-integrated.rst:499 ../to-be-integrated.rst:870
msgid ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"
msgstr ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-gnu/"
"engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> req -"
"engine pkcs11 -sha256 -new -key id_10 -keyform engine -out user@email.com-"
"staging-cert.csr -subj '/C=GB/L=Cambridge/O=Organisation/OU=Staging Access/"
"CN=user@email.com/emailAddress=user@email.com'"

#: ../to-be-integrated.rst:503 ../to-be-integrated.rst:874
msgid "Sign the certificate with your certificate authority"
msgstr "Den certificeringsmyndighed"

#: ../to-be-integrated.rst:505 ../to-be-integrated.rst:876
msgid "Convert the certificate to DER"
msgstr "Konverter certifikatet til DER"

#: ../to-be-integrated.rst:507 ../to-be-integrated.rst:878
msgid ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"
msgstr ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"

#: ../to-be-integrated.rst:511 ../to-be-integrated.rst:882
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so -l -"
"y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging Access'"

#: ../to-be-integrated.rst:513 ../to-be-integrated.rst:884
msgid ""
"Configure Strongswan to load opensc-pkcs11 module then to load the "
"certificate on Nitrokey. Edit /etc/strongswan.d/charon/pkcs11.conf and "
"add the following module:"
msgstr ""
"Konfigurer Strongswan til at indlæse opensc-pkcs11-modulet og derefter til "
"at indlæse certifikatet på Nitrokey. Rediger /etc/strongswan.d/charon/"
"pkcs11.conf og tilføj følgende modul:"

#: ../to-be-integrated.rst:517 ../to-be-integrated.rst:888
msgid "modules {"
msgstr "PAM-moduler"

#: ../to-be-integrated.rst:516 ../to-be-integrated.rst:887
msgid "Nitrokey {"
msgstr "Ofte stillede spørgsmål om Nitrokey 3"

#: ../to-be-integrated.rst:517 ../to-be-integrated.rst:888
msgid "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"
msgstr "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"

#: ../to-be-integrated.rst:518 ../to-be-integrated.rst:519
#: ../to-be-integrated.rst:889 ../to-be-integrated.rst:890
msgid "}"
msgstr "}"

#: ../to-be-integrated.rst:521 ../to-be-integrated.rst:892
msgid ""
"Initiate the VPN connection via IPSec/Strongswan, then prompt for "
"Nitrokey PIN"
msgstr ""
"Initier VPN-forbindelsen via IPSec/Strongswan, og indtast derefter Nitrokey "
"PIN-kode"

#: ../to-be-integrated.rst:523 ../to-be-integrated.rst:894
msgid "8. VPN is now connected Stunnel"
msgstr "8. VPN er nu forbundet Stunnel"

#: ../to-be-integrated.rst:526 ../to-be-integrated.rst:897
msgid ""
"Stunnel works as an SSL encryption wrapper between remote client and "
"local (inetd-startable) or remote server. It can be used to add SSL "
"functionality to commonly used inetd daemons like POP2, POP3, and IMAP "
"servers without any changes in the programs' code."
msgstr ""
"Stunnel fungerer som en SSL-krypteringsindpakning mellem fjernklienten og "
"den lokale (inetd-startbar) eller fjernserver. Den kan bruges til at tilføje "
"SSL-funktionalitet til almindeligt anvendte inetd-dæmoner som POP2-, POP3- "
"og IMAP-servere uden ændringer i programmernes kode."

#: ../to-be-integrated.rst:528 ../to-be-integrated.rst:899
msgid "Stunnel is able to load OpenSC PKCS#11 engine using this configuration:"
msgstr ""
"Stunnel er i stand til at indlæse OpenSC PKCS#11-maskinen ved hjælp af denne "
"konfiguration:"

#: ../to-be-integrated.rst:530 ../to-be-integrated.rst:901
msgid ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"
msgstr ""
"engine=dynamisk engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"

#: ../to-be-integrated.rst:538 ../to-be-integrated.rst:909
msgid "[service] engineNum=1 key=id_45"
msgstr "[service] engineNum=1 key=id_45"

#: ../to-be-integrated.rst:556
msgid "**Q:** How can I do PKI / Certificate Authority (CA)?"
msgstr "**Q:** Hvordan kan jeg lave PKI / Certificate Authority (CA)?"

#: ../to-be-integrated.rst:558
msgid "CA keys are very sensitive and must not be compromised or lost. GnuPG"
msgstr ""
"CA-nøgler er meget følsomme og må ikke blive kompromitteret eller gå tabt. "
"GnuPG"

#: ../to-be-integrated.rst:561
msgid "Instructions OpenSSL"
msgstr "Vejledning"

#: ../to-be-integrated.rst:564
msgid ""
"Install OpenSC'S engine_pkcs11 Run the command \"pkcs11-tool --list-"
"slots\" to list the available slots. Run the command \"openssl> req "
"-engine pkcs11 -new -key slot_X-id_XXXX -keyform engine -x509 -out "
"cert.pem -text\" where X is the appropriate slot number and XXXX is the "
"slot ID, e.g. \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"
msgstr ""
"Installer OpenSC'S engine_pkkcs11 Kør kommandoen \"pkcs11-tool --list-slots\""
" for at få en liste over de tilgængelige slots. Kør kommandoen \"openssl> "
"req -engine pkcs11 -new -key slot_X-id_XXXXXX -keyform engine -x509 -out "
"cert.pem -text\" hvor X er det relevante slot-nummer og XXXX er slot-ID, "
"f.eks. \"... -key slot_5-id_c6f280080fb0ed1ebff048080a01d00a98a1b3b89a ...\" "
"Test"

#: ../to-be-integrated.rst:569
msgid "Other"
msgstr "Andre"

#: ../to-be-integrated.rst:571
msgid ""
"Please see this PDF (p. 30) from heinlein-support.de for summarized "
"instructions in German."
msgstr ""
"Se denne PDF-fil (s. 30) fra heinlein-support.de for en kortfattet "
"vejledning på tysk."

#: ../to-be-integrated.rst:573
msgid ""
"µ-CA-tool is a script based on GnuPG, OpenSC and OpenSSL which helps to "
"perform basic tasks of a CA. It works with Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"µ-CA-tool er et script baseret på GnuPG, OpenSC og OpenSSL, som hjælper med "
"at udføre grundlæggende opgaver for en CA. Det fungerer med Nitrokey Pro og "
"Nitrokey Storage."

#: ../to-be-integrated.rst:581
msgid "**Q:** How can I use the password manager?"
msgstr "**Q:** Hvordan kan jeg bruge adgangskodeadministratoren?"

#: ../to-be-integrated.rst:583
msgid "You have the following options:"
msgstr "Du har følgende muligheder:"

#: ../to-be-integrated.rst:585
msgid ""
"Use Nitrokey's built-in Password Safe to store passwords securely. For "
"this you need the Nitrokey App. Maximum are 16 passwords. Use Pass "
"(simple commandline password manager for Unix systems, mainly for "
"experts). Use KeePass as described below."
msgstr ""
"Brug Nitrokey's indbyggede Password Safe til at gemme adgangskoder sikkert. "
"Til dette skal du bruge Nitrokey-appen. Der er maksimalt 16 adgangskoder. "
"Brug Pass (simpel kommandolinjeadgangskodeadministrator til Unix-systemer, "
"primært for eksperter). Brug KeePass som beskrevet nedenfor."

#: ../to-be-integrated.rst:589
msgid "Protecting KeePass with Nitrokey's One-Time Passwords"
msgstr "Beskyttelse af KeePass med Nitrokey's engangsadgangskoder"

#: ../to-be-integrated.rst:591
msgid ""
"You can also follow this video (It contains a mistake around time 4:22 "
"which is described later below). Keepass Installation"
msgstr ""
"Du kan også følge denne video (den indeholder en fejl omkring kl. 4:22, som "
"beskrives senere nedenfor). Installation af Keepass"

#: ../to-be-integrated.rst:594
msgid ""
"Install Keepass 2.3.5. For Ubuntu: Because the main repository contains "
"the older 2.3.4, you have to use some other source like this private PPA "
"(please run these commands in terminal):"
msgstr ""
"Installer Keepass 2.3.5. Til Ubuntu: Fordi hovedrepositoriet indeholder den "
"ældre 2.3.4, skal du bruge en anden kilde som denne private PPA (kør disse "
"kommandoer i terminalen):"

#: ../to-be-integrated.rst:597
msgid ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"
msgstr ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-get "
"install keepass2"

#: ../to-be-integrated.rst:601
msgid ""
"Install the OtpKeyProv plugin by downloading the archive, unzipping and "
"copying the content to Keypass' Plugin directory. On Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ For Linux, optional: Install "
"mono-complete package if plugin is not detected when running Keepass2 "
"(you can check that in Tools/Plugins):"
msgstr ""
"Installer OtpKeyProv-plugin ved at downloade arkivet, udpakke det og kopiere "
"indholdet til Keypass' Plugin-mappen. På Linux: sudo cp OtpKeyProv.plgx /usr/"
"lib/keepass2/Plugins/ For Linux, valgfrit: Installer mono-complete-pakken, "
"hvis plugin-pakken ikke opdages, når du kører Keepass2 (du kan kontrollere "
"det i Tools/Plugins):"

#: ../to-be-integrated.rst:605
msgid "sudo apt-get install mono-complete"
msgstr "sudo apt-get install mono-complete"

#: ../to-be-integrated.rst:607
msgid "Keepass OTP Configuration Existing Database"
msgstr "Keepass OTP-konfiguration Eksisterende database"

#: ../to-be-integrated.rst:610
msgid ""
"Do a backup of your database and keep it until you are really sure "
"everything works fine! Make sure you really did a backup. If you mess up,"
" your passwords are lost! Open database as usual Select File/Change "
"Master Key..."
msgstr ""
"Lav en sikkerhedskopi af din database, og gem den, indtil du er helt sikker "
"på, at alt fungerer fint! Sørg for, at du virkelig har taget en "
"sikkerhedskopi. Hvis du laver en fejl, er dine adgangskoder tabt! Åbn "
"databasen som sædvanlig Vælg File/Change Master Key..."

#: ../to-be-integrated.rst:615
msgid "New Database"
msgstr "Ny database"

#: ../to-be-integrated.rst:617
msgid "Create new database as usual"
msgstr "Opret en ny database som sædvanlig"

#: ../to-be-integrated.rst:619
msgid "Common"
msgstr "Fælles"

#: ../to-be-integrated.rst:621
msgid ""
"Insert Master Password (optional) Set Key file / provider: to One-Time "
"Passwords (OATH HOTP) Click OK With Nitrokey App: select HOTP slot and "
"generate HOTP secret (it will be copied to clipboard automatically). "
"Note: You may want write down this secret and store it anywhere secure. "
"Otherwise if you lose your Nitrokey or it gets broken your password "
"database is lost as well!!! Paste the secret to Keepass OTP Plugin window"
" Make sure the Counter field and digits count are set the same in both "
"windows. Click OK in Nitrokey App to save the slot. Select secret type: "
"Base32 Set the other settings as you like. Please consult plugin's manual"
" (should be in same downloaded archive). I would recommend to set look-"
"ahead value to non-zero to prevent locking up the database after "
"accidental code request from used HOTP slot. In that case counters on the"
" device and in Keepass would be out of sync and OTP codes will not be the"
" same with expected."
msgstr ""
"Indsæt hovedadgangskode (valgfrit) Indstil nøglefil/udbyder: til One-Time "
"Passwords (OATH HOTP) Klik OK Med Nitrokey App: vælg HOTP slot og generer "
"HOTP hemmelighed (den vil blive kopieret til udklipsholderen automatisk). "
"Bemærk: Du kan skrive denne hemmelighed ned og gemme den et sikkert sted. "
"Hvis du ellers mister din Nitrokey, eller hvis den går i stykker, er din "
"adgangskode-database også tabt!!!! Indsæt hemmeligheden i Keepass OTP Plugin "
"vinduet Sørg for at Counter feltet og cifretallet er indstillet på samme "
"måde i begge vinduer. Klik på OK i Nitrokey App for at gemme slotten. Vælg "
"hemmelighedstype: Base32 Indstil de andre indstillinger som du vil. Se "
"venligst plugin's manual (bør være i samme downloadede arkiv). Jeg vil "
"anbefale at indstille look-ahead-værdien til ikke-nul for at undgå at låse "
"databasen efter en utilsigtet kodeanmodning fra en brugt HOTP-slot. I så "
"fald vil tællere på enheden og i Keepass være ude af synkronisering, og OTP-"
"koderne vil ikke være de samme som forventet."

#: ../to-be-integrated.rst:630
msgid "Unlocking Database"
msgstr "Oplåsning af database"

#: ../to-be-integrated.rst:632
msgid ""
"Open database Insert Master Password (if set) Key file / provider: to "
"One-Time Passwords (OATH HOTP) Press OK Insert HOTP codes by repeatedly "
"choosing proper HOTP slot from the Nitrokey App and pasting the clipboard"
" content to proper field (the order of the codes is important). Press OK"
msgstr ""
"Åbn databasen Indsæt hovedadgangskode (hvis indstillet) Nøglefil/udbyder: "
"til One-Time Passwords (OATH HOTP) Tryk på OK Indsæt HOTP-koder ved gentagne "
"gange at vælge den rette HOTP-plads fra Nitrokey-appen og indsætte indholdet "
"fra udklipsholderen i det rette felt (rækkefølgen af koderne er vigtig). "
"Tryk på OK"

#: ../to-be-integrated.rst:639
msgid "Issues"
msgstr "Spørgsmål"

#: ../to-be-integrated.rst:641
msgid ""
"Due to nature of HOTP solution it is possible to get counters "
"desynchronized (by selecting wrong OTP slot during day-to-day use). Using"
" look-ahead plugin's setting should prevent that (value 10 or so should "
"suffice - depends on desired security requirements - this would allow to "
"10 accidental requests). TOTP is not having that problem. Setting the OTP"
" protection could be error-prone. There is no secret validation on "
"OtpKeyProv side. In the test movie at 4:22 I have managed to set the "
"Base32 coded secret as Hex (which was not a proper hex value) and it has "
"not complained about it. There is no information what happened to "
"database and how it is now configured. I have not noticed until I have "
"watched the movie."
msgstr ""
"På grund af HOTP-løsningens karakter er det muligt at få tællere "
"desynkroniseret (ved at vælge forkert OTP-slot under daglig brug). Ved hjælp "
"af look-ahead plugin's indstilling bør dette forhindres (værdi 10 eller "
"deromkring bør være tilstrækkeligt - afhænger af de ønskede sikkerhedskrav - "
"dette vil tillade 10 utilsigtede anmodninger). TOTP har ikke det problem. "
"Indstilling af OTP-beskyttelse kan være fejlbehæftet. Der er ingen hemmelig "
"validering på OtpKeyProv-siden. I testfilmen ved 4:22 er det lykkedes mig at "
"indstille den Base32-kodede hemmelighed som Hex (hvilket ikke var en korrekt "
"hex-værdi), og den har ikke klaget over det. Der er ingen oplysninger om, "
"hvad der er sket med databasen, og hvordan den nu er konfigureret. Jeg har "
"ikke opdaget det før jeg har set filmen."

#: ../to-be-integrated.rst:644
msgid "Tested under Ubuntu 16.10, Nitrokey App v0.6.3 and Nitrokey Storage v0.45."
msgstr ""
"Testet under Ubuntu 16.10, Nitrokey App v0.6.3 og Nitrokey Storage v0.45."

#: ../to-be-integrated.rst:653
msgid "**Q:** How can I use the True Random Number Generator?"
msgstr "**Q:** Hvor god er Random Number Generator (RNG)?"

#: ../to-be-integrated.rst:655
msgid ""
"Both devices are compatible to the OpenPGP Card, so that scdrand should "
"work. This script may be useful. The TRNG provides about 40 kbit/s."
msgstr ""
"Begge enheder er kompatible med OpenPGP-kortet, så scdrand burde fungere. "
"Dette script kan være nyttigt. TRNG'en giver ca. 40 kbit/s."

#: ../to-be-integrated.rst:657
msgid ""
"The user comio created a systemd file to use scdrand and thus the TRNG "
"more generally. He created a ebuild for Gentoo, too."
msgstr ""
"Brugeren comio oprettede en systemd-fil for at bruge scdrand og dermed TRNG "
"mere generelt. Han oprettede også en ebuild til Gentoo."

#: ../to-be-integrated.rst:663
msgid "**Q:** Do you have resources for development and integration?"
msgstr "**Q:** Har I ressourcer til udvikling og integration?"

#: ../to-be-integrated.rst:666
msgid ""
"Use Nitrokey library to manage the one-time passwords and password safe "
"functionality. The project nitrokey-get-totp and nitrokey-get-password "
"are nice examples for using the python bindings of Nitrokey library to "
"get a custom interface. In order to access the integrated smart card, you"
" can use OpenSC's command line tools. If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. To work with the smart card low "
"level, see the OpenPGP Card specification. The source code of the "
"firmware and the hardware layout are available too. To develop special "
"applications or for command line access one can use the nitrocli created "
"by d-e-s-o. Gkey is a go-based command line tool to access the Password "
"Safe and OTP entries. A libnitrokey wrapper for Rust providing access to "
"Nitrokey devices."
msgstr ""
"Brug Nitrokey-biblioteket til at administrere engangsadgangskoder og "
"password safe-funktioner. Projekterne nitrokey-get-totp og nitrokey-get-"
"password er gode eksempler på at bruge Python-bindingerne til Nitrokey-"
"biblioteket for at få en brugerdefineret grænseflade. For at få adgang til "
"det integrerede smart card kan du bruge OpenSC's kommandolinjeværktøjer. "
"Hvis dit program har en PKCS#11-grænseflade, skal du bruge OpenSC's PKCS#11-"
"driver. Hvis du vil arbejde med smartkortet på lavt niveau, skal du se "
"OpenPGP Card-specifikationen. Kildekoden til firmwaren og hardware-layoutet "
"er også tilgængelig. For at udvikle specielle applikationer eller til "
"kommandolinjeadgang kan man bruge nitrocli, der er skabt af d-e-s-o. Gkey er "
"et go-baseret kommandolinjeværktøj til at få adgang til Password Safe og OTP-"
"indtastninger. En libnitrokey-wrapper til Rust, der giver adgang til "
"Nitrokey-enheder."

#: ../to-be-integrated.rst:677
msgid "# HSM 2"
msgstr "HSM"

#: ../to-be-integrated.rst:679
msgid ""
"**Nitrokey HSM:** 124 dataobjects (DF, EF) can be created. Each EF can "
"have a size of up to 256 byte. The total storage capacity of ca. 32 KByte"
" is shared dynamically among keys and data objects."
msgstr ""
"**Nitrokey HSM:** Der kan oprettes 124 dataobjekter (DF, EF). Hver EF kan "
"have en størrelse på op til 256 byte. Den samlede lagerkapacitet på ca. 32 "
"KByte deles dynamisk mellem nøgler og dataobjekter."

#: ../to-be-integrated.rst:683
msgid "**Q:** How to use the HSM for Login For: Nitrokey HSM"
msgstr "**Q:** Hvordan bruger man HSM til login til: Nitrokey HSM"

#: ../to-be-integrated.rst:686
msgid "Select your use case:"
msgstr "Vælg din brugssag:"

#: ../to-be-integrated.rst:688
msgid ""
"Login With Nitrokey HSM on Stand Alone Windows Computers Login With "
"Nitrokey HSM on Windows Domain Computers Using MS Active Directory For "
"Unix environments an integration with PAM and OpenSSH is available."
msgstr ""
"Log ind med Nitrokey HSM på Windows-computere Log ind med Nitrokey HSM på "
"Windows-domænedrev ved hjælp af MS Active Directory For Unix-miljøer er der "
"en integration med PAM og OpenSSH tilgængelig."

#: ../to-be-integrated.rst:692
msgid "**Q:**  How to use the HSM for Email Encryption"
msgstr "**Q:** Hvordan bruger man HSM til e-mail-kryptering?"

#: ../to-be-integrated.rst:694
msgid ""
"Encrypt your email using the S/MIME industry standard available in all "
"major e-mail clients."
msgstr ""
"Krypter din e-mail ved hjælp af S/MIME-standarden, der er tilgængelig i alle "
"større e-mail-klienter."

#: ../to-be-integrated.rst:696
msgid ""
"The Nitrokey HSM has been tested to work with Mozilla Thunderbird and "
"Microsoft Outlook. Other email clients with support for PKCS#11 or "
"Microsoft CSP should work as well."
msgstr ""
"Nitrokey HSM er blevet testet til at fungere med Mozilla Thunderbird og "
"Microsoft Outlook. Andre e-mail-klienter med understøttelse af PKCS#11 eller "
"Microsoft CSP bør også fungere."

#: ../to-be-integrated.rst:698
msgid "Note: A certificate can be purchased cheaply from CERTUM."
msgstr "Bemærk: Et certifikat kan købes billigt hos CERTUM."

#: ../to-be-integrated.rst:700
msgid "**Q:**   How to use the Nitrokey for Hard Disk Encryption with VeraCrpt?"
msgstr ""
"**Q:** Hvordan bruger man Nitrokey til harddisk-kryptering med VeraCrpt?"

#: ../to-be-integrated.rst:702
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey:"
msgstr ""
"`VeraCrypt <https://www.veracrypt.fr/en/Home.html>`_ er et gratis og Open "
"Source-disk-krypteringsprogram til Windows, macOS og GNU/Linux. Det er "
"efterfølgeren til TrueCrypt og kan derfor anbefales, selv om de følgende "
"instruktioner også bør gælde for TrueCrypt."

#: ../to-be-integrated.rst:711
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the password."
msgstr ""
"Bemærk venligst, at VeraCrypt ikke udnytter den fulde sikkerhed, som "
"Nitrokey (og smart cards generelt) tilbyder. I stedet lagrer den en nøglefil "
"på Nitrokey, som teoretisk set kan blive stjålet af en computervirus, efter "
"at brugeren har indtastet PIN-koden."

#: ../to-be-integrated.rst:713
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation. (Not tested with Nitrokey HSM!)"
msgstr ""
"Bemærk: `Aloaha Crypt <http://www.aloaha.com/aloaha-crypt-disk/>`_ er "
"baseret på TrueCrypt/VeraCrypt, men uden de beskrevne "
"sikkerhedsbegrænsninger."

#: ../to-be-integrated.rst:716
msgid "**Q:** How to sign and encrypt files and pdfs?"
msgstr "**Q:** Hvordan signerer og krypterer jeg filer og pdfs?"

#: ../to-be-integrated.rst:718
msgid "GnuPG"
msgstr "GnuPG"

#: ../to-be-integrated.rst:720
msgid ""
"Starting with version 2.1, GnuPG has build-in but limited support for the"
" Nitrokey HSM. Use the gpgsm tool to sign, verify, encrypt and decrypt "
"files or S/MIME messaging using your Nitrokey HSM. Use a signature key on"
" a Nitrokey HSM to sign documents using Acrobat Reader, Open Office / "
"Libre Office or any other PDF reader supporting electronic signatures. "
"ECC HSM Encryptor"
msgstr ""
"Fra og med version 2.1 har GnuPG indbygget, men begrænset understøttelse af "
"Nitrokey HSM. Brug værktøjet gpgsm til at signere, verificere, kryptere og "
"dekryptere filer eller S/MIME-beskeder ved hjælp af din Nitrokey HSM. Brug "
"en signaturnøgle på en Nitrokey HSM til at underskrive dokumenter ved hjælp "
"af Acrobat Reader, Open Office / Libre Office eller enhver anden PDF-læser, "
"der understøtter elektroniske signaturer. ECC HSM-krypteringsenhed"

#: ../to-be-integrated.rst:723
msgid ""
"ECC HSM Encryptor is a small application to encrypt and decrypt files "
"with a Nitrokey HSM."
msgstr ""
"ECC HSM Encryptor er et lille program til at kryptere og dekryptere filer "
"med en Nitrokey HSM."

#: ../to-be-integrated.rst:725
msgid ""
"**Q:** How to do certificat-based Web login Protect access to sensitive "
"information on your website with 2nd factor authentication."
msgstr ""
"**Q:** Hvordan laver man certifikatbaseret weblogin Beskyt adgangen til "
"følsomme oplysninger på dit websted med 2. faktorgodkendelse."

#: ../to-be-integrated.rst:728
msgid ""
"Use a Nitrokey HSM as authentication token via the build-in device "
"authentication PKI or use keys and certificates on a Nitrokey HSM for "
"TLS/SSL client authentication."
msgstr ""
"Brug en Nitrokey HSM som autentificeringstoken via den indbyggede PKI-"
"enhedsautentificering eller brug nøgler og certifikater på en Nitrokey HSM "
"til TLS/SSL-klientautentificering."

#: ../to-be-integrated.rst:730
msgid ""
"**Q:** SSH for Server Administration with windows For: Nitrokey Pro, "
"Nitrokey Storage, Nitrokey Start, Nitrokey HSM"
msgstr ""
"**Q:** SSH til serveradministration med Windows For: Nitrokey Pro, Nitrokey "
"Storage, Nitrokey Start, Nitrokey HSM"

#: ../to-be-integrated.rst:733
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"Nitrokey skal allerede have PGP-nøgler installeret, og den lokale GnuPG-"
"nøglering skal kende nøglerne, dvs. GPG4Win skal være installeret på "
"systemet (kun kerneprogrammet GnuPG er nødvendigt). Desuden bør du "
"installere PuTTY. Forberedelse på klienten"

#: ../to-be-integrated.rst:755
msgid "**Q:** SSH Server administration on linux"
msgstr "**Q:** SSH Server administration på linux"

#: ../to-be-integrated.rst:802
msgid "**Q:** DNSSEC"
msgstr "**Q:** DNSSEC"

#: ../to-be-integrated.rst:805
msgid "For: Nitrokey HSM"
msgstr "Ofte stillede spørgsmål om Nitrokey HSM"

#: ../to-be-integrated.rst:807
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resource apply:"
msgstr ""
"Beskyt din domænenavnsopløsning ved hjælp af DNSSEC og en Nitrokey HSM som "
"sikker nøgleopbevaring. Den er baseret på Smartcard-HSM, hvorfor følgende "
"ressource gælder:"

#: ../to-be-integrated.rst:809
msgid ""
"Signing NSD DNSSEC Zones with Nitrokey HSM by Vadim Penzin. Integration "
"with OpenDNSSEC has been successfully tested in a demo by Richard Lamb. "
"Luis D Espinoza Sanchez & Eberhard W Lisse held a session on using the "
"SmartCard-HSM for DNSSEC at the 2015 ICAAN Meeting in Singapore. Jan-Piet"
" Mens wrote a nice article about integrating the SmartCard-HSM with "
"PowerDNS."
msgstr ""
"Signering af NSD DNSSEC-zoner med Nitrokey HSM af Vadim Penzin. Integration "
"med OpenDNSSEC er blevet testet med succes i en demo af Richard Lamb. Luis D "
"Espinoza Sanchez Sanchez & Eberhard W Lisse holdt en session om brug af "
"SmartCard-HSM til DNSSEC på ICAAN-mødet i Singapore i 2015. Jan-Piet Mens "
"skrev en fin artikel om integration af SmartCard-HSM med PowerDNS."

#: ../to-be-integrated.rst:815
msgid ""
"**Q:** Physical Access Control With it's unique build-in device "
"authentication PKI, a Nitrokey HSM has a cryptographically protected "
"unique identity that can be verified in a fast authentication protocol. "
"An access control terminal can verify authenticity and identity of the "
"device, create a secure communication channel and perform offline PIN "
"verification. The coolPACS project has all the details."
msgstr ""
"**Q:** Fysisk adgangskontrol Med den unikke indbyggede enhedsautentifikation "
"PKI har en Nitrokey HSM en kryptografisk beskyttet unik identitet, som kan "
"verificeres i en hurtig autentifikationsprotokol. En terminal til "
"adgangskontrol kan verificere enhedens autenticitet og identitet, oprette en "
"sikker kommunikationskanal og udføre offline PIN-verifikation. CoolPACS-"
"projektet indeholder alle detaljerne."

#: ../to-be-integrated.rst:818 ../to-be-integrated.rst:914
msgid "**Q:**"
msgstr "**Q:**"

#: ../to-be-integrated.rst:916
msgid "PKI / Certificate Authority (CA)"
msgstr "Den certificeringsmyndighed"

#: ../to-be-integrated.rst:918
msgid "**Q:** Secret Management and Cloud Infrastructure"
msgstr "**Q:** Hemmelig forvaltning og cloud-infrastruktur"

#: ../to-be-integrated.rst:920
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey "
"HSM can be found at banzaicloud.com."
msgstr ""
"En metode til at sikre nøgler til Hashicorp Vault/Bank-Vault på en Nitrokey "
"HSM kan findes på banzaicloud.com."

#: ../to-be-integrated.rst:922
msgid "**Q:** How to do N-of-m Schemes"
msgstr "**Q:** Hvordan man laver N-of-m-ordninger"

#: ../to-be-integrated.rst:924
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure"
" sharing of key material/passwords and one for public key authentication "
"to control the access to the device. Please see this blog post for more "
"detailed information. N-of-m for DKEK Shares"
msgstr ""
"Nitrokey HSM 2 understøtter to forskellige n-of-m-ordninger - en til sikker "
"deling af nøglemateriale/adgangskoder og en til offentlig "
"nøgleautentificering for at kontrollere adgangen til enheden. Se venligst "
"dette blogindlæg for mere detaljerede oplysninger. N-of-m til DKEK-aktier"

#: ../to-be-integrated.rst:927
msgid ""
"This feature can be used with OpenSC as described here. The general "
"approach is seen in the videos below (external links)."
msgstr ""
"Denne funktion kan bruges med OpenSC som beskrevet her. Den generelle "
"fremgangsmåde kan ses i videoerne nedenfor (eksterne links)."

#: ../to-be-integrated.rst:929
msgid "Nitrokey HSM's Secure Key Backup and Restore:"
msgstr "Nitrokey HSM's sikre nøglebackup og -gendannelse:"

#: ../to-be-integrated.rst:931
msgid "Screencast"
msgstr "Screencast"

#: ../to-be-integrated.rst:933
msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
msgstr "Nitrokey HSM's M-of-N tærskelordning:"

#: ../to-be-integrated.rst:935
msgid "screencast N-of-m for public key authentication"
msgstr "screencast N-of-m for offentlig nøgleautentifikation"

#: ../to-be-integrated.rst:938
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. The blog post"
" gives an overview and a how-to here (CDN access required) is shown the "
"process step by step in the Smart Card Shell. For OpenSC there is a "
"ticket to get that integrated."
msgstr ""
"Indtil videre er n-of-m-autentifikation kun understøttet i OpenSCDP. "
"Blogindlægget giver et overblik, og her (CDN-adgang påkrævet) vises "
"processen trin for trin i Smart Card Shell. For OpenSC er der en billet til "
"at få det integreret."

#: ../to-be-integrated.rst:940
msgid ""
"n-of-m authentication is also supported in the PKI-as-a-Service Portal "
"for locally and remote connected HSMs. The PKI-as-a-Service Portal is "
"based on OpenSCDP."
msgstr ""
"n-of-m-godkendelse understøttes også i PKI-as-a-Service Portal for lokalt og "
"eksternt tilsluttede HSM'er. PKI-as-a-Service Portal er baseret på OpenSCDP."

#: ../to-be-integrated.rst:942
msgid "**Q:** How to safe Cryptocurrences in the Nitrokey HSM"
msgstr "**Q:** Hvordan sikrer man Cryptocurrences i Nitrokey HSM"

#: ../to-be-integrated.rst:945
msgid ""
"J.v.d.Bosch wrote a simple, free python program to secure the private key"
" of a Bitcoin wallet in a HSM. See here for further information. Using "
"the HSM in an Ethereum PoA Chain. Tezos has been reported to work with "
"Nitrokey HSM."
msgstr ""
"J.v.d.Bosch skrev et simpelt, gratis python-program til at sikre den private "
"nøgle til en Bitcoin-tegnebog i en HSM. Se her for yderligere oplysninger. "
"Brug af HSM i en Ethereum PoA-kæde. Tezos er blevet rapporteret til at "
"fungere med Nitrokey HSM."

#: ../to-be-integrated.rst:949
msgid ""
"**Q:** How to use the True Random Number Generator? Nitrokey HSM can be "
"used with Botan and TokenTools by using OpenSC as a PKCS#11 driver."
msgstr ""
"**Q:** Hvordan bruger man den sande tilfældige talgenerator? Nitrokey HSM "
"kan bruges med Botan og TokenTools ved at bruge OpenSC som PKCS#11-driver."

#: ../to-be-integrated.rst:952
msgid ""
"OpenSSL can't use Nitrokey HSM's RNG directly because engine-pkcs11 "
"doesn't contain a mapping for OpenSSL to C_GenerateRandom."
msgstr ""
"OpenSSL kan ikke bruge Nitrokey HSM's RNG direkte, fordi engine-pkcs11 ikke "
"indeholder en mapping for OpenSSL til C_GenerateRandom."

#: ../to-be-integrated.rst:954
msgid "**Q:** What can I use for development and integration?"
msgstr "**Q:** Hvad kan jeg bruge til udvikling og integration?"

#: ../to-be-integrated.rst:956
msgid ""
"se OpenSC's commandline tools If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. Depending on your Linux "
"distribution, the PKCS driver may may be located at /usr/lib/x86_64"
"-linux-gnu/opensc-pkcs11.so for example."
msgstr ""
"se OpenSC's kommandolinjeværktøjer Hvis dit program har en PKCS#11-"
"grænseflade, skal du bruge OpenSC's PKCS#11-driver. Afhængigt af din Linux-"
"distribution kan PKCS-driveren f.eks. være placeret på /usr/lib/"
"x86_64-linux-gnu/opensc-pkcs11.so."

#: ../to-be-integrated.rst:958
msgid ""
"Alternatively to OpenSC, you might use sc-hsm-embedded PKCS#11 and CSP-"
"Minidriver Module."
msgstr ""
"Alternativt til OpenSC kan du bruge sc-hsm-embedded PKCS#11 og CSP-"
"Minidriver Module."

#: ../to-be-integrated.rst:959
msgid ""
"In case you use Java, you find a JCE Provider as part of Smart Card "
"Shell. You can find information about the m-of-n scheme here. Secure "
"Messaging can be used with the JCE provider. Please register at the "
"CardContact Developer Network to get access to the user manual and "
"further tools. You can also request the manual from us. Smart card "
"forwarding with Fedora A user generated tool on GitHub to provide an easy"
" frontend to OpenSCs toolset - nitrotool A forum post describes the "
"procedure to sign executables with a key stored on HSM on Windows."
msgstr ""
"Hvis du bruger Java, finder du en JCE Provider som en del af Smart Card "
"Shell. Du kan finde oplysninger om m-of-n-ordningen her. Secure Messaging "
"kan bruges med JCE-provideren. Du bedes registrere dig på CardContact "
"Developer Network for at få adgang til brugermanualen og yderligere "
"værktøjer. Du kan også anmode om manualen hos os. Smart card forwarding with "
"Fedora Et brugergenereret værktøj på GitHub til at give en nem frontend til "
"OpenSCs værktøjssæt - nitrotool Et forumindlæg beskriver proceduren for at "
"signere eksekverbare filer med en nøgle gemt på HSM på Windows."

#: ../to-be-integrated.rst:967
msgid "Key Use Counter"
msgstr "Nøgle Anvendelse Tæller"

#: ../to-be-integrated.rst:969
msgid ""
"The Key Use Counter is displayed in the Key Manager of the Smart Card "
"Shell. At the moment you can only set it with a script "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter in the class "
"scsh/sc-hsm/SmartCardHSM.js)."
msgstr ""
"Tælleren for brug af nøgle vises i Key Manager i Smart Card Shell. I "
"øjeblikket kan du kun indstille den med et script ("
"SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter i klassen scsh/"
"sc-hsm/SmartCardHSM.js)."

#: ../to-be-integrated.rst:971
msgid ""
"In our PKCS#11 module there is a proprietary attribute "
"CKA_SC_HSM_KEY_USE_COUNTER with the key use of the C_GenerateKeyPair "
"counter can be set. The attribute can then also be set for a key can be "
"queried."
msgstr ""
"I vores PKCS#11-modul er der en proprietær attribut "
"CKA_SC_HSM_KEY_USE_COUNTER, hvor C_GenerateKeyPair-tælleren kan indstilles "
"med nøgleanvendelsen. Attributten kan derefter også sættes for en nøgle kan "
"spørges."

#: ../to-be-integrated.rst:973
msgid ""
"In OCF and the JCE Provider, the Key Use Counter can be queried with "
"SmartCardHSMKey.getUseCounter() and confirm with "
"SmartCardHSMKeySpec.setKeyUseCounter() can be set."
msgstr ""
"I OCF og JCE-provideren kan tælleren for nøgleanvendelse spørges med "
"SmartCardHSMKey.getUseCounter() og bekræftes med SmartCardHSMKeySpec."
"setKeyUseCounter() kan indstilles."
