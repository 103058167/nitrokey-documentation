# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-30 21:31+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../nethsm/index.rst:1
msgid "# NetHSM"
msgstr ""

#: ../nethsm/index.rst:3
msgid ""
"NetHSM container requires nested virtualization for strong separation "
"with other containers. Thus, to start a NetHSM container you need a Linux"
" host with /dev/kvm available. Execute this command:"
msgstr ""

#: ../nethsm/index.rst:9
msgid ""
"Es l?sst sich eine Client-Library f?r die Schnittstelle in beliebigen "
"Programmiersprachen erzeugen. Hier ein Beispiel f?r Python:"
msgstr ""

#: ../nethsm/index.rst:16
msgid "## API Tutorial"
msgstr ""

#: ../nethsm/index.rst:18
msgid ""
"Die Schnittstellenspezifikation steht als "
"[RAML](https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.raml) und als "
"[OpenAPI "
"(Swagger)](https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20.json)"
" zur Verf√ºgung."
msgstr ""

#: ../nethsm/index.rst:20
msgid "First, let's see what we have here:"
msgstr ""

#: ../nethsm/index.rst:23
msgid "$ curl -k -i -w '\\n' https://localhost:8443/api/v1/info"
msgstr ""

#: ../nethsm/index.rst:25
msgid ""
"HTTP/1.1 200 OK content-length: 45 content-type: application/json date: "
"Mon, 25 Jan 2021 21:00:27 GMT etag: \"7bab62510e05c332735624bc7a585a30\" "
"vary: Accept, Accept-Encoding, Accept-Charset, Accept-Language"
msgstr ""

#: ../nethsm/index.rst:32
msgid "{\"vendor\":\"Nitrokey GmbH\",\"product\":\"NetHSM\"} ```"
msgstr ""

#: ../nethsm/index.rst:35
msgid "See what the device's status is:"
msgstr ""

#: ../nethsm/index.rst:37
msgid "``` $ curl -k -i -w '\\n' https://localhost:8443/api/v1/health/state"
msgstr ""

#: ../nethsm/index.rst:40
msgid ""
"HTTP/1.1 200 OK cache-control: no-cache content-length: 25 content-type: "
"application/json date: Mon, 25 Jan 2021 20:57:32 GMT vary: Accept, "
"Accept-Encoding, Accept-Charset, Accept-Language"
msgstr ""

#: ../nethsm/index.rst:47
msgid "{\"state\":\"Unprovisioned\"} ```"
msgstr ""

#: ../nethsm/index.rst:50
msgid "### Initialization"
msgstr ""

#: ../nethsm/index.rst:52
msgid ""
"A new NetHSM needs to be provisioned first with passphrases and the "
"current time. The *Admin Passphrase* is the *Administrator*'s passphrase,"
" which is the super user of the NetHSM. The *Unlock Passphrase* is used "
"to encrypt NetHSM's confidential data store."
msgstr ""

#: ../nethsm/index.rst:54
msgid ""
"``` $ curl -k -i -w '\\n' -X POST https://localhost:8443/api/v1/provision"
" -H \"content-type: application/json\" -d \"{ adminPassphrase: "
"\\\"adminPassphrase\\\", unlockPassphrase: \\\"unlockPassphrase\\\", "
"systemTime: \\\"$(date --utc -Iseconds)\\\"}\""
msgstr ""

#: ../nethsm/index.rst:57
msgid ""
"HTTP/1.1 204 No Content cache-control: no-cache content-type: "
"application/json date: Wed, 11 Nov 2020 16:35:44 GMT vary: Accept, "
"Accept-Encoding, Accept-Charset, Accept-Language ```"
msgstr ""

#: ../nethsm/index.rst:64
msgid "NetHSM can be used in *Attended Boot* mode and *Unattended Boot* mode."
msgstr ""

#: ../nethsm/index.rst:66
msgid ""
"In *Attended Boot* mode the *Unlock Passphrase* needs to be entered "
"during each start which is used to encrypt the data store. For security "
"reasons this mode is recommended."
msgstr ""

#: ../nethsm/index.rst:67
msgid ""
"In *Unattended Boot* mode no Unlock Passphrase is required, therefore the"
" NetHSM can start unattended and the data store is stored unencrypted. "
"Use this mode if your availability requirements can't be fulfilled with "
"*Attended Boot* mode."
msgstr ""

#: ../nethsm/index.rst:69
msgid "Retrieve the current mode:"
msgstr ""

#: ../nethsm/index.rst:71
msgid ""
"``` $ curl -k -i -w '\\n' https://localhost:8443/api/v1/config"
"/unattended-boot\" ```"
msgstr ""

#: ../nethsm/index.rst:75
msgid "Switch to *Unattended Boot* mode:"
msgstr ""

#: ../nethsm/index.rst:77
msgid ""
"``` $ curl -k -i -w '\\n' -X PUT https://localhost:8443/api/v1/config"
"/unattended-boot\" -d \"{ status: \\\"on\\\"}\" ```"
msgstr ""

#: ../nethsm/index.rst:81
msgid "Switch to *Attended Boot* mode:"
msgstr ""

#: ../nethsm/index.rst:83
msgid ""
"``` $ curl -k -i -w '\\n' -X PUT https://localhost:8443/api/v1/config"
"/unattended-boot\" -d \"{ status: \\\"off\\\"}\" ```"
msgstr ""

#: ../nethsm/index.rst:87
msgid "### Roles"
msgstr ""

#: ../nethsm/index.rst:89
msgid ""
"Separation of duties can be implemented by using the available Roles. "
"Each user account configured on the NetHSM has one of the following Roles"
" assigned to it. Following is a high-level description of the operations "
"allowed by individual Roles, for endpoint-specific details please refer "
"to the REST API documentation."
msgstr ""

#: ../nethsm/index.rst:94
msgid ""
"*R-Administrator* A user account with this Role has access to all "
"operations provided by the REST API, with the exception of ??key usage?? "
"operations, i.e. message signing and decryption."
msgstr ""

#: ../nethsm/index.rst:97
msgid ""
"*R-Operator* A user account with this Role has access to all ??key "
"usage?? op- erations, a read-only subset of ??key management?? operations"
" and ??user management?? operations allowing changes to their own account"
" only."
msgstr ""

#: ../nethsm/index.rst:100
msgid ""
"*R-Metrics* A user account with this Role has access to read-only metrics"
" operations only."
msgstr ""

#: ../nethsm/index.rst:102
msgid ""
"*R-Backup* A user account with this Role has access to the operations "
"required to initiate a system backup only."
msgstr ""

#: ../nethsm/index.rst:104
msgid ""
"Note: Another Role will be implemented which is allowed to /keys/ POST, "
"/keys/generate POST, /keys/{KeyID} PUT & DELETE, /keys/{KeyID}/cert PUT &"
" DELETE in addition to what R-Operator is allowed to do."
msgstr ""

#: ../nethsm/index.rst:106
msgid "## Create a User"
msgstr ""

#: ../nethsm/index.rst:108
msgid "``` $ curl -i -w '\\n' -u admin:adminadmin \\"
msgstr ""

#: ../nethsm/index.rst:110
msgid ""
"\"https://nethsmdemo.nitrokey.com/api/v1/users/operator\" -X PUT \\ -H "
"\"content-type: application/json\" -d \"{\\\"realName\\\": \\\"Jane "
"User\\\", \\ \\\"role\\\": \\\"Operator\\\", \\\"passphrase\\\": "
"\\\"opPassphrase\\\"}\""
msgstr ""

#: ../nethsm/index.rst:113 ../nethsm/index.rst:178 ../nethsm/index.rst:193
msgid "```"
msgstr ""

#: ../nethsm/index.rst:115
msgid "### Create Keys"
msgstr ""

#: ../nethsm/index.rst:117
msgid ""
"``` $ curl -k -i -w '\\n' -u admin:adminPassphrase -X POST "
"https://localhost:8443/api/v1/keys/generate -H \"content-type: "
"application/json\" -d \"{ \\\"mechanisms\\\": [  "
"\\\"RSA_Signature_PSS_SHA256\\\"  ],  \\\"algorithm\\\": \\\"RSA\\\",  "
"\\\"length\\\": 2048,  \\\"id\\\": \\\"myFirstKey\\\"}\""
msgstr ""

#: ../nethsm/index.rst:120
msgid ""
"HTTP/1.1 201 Created cache-control: no-cache content-length: 0 content-"
"type: application/json date: Tue, 26 Jan 2021 05:54:09 GMT location: "
"/api/v1/keys/0ead0d9dd849cecf845c vary: Accept, Accept-Encoding, Accept-"
"Charset, Accept-Language ```"
msgstr ""

#: ../nethsm/index.rst:129
msgid "### List Keys"
msgstr ""

#: ../nethsm/index.rst:131
msgid ""
"``` $ curl -k -i -w '\\n' -u admin:adminPassphrase "
"https://localhost:8443/api/v1/keys"
msgstr ""

#: ../nethsm/index.rst:134
msgid ""
"HTTP/1.1 200 OK content-length: 39 content-type: application/json date: "
"Tue, 26 Jan 2021 05:56:24 GMT etag: "
"\"34353234366432333063663739313939346635316666343937333564653434333937613237626139\""
" vary: Accept, Accept-Encoding, Accept-Charset, Accept-Language"
msgstr ""

#: ../nethsm/index.rst:141
msgid "[{\"key\":\"myFirstKey\"}] ```"
msgstr ""

#: ../nethsm/index.rst:144
msgid "### Show Key Details"
msgstr ""

#: ../nethsm/index.rst:146
msgid ""
"``` $ curl -s -k -w '\\n' -u admin:adminPassphrase "
"https://localhost:8443/api/v1/keys/myFirstKey"
msgstr ""

#: ../nethsm/index.rst:149
msgid ""
"{\"mechanisms\":[\"RSA_Signature_PSS_SHA256\"],\"algorithm\":\"RSA\",\"modulus\":\"td583uBYRfO7qtvPoQF7liUh8gq3zckCk9LpCfblx2S0HdOvButfD4TyH4EMiZj3NhEoq18BZhqhxTL22UyNJwYJd2tCF4EbgTaj/Z3LeCPoGN5LjadFCsYriPeHsdnuLmTK6KsmTAP/CWJ+u3LesU5bCGWbDnPjv2WaLTeiMuNw1347gj1drft8jFA9SmOFjZxM9pq2Hk1nQSYpeAPCnigC7hLwAWgzKqVQv/J7VVWat3ke/jOrxFiRDFIeC3qxtBs6T7GYwqmsxkxgqKDljTAH4qMrC9vgVbbFPffe8UgmtDfvQ0ghP57b3HYZDON90MJ2qrU944E74g+ua6unTw==\",\"publicExponent\":\"AQAB\",\"operations\":0}"
" ```"
msgstr ""

#: ../nethsm/index.rst:154
msgid "## API Documentation"
msgstr ""

#: ../nethsm/index.rst:156
msgid ""
"The entire API is described "
"[here](https://www.nitrokey.com/files/nethsmapi/)."
msgstr ""

#: ../nethsm/index.rst:158
msgid "## PKCS#11"
msgstr ""

#: ../nethsm/index.rst:160
msgid "Download the PKCS#11 driver for NetHSM."
msgstr ""

#: ../nethsm/index.rst:161
msgid ""
"Modify the configuration file `p11nethsm-config.yaml` according to your "
"setup and store it in `$HOME/.nitrokey`, `/etc/nitrokey/`, or in the "
"folder where your application is executed."
msgstr ""

#: ../nethsm/index.rst:163
msgid "### Decrypting"
msgstr ""

#: ../nethsm/index.rst:165 ../nethsm/index.rst:182
msgid ""
"Before, create the key with the according mechanism before, and configure"
" NetHSM's address and operator username in the p11nethsm config file."
msgstr ""

#: ../nethsm/index.rst:167
msgid ""
"``` $ KEYID=42 $ HEXID=$(echo ${KEYID}'\\c' | xxd -ps) $ curl -s -u "
"operator:opPassphrase -X GET \\"
msgstr ""

#: ../nethsm/index.rst:171 ../nethsm/index.rst:188
msgid ""
"https://nethsmdemo.nitrokey.com/api/v1/keys/$KEYID/public.pem -o "
"_public.pem"
msgstr ""

#: ../nethsm/index.rst:173
msgid ""
"$ echo 'NetHSM rulez!' | openssl pkeyutl -encrypt -pubin -inkey "
"_public.pem \\"
msgstr ""

#: ../nethsm/index.rst:173
msgid ""
"-pkeyopt rsa_padding_mode:oaep -pkeyopt rsa_oaep_md:sha512 \\ -pkeyopt "
"rsa_mgf1_md:sha512 -out _data.crypt"
msgstr ""

#: ../nethsm/index.rst:176
msgid "$ pkcs11-tool --module p11nethsm.so -v -p opPassphrase --decrypt \\"
msgstr ""

#: ../nethsm/index.rst:176
msgid ""
"--mechanism RSA-PKCS-OAEP --input-file _data.crypt --id $HEXID \\ --hash-"
"algorithm SHA512"
msgstr ""

#: ../nethsm/index.rst:180
msgid "### Signing"
msgstr ""

#: ../nethsm/index.rst:184
msgid ""
"``` $ KEYID=23 $ HEXID=$(echo ${KEYID}'\\c' | xxd -ps) $ curl -s -u "
"operator:opPassphrase -X GET \\"
msgstr ""

#: ../nethsm/index.rst:189
msgid ""
"$ echo 'NetHSM rulez!' | pkcs11-tool --module p11nethsm.so -v -p "
"opPassphrase \\"
msgstr ""

#: ../nethsm/index.rst:190
msgid "--sign --mechanism SHA512-RSA-PKCS-PSS --output-file _data.sig --id $HEXID"
msgstr ""

#: ../nethsm/index.rst:191
msgid ""
"$ echo 'NetHSM rulez!' | openssl dgst -keyform PEM -verify _public.pem "
"-sha512 \\"
msgstr ""

#: ../nethsm/index.rst:192
msgid ""
"-sigopt rsa_padding_mode:pss -sigopt rsa_pss_saltlen:-1 -signature "
"_data.sig"
msgstr ""

#: ../nethsm/index.rst:197
msgid "## Integrating into own custom application"
msgstr ""

#: ../nethsm/index.rst:199
msgid ""
"To integrate the NetHSM into own custom applications we recommend using "
"NetHSM's REST API. To generate a client library for many different "
"languages,  including JavaScript, C++ and Python, you can use the  "
"[openapi-generator](https://github.com/OpenAPITools/openapi-generator). "
"You can install it locally, or use a Docker container, which is very "
"easy. To list all the available languages, you  enter"
msgstr ""

#: ../nethsm/index.rst:201
msgid ""
"``` $ docker run --pull --rm -ti openapitools/openapi-generator-cli list "
"-i stable ```"
msgstr ""

#: ../nethsm/index.rst:205
msgid "Then you can generate the NetHSM client like this:"
msgstr ""

#: ../nethsm/index.rst:207
msgid ""
"``` $ docker run --pull --rm -ti -v \"${PWD}:/local\" openapitools"
"/openapi-generator-cli generate -i "
"\"https://app.swaggerhub.com/apiproxy/schema/file/apis/nitrokey/nethsm/v1?format=json\""
" -o /local/out -g javascript ```"
msgstr ""

#: ../nethsm/index.rst:211
msgid ""
"The generated client code, in this case JavaScript, will be created in  "
"the `./out/` directory. There is documentation inside as well, how to use"
"  it."
msgstr ""

#: ../nethsm/index.rst:215
msgid "# Old description, needs to be converted to current API"
msgstr ""

#: ../nethsm/index.rst:217
msgid "Does it has some keys on it?"
msgstr ""

#: ../nethsm/index.rst:219
msgid ""
"``` $ curl -k -i -w \"\\n\" -X GET https://localhost:8443/api/v1/keys "
"HTTP/1.1 412 Precondition Failed content-length: 35 content-type: "
"application/json date: Mon, 25 Jan 2021 21:11:30 GMT"
msgstr ""

#: ../nethsm/index.rst:226
msgid "{\"message\":\"Service not available\"} ```"
msgstr ""

#: ../nethsm/index.rst:229
msgid ""
"Ohh, NetHSM seems to have access control. In fact is has an Admin  "
"password and a User password. The Admin password is used to authenticate "
"any kind of changes of the system, settings and keys. The User password "
"is required to authenticate the usage of keyfender without any  "
"modification."
msgstr ""

#: ../nethsm/index.rst:231
msgid ""
"Before you can do anything with the system, the Admin password needs to "
"be defined first. It doesn't has a default value."
msgstr ""

#: ../nethsm/index.rst:233
msgid ""
"``` $ curl -k -i -w \"\\n\" -X PUT "
"localhost:8443/api/v0/system/passwords/admin -H \"content-type: "
"application/json\" -d '{ newPassword: \"secret\" }'"
msgstr ""

#: ../nethsm/index.rst:236 ../nethsm/index.rst:245 ../nethsm/index.rst:254
msgid "HTTP/1.1 200 OK { \"status\": \"success\" } ```"
msgstr ""

#: ../nethsm/index.rst:240
msgid "If you want to change the Admin password again, you need to authenticate:"
msgstr ""

#: ../nethsm/index.rst:242
msgid ""
"``` $ curl -i -w \"\\n\" -X PUT "
"http://admin:secret@localhost:8443/api/v0/system/passwords/admin -H "
"\"content-type: application/json\" -d '{ newPassword: \"supersecret\" }'"
msgstr ""

#: ../nethsm/index.rst:249
msgid "Define a User password:"
msgstr ""

#: ../nethsm/index.rst:251
msgid ""
"``` $ curl -i -w \"\\n\" -X PUT "
"http://admin:supersecret@localhost:8443/api/v0/system/passwords/user -H "
"\"content-type: application/json\" -d '{ newPassword: \"usersecret\" }'"
msgstr ""

#: ../nethsm/index.rst:258
msgid "You can generate RSA keys:"
msgstr ""

#: ../nethsm/index.rst:260
msgid ""
"``` $ curl -i -w \"\\n\" -X POST "
"http://admin:supersecret@localhost:8443/api/v0/keys -H \"content-type: "
"application/json\" -d '{\"purpose\":\"signing\", \"algorithm\":\"RSA\", "
"\"length\":4096}'"
msgstr ""

#: ../nethsm/index.rst:263 ../nethsm/index.rst:279 ../nethsm/index.rst:293
msgid "HTTP/1.1 200 OK {"
msgstr ""

#: ../nethsm/index.rst:265 ../nethsm/index.rst:281 ../nethsm/index.rst:295
#: ../nethsm/index.rst:334
msgid "\"status\": \"success\", \"data\": {"
msgstr ""

#: ../nethsm/index.rst:267
msgid "\"location\": \"/api/v0/keys/Im4bPvqXM8w4SZxEvxvi\""
msgstr ""

#: ../nethsm/index.rst:268 ../nethsm/index.rst:270 ../nethsm/index.rst:284
#: ../nethsm/index.rst:286 ../nethsm/index.rst:298 ../nethsm/index.rst:300
#: ../nethsm/index.rst:322 ../nethsm/index.rst:343 ../nethsm/index.rst:344
#: ../nethsm/index.rst:346
msgid "}"
msgstr ""

#: ../nethsm/index.rst:272
msgid ""
"Here you got the location of the newly generated key. The last part of "
"the URL is the key ID: Im4bPvqXM8w4SZxEvxvi"
msgstr ""

#: ../nethsm/index.rst:274
msgid ""
"Instead of dealing with generated key IDs, you can specify the key ID "
"yourself:"
msgstr ""

#: ../nethsm/index.rst:276
msgid ""
"``` $ curl -i -w \"\\n\" -X POST "
"http://admin:supersecret@localhost:8443/api/v0/keys -H \"content-type: "
"application/json\" -d '{\"purpose\":\"authentication\", "
"\"algorithm\":\"RSA\", \"length\":2048, \"id\":\"myKey\"}'"
msgstr ""

#: ../nethsm/index.rst:283
msgid "\"location\": \"/api/v0/keys/myKey\""
msgstr ""

#: ../nethsm/index.rst:288
msgid "You can also import existing keys:"
msgstr ""

#: ../nethsm/index.rst:290
msgid ""
"``` $ curl -i -w \"\\n\" -X POST "
"http://admin:supersecret@localhost:8443/api/v0/keys -d "
"'{\"purpose\":\"encryption\", \"algorithm\":\"RSA\", "
"\"privateKey\":{\"publicExponent\":\"AQAB\",\"primeP"
"\":\"4P7TWJety3bZ47tp_WnB8BEbBX9kd_ONa6bOnPd2nxfXmLl1W61yQbZAw8bTReBfYsre8wYe8jVSs-"
"nNGgR19-FPnXMg8xAgFrdcVvfj8OverK-q3MJhZTT2X-ZAhN5H-"
"wWf_xXPJPMtPsPXXs914fU7WchZoBIVcarQq0eGHMM=\",\"primeQ"
"\":\"x8QUQ4aPrh33oBip_PBpzRHMRtg4isr8CwXQq8ijSd8dvYjaC8mTYPB0Nytsi047XjXBLq0HyvpjxpcVWYBzqrPKFFcafTdk80SQNtD5EUyGy_rFRbowDaG5UoMVSL1VrJLx6xI8OToUP2J1ZiuZG0I-"
"Ms2YQcanZzYRANppLYM=\"}}'"
msgstr ""

#: ../nethsm/index.rst:297
msgid "\"location\": \"/api/v0/keys/kfG8H2z2cddUMXeiK5Ky\""
msgstr ""

#: ../nethsm/index.rst:302
msgid "You can overwrite an existing key with PUT or delete with DELETE."
msgstr ""

#: ../nethsm/index.rst:304
msgid ""
"Now we are going to perform key operations. For this we don't need  the "
"Admin password anymore but can use the User password instead. What we "
"have got?"
msgstr ""

#: ../nethsm/index.rst:306
msgid ""
"``` $ curl -i -w \"\\n\" -X GET "
"http://user:usersecret@localhost:8443/api/v0/keys"
msgstr ""

#: ../nethsm/index.rst:309
msgid ""
"HTTP/1.1 200 OK content-length: 199 content-type: application/json vary: "
"Accept, Accept-Encoding, Accept-Charset, Accept-Language"
msgstr ""

#: ../nethsm/index.rst:319 ../nethsm/index.rst:343
msgid "{"
msgstr ""

#: ../nethsm/index.rst:315
msgid "\"status\": \"success\", \"data\": ["
msgstr ""

#: ../nethsm/index.rst:317
msgid ""
"{ \"location\": \"/api/v0/keys/cphQSDP1n2q4BxnPVI4y\" }, { \"location\": "
"\"/api/v0/keys/kfG8H2z2cddUMXeiK5Ky\" }, { \"location\": "
"\"/api/v0/keys/myKey\" }"
msgstr ""

#: ../nethsm/index.rst:320
msgid "]"
msgstr ""

#: ../nethsm/index.rst:324
msgid "Here is how you get a public key:"
msgstr ""

#: ../nethsm/index.rst:326
msgid ""
"``` $ curl -i -w \"\\n\" -X GET "
"http://user:usersecret@localhost:8443/api/v0/keys/kfG8H2z2cddUMXeiK5Ky "
"HTTP/1.1 200 OK content-length: 558 content-type: application/json vary: "
"Accept, Accept-Encoding, Accept-Charset, Accept-Language"
msgstr ""

#: ../nethsm/index.rst:336
msgid ""
"\"id\": \"kfG8H2z2cddUMXeiK5Ky\", \"purpose\": \"encryption\", "
"\"algorithm\": \"RSA\", \"publicKey\": {"
msgstr ""

#: ../nethsm/index.rst:340
msgid "\"modulus\":"
msgstr ""

#: ../nethsm/index.rst:341
msgid ""
"\"r5JrMu80IEJoyM-9utzBs64Her9"
"-VkjYhTU9a5ZrQ0zbECFYpdcTScRrWkZHy0Of6OLXumHHK_Krikmq1m53iw88iTVB_Up8oREkZt2szWifJlAVse9vfzERC_VmIFVqqZgmY1JopygVJ5_MMniOe8fN3iZAf-"
""
"33ZB1aL14f0Y4m6xGXSN8er_q1yxevWy5oUVyF8Zl7r3ATERAX_9lsuLTZN9tAEBFqq4naH9mSsEsyRljybSuhX411CWUE4cj8JXf9qKumoN7duYNTjipSZqLauJ56txn5zTKDMGKvpcxB5jlQ_0ltVcGEayIjkXhJFR_dM2uwG4cQSmC4Bqn-"
"yQ==\","
msgstr ""

#: ../nethsm/index.rst:342
msgid "\"publicExponent\": \"AQAB\""
msgstr ""

#: ../nethsm/index.rst:348
msgid "You can get it also in PEM format:"
msgstr ""

#: ../nethsm/index.rst:350
msgid ""
"``` $ curl -i -w \"\\n\" -X GET "
"http://user:usersecret@localhost:8443/api/v0/keys/kfG8H2z2cddUMXeiK5Ky/public.pem"
msgstr ""

#: ../nethsm/index.rst:353
msgid ""
"HTTP/1.1 200 OK content-length: 451 content-type: application/x-pem-file "
"vary: Accept, Accept-Encoding, Accept-Charset, Accept-Language"
msgstr ""

#: ../nethsm/index.rst:358
msgid ""
"-----BEGIN PUBLIC KEY----- "
"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr5JrMu80IEJoyM+9utzB "
"s64Her9+VkjYhTU9a5ZrQ0zbECFYpdcTScRrWkZHy0Of6OLXumHHK/Krikmq1m53 "
"iw88iTVB/Up8oREkZt2szWifJlAVse9vfzERC/VmIFVqqZgmY1JopygVJ5/MMniO "
"e8fN3iZAf+33ZB1aL14f0Y4m6xGXSN8er/q1yxevWy5oUVyF8Zl7r3ATERAX/9ls "
"uLTZN9tAEBFqq4naH9mSsEsyRljybSuhX411CWUE4cj8JXf9qKumoN7duYNTjipS "
"ZqLauJ56txn5zTKDMGKvpcxB5jlQ/0ltVcGEayIjkXhJFR/dM2uwG4cQSmC4Bqn+ yQIDAQAB"
" -----END PUBLIC KEY----- ```"
msgstr ""

#: ../nethsm/index.rst:369
msgid ""
"With each key you can execute decrypt and signing operations  (Technical "
"restriction to the designated key purpose is not enforced  yet.) Signing "
"can invoke hashing, or you send a hash instead."
msgstr ""

#: ../nethsm/index.rst:371
msgid ""
"``` $ curl -i -w \"\\n\" -X POST -d "
"'{\"message\":\"DOTvDL7e547MJ5tTWqjU5W3-wDFFh0f-"
"g4GHbdgl7iPh6wQe53JV25nxDWgEi3HJcw5YkoBGIbj1XfRbTZbsI77lfIK_lhpf5XVqeKrU0YCRPYDZ2qDFdJyMajyjDieUwTmyxLdrJ_UrwdyFtNPQ27XvjUUF71DLTNMrbKnRNeqVoAWy3PK3Asqo62DRAwLvwRuuz6UhmoDNdJdVzHCi8KJdNQHI5Q8Nhn2SAwVO85IRceOrzIoU00l2QmR0WGNtTwli1lWqfvtE21wExA9ys7mqvJpUCUzPamlsESBveh7c3FboTkekUzZlB6YOUhoWmaV8gxaMBzRFKqKBulbJ8Q==\"}'"
" "
"http://user:usersecret@localhost:8443/api/v0/keys/myKey/actions/pkcs1/sign"
" ```"
msgstr ""

#: ../nethsm/index.rst:375
msgid "Decrypting data is similarly easy:"
msgstr ""

#: ../nethsm/index.rst:377
msgid ""
"``` $ curl -i -w \"\\n\" -X POST -d "
"'{\"encrypted\":\"DOTvDL7e547MJ5tTWqjU5W3-wDFFh0f-"
"g4GHbdgl7iPh6wQe53JV25nxDWgEi3HJcw5YkoBGIbj1XfRbTZbsI77lfIK_lhpf5XVqeKrU0YCRPYDZ2qDFdJyMajyjDieUwTmyxLdrJ_UrwdyFtNPQ27XvjUUF71DLTNMrbKnRNeqVoAWy3PK3Asqo62DRAwLvwRuuz6UhmoDNdJdVzHCi8KJdNQHI5Q8Nhn2SAwVO85IRceOrzIoU00l2QmR0WGNtTwli1lWqfvtE21wExA9ys7mqvJpUCUzPamlsESBveh7c3FboTkekUzZlB6YOUhoWmaV8gxaMBzRFKqKBulbJ8Q==\"}'"
" http://user:usersecret@localhost:8443/api/v0/keys/myKey/actions/decrypt "
"```"
msgstr ""

#: ../nethsm/index.rst:381
msgid "Available key actions:"
msgstr ""

#: ../nethsm/index.rst:383
msgid "decrypt"
msgstr ""

#: ../nethsm/index.rst:384
msgid "pkcs1/decrypt"
msgstr ""

#: ../nethsm/index.rst:385
msgid "oaep/md5/decrypt"
msgstr ""

#: ../nethsm/index.rst:386
msgid "oaep/sha1/decrypt"
msgstr ""

#: ../nethsm/index.rst:387
msgid "oaep/sha224/decrypt"
msgstr ""

#: ../nethsm/index.rst:388
msgid "oaep/sha256/decrypt"
msgstr ""

#: ../nethsm/index.rst:389
msgid "oaep/sha384/decrypt"
msgstr ""

#: ../nethsm/index.rst:390
msgid "oaep/sha512/decrypt"
msgstr ""

#: ../nethsm/index.rst:391
msgid "pkcs1/sign"
msgstr ""

#: ../nethsm/index.rst:392
msgid "pss/sha1/sign"
msgstr ""

#: ../nethsm/index.rst:393
msgid "pss/sha224/sign"
msgstr ""

#: ../nethsm/index.rst:394
msgid "pss/sha256/sign"
msgstr ""

#: ../nethsm/index.rst:395
msgid "pss/sha384/sign"
msgstr ""

#: ../nethsm/index.rst:396
msgid "pss/sha512/sign"
msgstr ""

