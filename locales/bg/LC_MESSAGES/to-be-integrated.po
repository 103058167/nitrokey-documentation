# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-31 15:35+0100\n"
"PO-Revision-Date: 2022-01-13 15:11+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language: bg\n"
"Language-Team: Bulgarian <https://translate.nitrokey.com/projects"
"/nitrokey-documentation/documentation-to-be-integrated/bg/>\n"
"Plural-Forms: nplurals=2; plural=n != 1\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../to-be-integrated.rst:1
msgid "# pro"
msgstr "# pro"

#: ../to-be-integrated.rst:5
msgid "PKCS#11 Driver"
msgstr "Драйвер PKCS#11"

#: ../to-be-integrated.rst:7
msgid ""
"If you want to use S/MIME email encryption with Thunderbird, to use "
"TrueCrypt/VeraCrypt, certificate-based SSL authentication with Firefox, "
"PuTTY/KiTTY, OpenSSH, OpenSSL, or any other PKCS#11 compatible software, "
"you should install OpenSC."
msgstr ""
"Ако искате да използвате S/MIME криптиране на електронна поща с "
"Thunderbird, да използвате TrueCrypt/VeraCrypt, SSL удостоверяване на "
"базата на сертификат с Firefox, PuTTY/KiTTY, OpenSSH, OpenSSL или друг "
"софтуер, съвместим с PKCS#11, трябва да инсталирате OpenSC."

#: ../to-be-integrated.rst:9
msgid ""
"Note that a Nitrokey initialized with OpenSC doesn't work with "
"GnuPG/OpenPGP. But the other way around works fine. If you want to use "
"Nitrokey with both GnuPG and PKCS#11, generate the keys with GnuPG."
msgstr ""
"Имайте предвид, че Nitrokey, инициализиран с OpenSC, не работи с "
"GnuPG/OpenPGP. Но обратното работи добре. Ако искате да използвате "
"Nitrokey и с GnuPG, и с PKCS#11, генерирайте ключовете с GnuPG."

#: ../to-be-integrated.rst:11
msgid ""
"Don't use PKCS#11 in parallel with GnuPG because both may interfere and "
"unexpected issues may result. (There is another promising project scd-"
"pkcs11 in development which may overcome this limitation eventually. "
"Currently it's limit to the authentication certificate and not widely "
"tested yet.)"
msgstr ""
"Не използвайте PKCS#11 паралелно с GnuPG, тъй като двете могат да си "
"пречат и да възникнат неочаквани проблеми. (В момента се разработва друг "
"обещаващ проект scd-pkcs11, който в крайна сметка може да преодолее това "
"ограничение. В момента той се ограничава до сертификата за удостоверяване"
" и все още не е широко тестван.)"

#: ../to-be-integrated.rst:13
msgid ""
"Instructions, how to create a valid X.509 certificate with Nitrokey (1, "
"2, 3). These are general instructions how to use X.509 certificates. "
"Alternative PKCS#11 Driver:"
msgstr ""
"Инструкции как да създадете валиден сертификат X.509 с Nitrokey (1, 2, "
"3). Това са общи инструкции как да използвате сертификати X.509. "
"Алтернативен PKCS#11 драйвер:"

#: ../to-be-integrated.rst:16
msgid "The recommended PKCS#11 driver is OpenSC."
msgstr "Препоръчителният драйвер PKCS#11 е OpenSC."

#: ../to-be-integrated.rst:18
msgid "Windows Mini Driver"
msgstr "Драйвер за Windows Mini"

#: ../to-be-integrated.rst:20
msgid ""
"This Mini Driver allows to integrate Nitrokey with Window's certificate "
"store. Subsequently all applications which use this certificate storage "
"can be used with Nitrokey (e.g. Internet Explorer, Google Chrome web "
"browser, Windows Login). To install the driver, you may need to allow the"
" installation of unsigned drivers first. Aloaha"
msgstr ""
"Този мини драйвер позволява интегрирането на Nitrokey с магазина за "
"сертификати на Window'. Впоследствие всички приложения, които използват "
"това хранилище за сертификати, могат да се използват с Nitrokey (напр. "
"Internet Explorer, уеб браузър Google Chrome, Windows Login). За да "
"инсталирате драйвера, може да се наложи първо да разрешите инсталирането "
"на неподписани драйвери. Aloaha"

#: ../to-be-integrated.rst:23
msgid ""
"All applications of Aloaha are working with the Nitrokey. This includes a"
" middleware to integrate Nitrokey with other PKCS#11 based applications "
"and with Windows as well as applications to encrypt and sign PDFs and the"
" hard disk."
msgstr ""
"Всички приложения на Aloaha работят с Nitrokey. Това включва междинен "
"софтуер за интегриране на Nitrokey с други PKCS#11 базирани приложения и "
"с Windows, както и приложения за криптиране и подписване на PDF файлове и"
" на твърдия диск."

#: ../to-be-integrated.rst:25
msgid "Alternative PKCS#11 Driver:"
msgstr "Алтернативен PKCS#11 драйвер:"

#: ../to-be-integrated.rst:27
msgid ""
"The recommended PKCS#11 driver is OpenSC. Alternatively, you could use "
"Peter Koch's PKCS#11 driver which has the following limitations:"
msgstr ""
"Препоръчителният драйвер PKCS#11 е OpenSC. Като алтернатива можете да "
"използвате драйвера PKCS#11 на Peter Koch's, който има следните "
"ограничения:"

#: ../to-be-integrated.rst:29
msgid ""
"No import of existing X.509 certificates. (Instead, keys have to be "
"generated on the Nitrokey) The Linux version does not allow to generate "
"keys. Modification of the password/PIN under Linux is not possible."
msgstr ""
"Няма импортиране на съществуващи сертификати X.509. (Вместо това "
"ключовете трябва да се генерират в Nitrokey) Версията за Linux не "
"позволява генериране на ключове. Промяната на паролата/ПИН под Linux не е"
" възможна."

#: ../to-be-integrated.rst:33
msgid "p11-glue"
msgstr "p11-лепило"

#: ../to-be-integrated.rst:35
msgid ""
"P11-glue uses PKCS#11 as glue between crypto libraries and security "
"applications on the open source desktop. Articles in German"
msgstr ""
"P11-glue използва PKCS#11 като свързващо звено между криптографските "
"библиотеки и приложенията за сигурност на работния плот с отворен код. "
"Статии на немски език"

#: ../to-be-integrated.rst:38
msgid ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."
msgstr ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."

#: ../to-be-integrated.rst:44
msgid "**Q:** How can I login into Windows?"
msgstr "**В:** Как мога да вляза в Windows?"

#: ../to-be-integrated.rst:44
msgid ""
"To access Nitrokey devices read-only, download and install this Mini "
"Driver (CSP). If you are using Windows Server you may need to disable the"
" driver signature verification before being able to install the driver. "
"Note that the Mini Driver for Nitrokey Pro may not work yet for write "
"mode."
msgstr ""
"За да получите достъп до устройствата Nitrokey само за четене, изтеглете "
"и инсталирайте този мини драйвер (CSP). Ако използвате Windows Server, "
"може да се наложи да деактивирате проверката на подписа на драйвера, "
"преди да можете да инсталирате драйвера. Имайте предвид, че Mini Driver "
"за Nitrokey Pro може все още да не работи за режим на запис."

#: ../to-be-integrated.rst:46
msgid "There exist different ways to use a Nitrokey to logon on Windows:"
msgstr ""
"Съществуват различни начини за използване на Nitrokey за влизане в "
"Windows:"

#: ../to-be-integrated.rst:48
msgid ""
"Login on stand alone Windows computers based on EIDAuthenticate. "
"Alternatively install OpenSC and use Aloaha Smart Login's PKCS#11 "
"Credentials. Login on Windows domain computers using MS Active Directory "
"based OpenPGP-CSP minidriver for Nitrokey Storage 2 Nitrokey Pro 2 Login "
"on Windows domain computers using MS Active Directory based on Smart "
"Policy for other Nitrokey devices."
msgstr ""
"Влизане в самостоятелни компютри с Windows на базата на EIDAuthenticate. "
"Алтернативно инсталирайте OpenSC и използвайте Aloaha Smart Login's "
"PKCS#11 Credentials. Влизане в компютри от домейна на Windows, като се "
"използва MS Active Directory на базата на OpenPGP-CSP minidriver за "
"Nitrokey Storage 2 Nitrokey Pro 2 Влизане в компютри от домейна на "
"Windows, като се използва MS Active Directory на базата на Smart Policy "
"за други устройства Nitrokey."

#: ../to-be-integrated.rst:53
msgid "**Q:** How can I login into Linux? Linux Login with PAM"
msgstr "**В:** Как мога да вляза в Linux? Влизане в Linux с PAM"

#: ../to-be-integrated.rst:56
msgid "You have two options: pam_p11 or Poldi."
msgstr "Имате две възможности: pam_p11 или Poldi."

#: ../to-be-integrated.rst:58
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on "
"S/MIME certificates. Please have a look at the documentation for more "
"information."
msgstr ""
"Решението с pam_p11 е по-трудно за постигане и се основава на S/MIME "
"сертификати. Моля, разгледайте документацията за повече информация."

#: ../to-be-integrated.rst:60
msgid ""
"Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication with "
"RSA keys (see Troubleshooting for information on ECC keys). Besides the "
"installation of poldi (e.g. 'sudo apt-get install libpam-poldi' on "
"Ubuntu) the following steps are needed to get it working."
msgstr ""
"Poldi 0.4.1 работи безпроблемно с Nitrokey за PAM удостоверяване с RSA "
"ключове (вижте \"Отстраняване на проблеми\" за информация относно ECC "
"ключовете). Освен инсталирането на Poldi (например 'sudo apt-get install "
"libpam-poldi' на Ubuntu) са необходими следните стъпки, за да заработи."

#: ../to-be-integrated.rst:62
msgid ""
"It is necessary to already have keys generated on the Nitrokey, as the "
"authentication key is used by PAM."
msgstr ""
"Необходимо е вече да имате генерирани ключове в Nitrokey, тъй като ключът"
" за удостоверяване се използва от PAM."

#: ../to-be-integrated.rst:64
msgid ""
"At first you need to find out the \"Application ID\" of your Nitrokey. "
"You can use \"gpg --card-status | grep Application\" to find out what's "
"yours. It looks like 'D00600012401020000000000xxxxxxxx' or similiar. Now "
"you have to add a line to /etc/poldi/localdb/users which contains the "
"following information"
msgstr ""
"Първо трябва да разберете \"Идентификатора на приложението\" на вашия "
"Nitrokey. Можете да използвате \"gpg --card-status | grep Application\", "
"за да разберете какъв е вашият. Изглежда като "
"'D00600012401020000000000xxxxxxxx' или подобен. Сега трябва да добавите "
"ред в /etc/poldi/localdb/users, който да съдържа следната информация"

#: ../to-be-integrated.rst:66
msgid "<YourApplicationID> <YourUsername>"
msgstr "<YourApplicationID> <YourUsername>"

#: ../to-be-integrated.rst:68
msgid ""
"This could look like 'D00600012401020000000000xxxxxxxx nitrokeyuser'. Now"
" dump the public key from the Nitrokey into poldi local db:"
msgstr ""
"Това може да изглежда като 'D00600012401020000000000xxxxxx nitrokeyuser'."
" Сега изхвърлете публичния ключ от Nitrokey в локалната db на poldi:"

#: ../to-be-integrated.rst:70
msgid ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye'"
msgstr ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye'"

#: ../to-be-integrated.rst:72
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick!"
msgstr ""
"Моля, имайте предвид, че трябва да въведете своя идентификационен номер "
"на заявлението в горния ред заедно с този на вашия стик!"

#: ../to-be-integrated.rst:74
msgid ""
"Then you have to configure PAM. Just add \"auth sufficient pam_poldi.so\""
" to pam configuration files according to your needs:"
msgstr ""
"След това трябва да конфигурирате PAM. Просто добавете \"auth sufficient "
"pam_poldi.so\" към конфигурационните файлове на pam в съответствие с "
"вашите нужди:"

#: ../to-be-integrated.rst:76
msgid ""
"/etc/pam.d/common-auth for graphical user login /etc/pam.d/login for "
"console login /etc/pam.d/sudo for sudo authentication /etc/pam.d/gnome-"
"screensaver for login back from a locked screen etc."
msgstr ""
"/etc/pam.d/common-auth за графично потребителско влизане /etc/pam.d/login"
" за конзолно влизане /etc/pam.d/sudo за sudo удостоверяване /etc/pam.d"
"/gnome-screensaver за обратно влизане от заключен екран и т.н."

#: ../to-be-integrated.rst:82
msgid ""
"Note: Pam is dangerous to play around with, so make sure you have a way "
"of accessing the machine if you break authentication completely. Remember"
" that booting into rescue mode from Grub requires a root password, so "
"keep that or a live CD which can read your filesystems to hand."
msgstr ""
"Забележка: Пам е опасен за игра, така че се уверете, че имате начин за "
"достъп до машината, ако нарушите автентикацията напълно. Не забравяйте, "
"че зареждането в спасителен режим от Grub изисква парола за root, така че"
" дръжте под ръка тази парола или компактдиск, който може да чете "
"файловите ви системи."

#: ../to-be-integrated.rst:84
msgid ""
"Here you find further instructions (in German, partially outdated). "
"Troubleshooting"
msgstr ""
"Тук ще намерите допълнителни инструкции (на немски език, частично "
"неактуални). Отстраняване на неизправности"

#: ../to-be-integrated.rst:87
msgid ""
"If you get an error similar to 'ERR 100663414 Invalid ID <SCD>' you "
"should try instead"
msgstr ""
"Ако получите грешка, подобна на 'ERR 100663414 Invalid ID <SCD>', трябва "
"да опитате вместо това"

#: ../to-be-integrated.rst:89
msgid ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"
msgstr ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"

#: ../to-be-integrated.rst:91
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick! ECC Keys Unfortunately, poldi has no "
"support for ECC keys yet. But there is a patch for ECC keys used with "
"Nitrokey Start. This is already included in the master branch of the "
"poldi development repository and thus will be released in a newer version"
" eventually. In the meantime the only option is to build poldi from "
"source."
msgstr ""
"Моля, имайте предвид, че трябва да въведете своя идентификационен номер "
"на заявлението в горния ред заедно с този на вашия стик! ECC ключове За "
"съжаление, poldi все още не поддържа ECC ключове. Но има пач за ECC "
"ключове, използвани с Nitrokey Start. Той вече е включен в главния клон "
"на хранилището за разработка на poldi и по този начин евентуално ще бъде "
"пуснат в по-нова версия. Междувременно единствената възможност е да "
"изградите poldi от изходния код."

#: ../to-be-integrated.rst:97
msgid "**Q:** How can I login with One Time Passwords?"
msgstr "**В:** Как мога да вляза в системата с еднократни пароли?"

#: ../to-be-integrated.rst:97
msgid ""
"One-Time-Passwords (OTP) are used for secure login to websites and local "
"applications."
msgstr ""
"Еднократните пароли (One-Time-Passwords - OTP) се използват за сигурно "
"влизане в уебсайтове и местни приложения."

#: ../to-be-integrated.rst:99
msgid "Two OTP modes exist:"
msgstr "Съществуват два режима на OTP:"

#: ../to-be-integrated.rst:101
msgid ""
"Time-based One-time Passwords (TOTP) is widely used for websites. If "
"unsure, assume you are using this mode. HMAC-based One-time Passwords "
"(HOTP) is used for local applications and computer logins."
msgstr ""
"Еднократните пароли, базирани на времето (TOTP), се използват широко за "
"уебсайтове. Ако не сте сигурни, приемете, че използвате този режим. "
"HMAC-базирани еднократни пароли (HOTP) се използва за локални приложения "
"и компютърни входове."

#: ../to-be-integrated.rst:104
msgid ""
"To use One-Time-Passwords with your Nitrokey Pro or Nitrokey Storage, you"
" need to download and install the latest Nitrokey App. Time-based One-"
"time Passwords - TOTP"
msgstr ""
"За да използвате еднократни пароли с вашия Nitrokey Pro или Nitrokey "
"Storage, трябва да изтеглите и инсталирате най-новото приложение "
"Nitrokey. Еднократни пароли, базирани на времето - TOTP"

#: ../to-be-integrated.rst:107
msgid ""
"For login to a Google account. For login to a Microsoft account. For "
"login to a Nextcloud account. Generic instructions for all other "
"services."
msgstr ""
"За влизане в акаунт в Google. За влизане в акаунт на Microsoft. За вход в"
" акаунт в Nextcloud. Общи инструкции за всички други услуги."

#: ../to-be-integrated.rst:112
msgid "**Q:** How can I use the Nitrokey Pro with Android?"
msgstr "**В:** Как мога да използвам Nitrokey Pro с Android?"

#: ../to-be-integrated.rst:114
msgid ""
"It is possible to use the Nitrokey on an Android devices in combination "
"with OpenKeychain. This enables one to encrypt/decrypt E-Mails or files "
"via OpenPGP."
msgstr ""
"Възможно е Nitrokey да се използва на устройства с Android в комбинация с"
" OpenKeychain. Това дава възможност за криптиране/декриптиране на "
"електронни писма или файлове чрез OpenPGP."

#: ../to-be-integrated.rst:116
msgid ""
"Cotech provides Android software with commercial support. Please have a "
"look there, if you like. The following instructions are based on "
"OpenKeychain."
msgstr ""
"Cotech предоставя софтуер за Android с търговска поддръжка. Ако искате, "
"погледнете там. Следващите инструкции са базирани на OpenKeychain."

#: ../to-be-integrated.rst:118
msgid ""
"Tested with Nitrokey Start, Pro and Storage in combination with Android "
"7.1, OpenKeychain 4.5 and K9Mail 5.207. Prerequisites"
msgstr ""
"Тествано с Nitrokey Start, Pro и Storage в комбинация с Android 7.1, "
"OpenKeychain 4.5 и K9Mail 5.207. Предварителни условия"

#: ../to-be-integrated.rst:121
msgid ""
"Android phone which is capable of USB OTG USB OTG cable to connect the "
"Nitrokey with your phone OpenKeychain installed on Device Public key "
"saved on the device or uploaded on a keyserver"
msgstr ""
"Телефон с Android, който може да използва USB OTG USB OTG кабел за "
"свързване на Nitrokey с вашия телефон OpenKeychain, инсталиран на "
"устройството Публичен ключ, записан на устройството или качен на "
"ключарски сървър"

#: ../to-be-integrated.rst:126
msgid "First steps"
msgstr "Първи стъпки"

#: ../to-be-integrated.rst:128
msgid ""
"To import the keys of the Nitrokey you should at first start the "
"OpenKeychain app. Then insert the Nitrokey with the USB OTG cable. "
"OpenKeychain starts a dialog to use the Nitrokey (you may have to accept "
"the usage of the key with OpenKeychain first). Now you can choose between"
" looking for public key on a keyserver or choosing the public key from "
"storage. After the public key got imported you have to tap on 'connect "
"key' to import a reference to the private key of the Nitrokey. That’s "
"basically it."
msgstr ""
"За да импортирате ключовете на Nitrokey, първо трябва да стартирате "
"приложението OpenKeychain. След това поставете Nitrokey с помощта на USB "
"OTG кабела. OpenKeychain стартира диалогов прозорец за използване на "
"Nitrokey (може да се наложи първо да приемете използването на ключа с "
"OpenKeychain). Сега можете да избирате между търсене на публичен ключ на "
"ключовия сървър или избор на публичен ключ от хранилището. След като "
"публичният ключ бъде импортиран, трябва да докоснете 'connect key', за да"
" импортирате препратка към частния ключ на Nitrokey. В общи линии това е "
"всичко."

#: ../to-be-integrated.rst:130
msgid ""
"In the case that no there are no keys on the Nitrokey yet, OpenKeychain "
"will help with the creation of a new key pair instead. Usage"
msgstr ""
"В случай че в Nitrokey все още няма ключове, OpenKeychain ще ви помогне "
"да създадете нова двойка ключове. Употреба"

#: ../to-be-integrated.rst:133
msgid ""
"You can use all functions of OpenKeychain and Apps which make use of "
"OpenKeychain. Therefore you can just encrypt/decrypt messages or files by"
" hand using the app directly or for example you combine K9Mail with "
"OpenKeychain to decrypt your mails automatically. It is important to "
"choose the right key in the K9Mail account settings first."
msgstr ""
"Можете да използвате всички функции на OpenKeychain и приложенията, които"
" използват OpenKeychain. Следователно можете просто да "
"криптирате/декриптирате съобщенията или файловете на ръка, като "
"използвате директно приложението, или например да комбинирате K9Mail с "
"OpenKeychain, за да декриптирате писмата си автоматично. Важно е първо да"
" изберете правилния ключ в настройките на акаунта в K9Mail."

#: ../to-be-integrated.rst:135
msgid ""
"Note that you may have to enable the on-screen keyboard in the android "
"settings to type the PIN as the system recognizes the Nitrokey as a "
"physical keyboard and therefore tries to hide the on-screen keyboard. Go "
"to 'Language and Input' > 'Current Keyboard' > 'Hardware show input "
"method'."
msgstr ""
"Имайте предвид, че може да се наложи да активирате екранната клавиатура в"
" настройките на Android, за да въведете ПИН кода, тъй като системата "
"разпознава Nitrokey като физическа клавиатура и затова се опитва да скрие"
" екранната клавиатура. Отидете на 'Language and Input' > 'Current "
"Keyboard' > 'Hardware show input method'."

#: ../to-be-integrated.rst:138
msgid "**Q:** How can I use the Nitrokey Pro with Iphone?"
msgstr "**В:** За какво мога да използвам Nitrokey?"

#: ../to-be-integrated.rst:139
msgid "Currently it is not possible"
msgstr "Понастоящем не е възможно"

#: ../to-be-integrated.rst:141
msgid "**Q:** How can I use the Nitrokey Pro with Ubuntu Phone?"
msgstr "**В:** Как мога да използвам Nitrokey Pro с Ubuntu Phone?"

#: ../to-be-integrated.rst:141
msgid ""
"There are instructions on gnupg.org about how to use a OpenPGP Card on a "
"UbuntuPhone which should work for the Nitrokey Start, Pro and Storage."
msgstr ""
"В gnupg.org има инструкции за това как да използвате OpenPGP карта на "
"UbuntuPhone, която би трябвало да работи за Nitrokey Start, Pro и "
"Storage."

#: ../to-be-integrated.rst:143
msgid ""
"**Q:** How can I do Email encryption? There are two widely used standards"
" for email encryption. While OpenPGP/GnuPG is popular among individuals, "
"S/MIME/X.509 is mostly used by enterprises. If you are in doubt which one"
" to choose, you should use OpenPGP."
msgstr ""
"Съществуват два широко използвани стандарта за криптиране на имейли. "
"Докато OpenPGP/GnuPG е популярен сред частните лица, S/MIME/x.509 се "
"използва предимно от предприятията. Ако се съмнявате кой да изберете, "
"трябва да използвате OpenPGP."

#: ../to-be-integrated.rst:146
msgid ""
"instructions for using the OpenPGP standard with the Nitrokey "
"instructions for using S/MIME with the Nitrokey. Note: SMIME certificates"
" can be purchased cheaply from CERTUM and SSLTrust."
msgstr ""
"инструкции за използване на стандарта OpenPGP с Nitrokey инструкции за "
"използване на S/MIME с Nitrokey. Забележка: SMIME сертификати могат да "
"бъдат закупени евтино от CERTUM и SSLTrust."

#: ../to-be-integrated.rst:149
msgid ""
"Please note, that it is currently advised to use either OpenPGP or S/MIME"
" encryption, but not both with the Nitrokey."
msgstr ""
"Моля, обърнете внимание, че понастоящем се препоръчва да използвате "
"OpenPGP или S/MIME криптиране, но не и двете с Nitrokey."

#: ../to-be-integrated.rst:151
msgid "To use a Nitrokey Storage with Thunderbird 78+, you can try this tutorial."
msgstr ""
"За да използвате Nitrokey Storage с Thunderbird 78+, можете да опитате "
"този урок."

#: ../to-be-integrated.rst:153
msgid "**Q:** How can I do Hard Disk Encryption?"
msgstr "**В:** Как мога да направя криптиране на твърдия диск?"

#: ../to-be-integrated.rst:156
msgid ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (formerly "
"TrueCrypt)"
msgstr ""
"За: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (по-рано "
"TrueCrypt)"

#: ../to-be-integrated.rst:159
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey "
"Storage or Pro:"
msgstr ""
"VeraCrypt е безплатен софтуер за криптиране на дискове с отворен код за "
"Windows, macOS и GNU/Linux. Той е наследник на TrueCrypt и затова се "
"препоръчва, въпреки че следващите инструкции трябва да се прилагат и за "
"TrueCrypt. Следвайте тези стъпки, за да използвате програмата с Nitrokey "
"Storage или Pro:"

#: ../to-be-integrated.rst:161 ../to-be-integrated.rst:673
msgid ""
"Install OpenSC Choose the library in VeraCrypt under "
"Settings>Preferences>Security Token (location depends on system, e.g. "
"/usr/lib/opensc). Generate a 64 Byte key file via Tools>Keyfile "
"Generator. Now you should be able to import the generated key file via "
"Tools>Manage Security Token Keyfiles. You should choose the first Slot "
"([0] User PIN). The keyfile is then stored on the Nitrokey as 'Private "
"Data Object 1' (PrivDO1). After this you should wipe the original keyfile"
" on your Computer securely! Now you can use VeraCrypt with the Nitrokey: "
"Create a container, choose the keyfile on the device as an alternative to"
" a password."
msgstr ""
"Инсталиране на OpenSC Изберете библиотеката във VeraCrypt под "
"Settings>Preferences>Security Token (местоположението зависи от "
"системата, например /usr/lib/opensc). Генерирайте 64 байтов ключов файл "
"чрез Tools>Keyfile Generator (Инструменти>Генератор на ключови файлове). "
"Сега трябва да можете да импортирате генерирания ключов файл чрез "
"Tools>Manage Security Token Keyfiles (Инструменти>Управление на ключови "
"файлове с токени за сигурност). Трябва да изберете първия слот ([0] ПИН "
"на потребителя). След това ключовият файл се съхранява в Nitrokey като "
"'Private Data Object 1' (PrivDO1). След това трябва да изтриете сигурно "
"оригиналния ключов файл на Вашия Компютър! Сега можете да използвате "
"VeraCrypt с Nitrokey: Създайте контейнер, изберете ключовия файл на "
"устройството като алтернатива на паролата."

#: ../to-be-integrated.rst:168
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the PIN."
msgstr ""
"Съображения за сигурност: Моля, имайте предвид, че VeraCrypt не използва "
"пълната сигурност, която Nitrokey (и смарт картите като цяло) предлагат. "
"Вместо това тя съхранява ключов файл на Nitrokey, който теоретично може "
"да бъде откраднат от компютърен вирус, след като потребителят въведе ПИН "
"кода."

#: ../to-be-integrated.rst:170
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation."
msgstr ""
"Забележка: Aloaha Crypt е базирана на TrueCrypt/VeraCrypt, но без "
"описаното ограничение на сигурността."

#: ../to-be-integrated.rst:173
msgid ""
"Hard Disk Encryption on Linux, Based on LUKS/dm-crypt Here are excellent "
"instructions how to use Nitrokey to encrypt your hard disk under Linux "
"with LUKS/dm-crypt. Other instruction."
msgstr ""
"Криптиране на твърдия диск под Linux, базирано на LUKS/dm-crypt Тук са "
"дадени отлични инструкции как да използвате Nitrokey за криптиране на "
"твърдия диск под Linux с LUKS/dm-crypt. Други инструкции."

#: ../to-be-integrated.rst:176
msgid ""
"Purism has created a simple script to add the Nitrokey/LibremKey as a way"
" to unlock LUKS partitions (not tested by Nitrokey yet)."
msgstr ""
"Purism е създал прост скрипт за добавяне на Nitrokey/LibremKey като начин"
" за отключване на LUKS дялове (все още не е тестван от Nitrokey)."

#: ../to-be-integrated.rst:178
msgid ""
"This project aims to ease the use of LUKS with the Nitrokey Pro or "
"Storage based on the Password Safe (not tested by Nitrokey yet). A "
"description on how to use it on Gentoo can be found here."
msgstr ""
"Този проект има за цел да улесни използването на LUKS с Nitrokey Pro или "
"хранилище, базирано на Password Safe (все още не е тествано от Nitrokey)."
" Описание как да го използвате в Gentoo можете да намерите тук."

#: ../to-be-integrated.rst:180
msgid ""
"For Arch Linux, see initramfs-scencrypt. Storage Encryption on Linux, "
"Based on EncFS"
msgstr ""
"За Arch Linux вижте initramfs-scencrypt. Криптиране на хранилища в Linux,"
" базирано на EncFS"

#: ../to-be-integrated.rst:183
msgid ""
"Prerequisite: Please ensure that you installed the device driver, changed"
" the default PINs and generated or imported keys with GnuPG."
msgstr ""
"Предпоставка: Моля, уверете се, че сте инсталирали драйвера на "
"устройството, променили сте ПИН-кодовете по подразбиране и сте генерирали"
" или импортирали ключове с GnuPG."

#: ../to-be-integrated.rst:185
msgid ""
"An easy to use encrypted file system is EncFS, which is based on FUSE. "
"You may follow these steps to use it with very long passwords and "
"Nitrokey:"
msgstr ""
"Лесна за използване криптирана файлова система е EncFS, която е базирана "
"на FUSE. Можете да следвате тези стъпки, за да я използвате с много дълги"
" пароли и Nitrokey:"

#: ../to-be-integrated.rst:187
msgid "Initialization"
msgstr "Иницииране"

#: ../to-be-integrated.rst:189
msgid ""
"# Create a key file with random data: $ dd bs=64 count=1 if=/dev/urandom "
"of=keyfile"
msgstr ""
"# Създаване на ключов файл със случайни данни: $ dd bs=64 count=1 "
"if=/dev/urandom of=keyfile"

#: ../to-be-integrated.rst:192
msgid ""
"# Encrypt the key file and use the User-ID of your Nitrokey $ gpg "
"--encrypt keyfile"
msgstr ""
"# Криптирайте ключовия файл и използвайте идентификатора на потребителя "
"на вашия Nitrokey $ gpg --encrypt keyfile"

#: ../to-be-integrated.rst:195
msgid ""
"# Remove the key file in clear text: $ rm keyfile # you may want to use "
"'wipe' or 'shred' to securely delete the keyfile"
msgstr ""
"# Премахване на ключовия файл в чист текст: $ rm keyfile # може да искате"
" да използвате 'wipe' или 'shred' за сигурно изтриване на ключовия файл"

#: ../to-be-integrated.rst:198
msgid "# Create mount point: $ mkdir ~/.cryptdir ~/cryptdir"
msgstr "# Създаване на точка за монтиране: $ mkdir ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:201
msgid ""
"# Create the actual encryption folder $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"
msgstr ""
"# Създаване на действителната папка за криптиране $ gpg -d keyfile.gpg | "
"encfs -S ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:204
msgid ""
"# There may appears an error message about missing permission of "
"fusermount # This message can be ignored"
msgstr ""
"# Възможно е да се появи съобщение за грешка относно липсващо разрешение "
"за fusermount # Това съобщение може да бъде пренебрегнато"

#: ../to-be-integrated.rst:207
msgid "# Unmount the new file system: $ fusermount -u ~/cryptdir"
msgstr "# Разглобяване на новата файлова система: $ fusermount -u ~/cryptdir"

#: ../to-be-integrated.rst:210
msgid "Usage"
msgstr "Употреба"

#: ../to-be-integrated.rst:212
msgid ""
"# Mount encrypted file system and enter PIN of Nitrokey: $ gpg -d "
"keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"
msgstr ""
"# Монтирайте криптираната файлова система и въведете PIN кода на "
"Nitrokey: $ gpg -d keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:215
msgid "# After usage, unmount the file system: $ fusermount -u ~/cryptdir"
msgstr ""
"# След използване демонтирайте файловата система: $ fusermount -u "
"~/cryptdir"

#: ../to-be-integrated.rst:219
msgid "Storage Encryption on Linux, Based on ECryptFS"
msgstr "Криптиране на хранилища под Linux, базирано на ECryptFS"

#: ../to-be-integrated.rst:221
msgid ""
"eCryptfs is a file based transparent encryption file system for Linux "
"which can be used with Nitrokey through a PKCS#11 driver. See these "
"instructions. Alternatively, try ESOSI or follow these steps using OpenSC"
" and OpenVPN:"
msgstr ""
"eCryptfs е файлово базирана файлова система за прозрачно криптиране за "
"Linux, която може да се използва с Nitrokey чрез PKCS#11 драйвер. Вижте "
"тези инструкции. Като алтернатива опитайте с ESOSI или следвайте тези "
"стъпки, като използвате OpenSC и OpenVPN:"

#: ../to-be-integrated.rst:223
msgid "Warning: This will delete existing keys on your Nitrokey!"
msgstr ""
"Предупреждение: Това ще доведе до изтриване на съществуващите ключове на "
"вашия Nitrokey!"

#: ../to-be-integrated.rst:225
msgid ""
"# Import the certificate and key to the Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"
msgstr ""
"# Импортиране на сертификата и ключа в Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"

#: ../to-be-integrated.rst:228
msgid "# Create the file ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"
msgstr "# Създаване на файла ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"

#: ../to-be-integrated.rst:231
msgid ""
"# Enter this content: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids path to opensc-pkcs11 module "
"Certificate"
msgstr ""
"# Въведете това съдържание: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids път до модула opensc-pkcs11 "
"Сертификат"

#: ../to-be-integrated.rst:235
msgid ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Serial: 066E04 Serialized id: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"
msgstr ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Серийно: 066E04 Сериализиран идентификатор: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"

#: ../to-be-integrated.rst:239
msgid "# Copy the serialized id for later usage: $ ecryptfs-manager"
msgstr ""
"# Копирайте сериализирания идентификатор за по-късна употреба: $ "
"ecryptfs-manager"

#: ../to-be-integrated.rst:242
msgid ""
"# This will show list option. Choose option \"Add public key to keyring\""
" # Choose pkcs11-helper # Enter the serialized ID of step 3 to PKCS#11 "
"ID."
msgstr ""
"# Това ще покаже опция за списък. Изберете опцията \"Добавяне на публичен"
" ключ в ключодържател\" # Изберете pkcs11-helper # Въведете "
"сериализирания идентификатор от стъпка 3 в PKCS#11 ID."

#: ../to-be-integrated.rst:250
msgid "**Q:** How can I sign and encrypt Files and PDFs? GnuPG"
msgstr "**В:** Как мога да подписвам и криптирам файлове и PDF файлове? GnuPG"

#: ../to-be-integrated.rst:253
msgid ""
"Use the gpgsm tool to sign, verify, encrypt and decrypt files. Use a "
"signature key on a Nitrokey to sign documents using Acrobat Reader, Open "
"Office / Libre Office or any other PDF reader supporting electronic "
"signatures."
msgstr ""
"Използвайте инструмента gpgsm за подписване, проверка, криптиране и "
"декриптиране на файлове. Използвайте ключа за подпис на Nitrokey, за да "
"подписвате документи с помощта на Acrobat Reader, Open Office / Libre "
"Office или всеки друг PDF четец, поддържащ електронни подписи."

#: ../to-be-integrated.rst:256
msgid "GPA - GNU Privacy Assistant"
msgstr "Настройка с Gnu Privacy Assistant (GPA)"

#: ../to-be-integrated.rst:258
msgid ""
"The Gnu Privacy Assistant (GPA) recognizes Nitrokey out-of-the-box, has "
"various features to manage keys and cards. It also allows file operations"
" such as file encryption, decryption, signing."
msgstr ""
"Помощникът за поверителност на Gnu (GPA) разпознава Nitrokey в готов вид "
"и разполага с различни функции за управление на ключове и карти. Той също"
" така позволява операции с файлове, като криптиране, декриптиране и "
"подписване на файлове."

#: ../to-be-integrated.rst:261
msgid "SOPS - Secrect OPerationS"
msgstr "SOPS - Secrect OPerationS"

#: ../to-be-integrated.rst:263
msgid ""
"SOPS is an editor of encrypted files that supports YAML, JSON and BINARY "
"formats and encrypts with AWS KMS and PGP. You can find it on github."
msgstr ""
"SOPS е редактор на криптирани файлове, който поддържа формати YAML, JSON "
"и BINARY и криптира с AWS KMS и PGP. Можете да го намерите в github."

#: ../to-be-integrated.rst:266
msgid "Aloaha"
msgstr "Aloaha"

#: ../to-be-integrated.rst:268
msgid ""
"Aloaha provides several applications to encrypt and sign PDFs. All of "
"them, which allow smart card integration, work with Nitrokey. You can for"
" example import key and certificate by using OpenSC or any other "
"appropriate variant. After this Windows recognize your certificate and "
"you can sign the document as it is shown in the screencast below."
msgstr ""
"Aloaha предоставя няколко приложения за криптиране и подписване на PDF "
"файлове. Всички те, които позволяват интегриране на смарт карти, работят "
"с Nitrokey. Можете например да импортирате ключ и сертификат, като "
"използвате OpenSC или друг подходящ вариант. След това Windows разпознава"
" сертификата ви и можете да подпишете документа, както е показано в "
"скрийнкаста по-долу."

#: ../to-be-integrated.rst:270
msgid "GpgEx for Windows Explorer"
msgstr "GpgEx за Windows Explorer"

#: ../to-be-integrated.rst:272
msgid ""
"GpgEx integrates smoothly into Windows Explorer to allow encryption and "
"decryption of files. Install it as part of the GPG4Win package."
msgstr ""
"GpgEx се интегрира безпроблемно в Проучвателя на Windows, за да позволява"
" криптиране и декриптиране на файлове. Инсталирайте го като част от "
"пакета GPG4Win."

#: ../to-be-integrated.rst:275
msgid ""
"Before you start to use any of these applications with your Nitrokey, "
"please ensure that you installed the device driver and initialized the "
"device (e.g. generated keys)."
msgstr ""
"Преди да започнете да използвате някое от тези приложения с вашия "
"Nitrokey, моля, уверете се, че сте инсталирали драйвера на устройството и"
" сте инициализирали устройството (напр. генерирали сте ключове)."

#: ../to-be-integrated.rst:277
msgid ""
"Certificate-based login with TLS and web browser is a very secure "
"authentication method but it is only used rarely. If you are unsure what "
"this means, this approach is most likely not relevant for you."
msgstr ""
"Входът, базиран на сертификат, с TLS и уеб браузър е много сигурен метод "
"за удостоверяване, но се използва рядко. Ако не сте сигурни какво "
"означава това, този подход най-вероятно не е подходящ за вас."

#: ../to-be-integrated.rst:279
msgid ""
"This page refers to websites and applications which support certificate "
"authentication, so that users don't need to enter username and password "
"when login. For instance WebID is a great protocol which makes use of it."
" Certificate authentication can be used easily with the Nitrokey and also"
" with any other certificate storages. Mozilla Firefox"
msgstr ""
"Тази страница се отнася за уебсайтове и приложения, които поддържат "
"удостоверяване със сертификат, така че на потребителите не им се налага "
"да въвеждат потребителско име и парола при влизане. Например WebID е "
"чудесен протокол, който го използва. Удостоверяването със сертификат може"
" да се използва лесно с Nitrokey, а също и с всякакви други хранилища за "
"сертификати. Mozilla Firefox"

#: ../to-be-integrated.rst:282
msgid "You need to install the PKCS#11 driver:"
msgstr "Трябва да инсталирате драйвера PKCS#11:"

#: ../to-be-integrated.rst:284
msgid ""
"Download the PKCS11 driver and store it on your local hard disk or "
"install OpenSC. Open the Preferences in Firefox and go to  Privacy & "
"Security -> Security (just a headline) -> Button 'Security Devices...' "
"Press the button Load. Enter \"Nitrokey\" as the Module Name and press "
"the Browse button to select the previously downloaded PKCS11 driver file."
" Confirm and close all dialogs."
msgstr ""
"Изтеглете драйвера PKCS11 и го запазете на местния си твърд диск или "
"инсталирайте OpenSC. Отворете Предпочитанията във Firefox и отидете на "
"Privacy & Security -> Security (само заглавие) -> Бутон 'Security "
"Devices...' Натиснете бутона Load. Въведете \"Nitrokey\" като име на "
"модула и натиснете бутона Browse (Преглед), за да изберете предварително "
"изтегления файл с PKCS11 драйвер. Потвърдете и затворете всички диалогови"
" прозорци."

#: ../to-be-integrated.rst:288
msgid ""
"Now you are ready to access websites which provide certificate "
"authentication. Internet Explorer"
msgstr ""
"Вече сте готови за достъп до уебсайтове, които предоставят удостоверяване"
" със сертификат. Internet Explorer"

#: ../to-be-integrated.rst:291
msgid ""
"Install this Mini Driver for Windows. Now you are ready to access "
"websites which provide certificate authentication. Google Chrome"
msgstr ""
"Инсталирайте този Mini Driver за Windows. Вече сте готови за достъп до "
"уебсайтове, които предоставят удостоверяване със сертификат. Google "
"Chrome"

#: ../to-be-integrated.rst:294
msgid ""
"Under Windows, install this Mini Driver. Under Linux, follow these "
"instructions. Now you are ready to access websites which provide "
"certificate authentication. WebID"
msgstr ""
"Под Windows инсталирайте този Mini Driver. Под Linux следвайте тези "
"инструкции. Вече сте готови за достъп до уебсайтове, които предоставят "
"удостоверяване със сертификат. WebID"

#: ../to-be-integrated.rst:297
msgid ""
"WebID is a technology to enable secure and federated social websites. "
"Here is a video (WebM, Ogg video, H.264) which demonstrates how to use "
"Nitrokey to create a WebID profile and subsequently to use it in an "
"Internet cafe in Singapore. Nitrokey protects against computer viruses "
"which might otherwise steel the username and password. Websites Web Site"
"        Category CAcert  community-based Certificate Authority "
"PrivaSphere     Secure messaging HM Revenue & Customs    UK's tax "
"administration Software Application     Category Roundcube (plugin)      "
"Webmail Drupal (WebID, Certificate login)       Content management system"
" Media Wiki (plugin)     Wiki Joomla!         Content management system "
"Apache + mod_ssl        Web server OpenSSH         SSH (remote secure "
"shell) client and server Wordpress (plugin)      Blog and CMS Tivoli  "
"System management framework Globalscape EFT         managed file transfer"
" (MFT) Oracle Identity Manager         I&AM Fuse Source     Middleware "
"Liferay         Blog FusionForge     web-based project-management and "
"collaboration software"
msgstr ""
"WebID е технология, която позволява създаването на сигурни и обединени "
"социални уебсайтове. Ето един видеоклип (WebM, Ogg видео, H.264), който "
"демонстрира как да използвате Nitrokey за създаване на WebID профил и как"
" да го използвате в интернет кафене в Сингапур. Nitrokey предпазва от "
"компютърни вируси, които в противен случай биха могли да разграбят "
"потребителското име и паролата. Уебсайтове Категория на уебсайтовете "
"CAcert общностен сертификационен орган PrivaSphere Сигурен обмен на "
"съобщения HM Revenue & Customs Данъчна администрация на Обединеното "
"кралство Категория на софтуерните приложения Roundcube (плъгин) Webmail "
"Drupal (WebID, вход със сертификат) Система за управление на съдържанието"
" Media Wiki (плъгин) Wiki Joomla!         Система за управление на "
"съдържанието Apache + mod_ssl Уеб сървър OpenSSH SSH (отдалечена защитена"
" обвивка) клиент и сървър Wordpress (плъгин) Блог и CMS Tivoli Рамка за "
"управление на системата Globalscape EFT управляван трансфер на файлове "
"(MFT) Oracle Identity Manager I&AM Fuse Source Middleware Liferay Blog "
"FusionForge уеб базиран софтуер за управление на проекти и сътрудничество"

#: ../to-be-integrated.rst:319
msgid ""
"This website is a good read about strong authentication mechanisms, why "
"client certificate authentication isn't popular and better alternatives "
"at the horizon."
msgstr ""
"На този уебсайт можете да прочетете за механизмите за силно "
"удостоверяване, защо удостоверяването с клиентски сертификат не е "
"популярно и какви по-добри алтернативи се появяват на хоризонта."

#: ../to-be-integrated.rst:321
msgid "**Q:** How can I use Enterprise Authentication?"
msgstr "**В:** Как мога да използвам удостоверяване на предприятието?"

#: ../to-be-integrated.rst:323
msgid ""
"LinOTP privacyIDEA RCDevs OpenOTP Usage of Nitrokey HSM as a secure key "
"store for the Forgerock OpenDJ server and Forgerock Identity Gateway"
msgstr ""
"LinOTP privacyIDEA RCDevs OpenOTP Използване на Nitrokey HSM като сигурно"
" хранилище на ключове за сървъра Forgerock OpenDJ и Forgerock Identity "
"Gateway"

#: ../to-be-integrated.rst:329
msgid ""
"**Q:** How can I do SSH for Server Administration on Windows? The "
"Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"**В:** Как мога да използвам SSH за администриране на сървъри в Windows? "
"В Nitrokey вече трябва да са инсталирани PGP ключове и местният GnuPG "
"ключодържател трябва да знае за ключовете, т.е. в системата трябва да е "
"инсталиран GPG4Win (необходимо е само основното приложение GnuPG). Освен "
"това трябва да се инсталира PuTTY. Подготовка на клиента"

#: ../to-be-integrated.rst:333 ../to-be-integrated.rst:705
msgid ""
"There are two steps needed to make PuTTY work. At first we need to enable"
" PuTTY support of GnuPG. To achieve this we use the following command:"
msgstr ""
"Необходими са две стъпки, за да заработи PuTTY. Първо трябва да "
"активираме поддръжката на GnuPG в PuTTY. За да постигнем това, използваме"
" следната команда:"

#: ../to-be-integrated.rst:335 ../to-be-integrated.rst:707
msgid "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"
msgstr "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"

#: ../to-be-integrated.rst:337 ../to-be-integrated.rst:709
msgid ""
"Now we want to make sure, that the gpg-agent is starting automatically in"
" the background (you can start it manually with the command below, if you"
" prefer). We create a shortcut to gpg-connect-agent.exe. Press and hold "
"the Windows-key and press 'R'. Type in \"shell:startup\" in the opening "
"textfield (see picture below). The Windows-Explorer opens and you right-"
"click on an empty space and choose \"New\" -> \"Shortcut\". Now you "
"should insert the actual command and proceed:"
msgstr ""
"Сега искаме да се уверим, че gpg-агентът се стартира автоматично във "
"фонов режим (ако предпочитате, можете да го стартирате ръчно с командата "
"по-долу). Създаваме пряк път към gpg-connect-agent.exe. Натиснете и "
"задръжте клавиша Windows и натиснете 'R'. Въведете \"shell:startup\" в "
"отварящото се текстово поле (вижте снимката по-долу). Отваря се Windows-"
"Explorer и щракнете с десния бутон на мишката върху празно място и "
"изберете \"New\" -> \"Shortcut\". Сега трябва да вмъкнете действителната "
"команда и да продължите:"

#: ../to-be-integrated.rst:339 ../to-be-integrated.rst:711
msgid "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"
msgstr "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"

#: ../to-be-integrated.rst:343 ../to-be-integrated.rst:715
msgid ""
"Reboot your system to make sure the shortcut works. If everything is "
"alright you now can use PuTTY as usual and PuTTY will make use of the "
"Nitrokey automatically. Preparation for the server"
msgstr ""
"Рестартирайте системата, за да се уверите, че прекият път работи. Ако "
"всичко е наред, сега можете да използвате PuTTY както обикновено и PuTTY "
"ще използва Nitrokey автоматично. Подготовка за сървъра"

#: ../to-be-integrated.rst:346 ../to-be-integrated.rst:718
msgid "You can generate an authorized_keys file by running"
msgstr "Можете да генерирате файла authorized_keys, като стартирате"

#: ../to-be-integrated.rst:348 ../to-be-integrated.rst:720
msgid ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"
msgstr ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"

#: ../to-be-integrated.rst:350 ../to-be-integrated.rst:722
msgid ""
"where 'keyID' is either the fingerprint of your key or just the E-Mail "
"address bind to your key. The Nitrokey must already be known to the local"
" GnuPG keyring. You can now append that file to a remote server's "
"authorized_keys and when you ssh to the server you'll be asked for a pin "
"rather than a passphrase."
msgstr ""
"където 'keyID' е или пръстовият отпечатък на вашия ключ, или само E-Mail "
"адресът, свързан с вашия ключ. Ключът Nitrokey вече трябва да е известен "
"на местния набор от ключове GnuPG. Сега можете да добавите този файл към "
"authorized_keys на отдалечен сървър'и когато ssh към сървъра, ще "
"бъдете'помолени за пин код, а не за парола."

#: ../to-be-integrated.rst:357
msgid "**Q:** How can I do SSH for Server Administration on Linux?"
msgstr "**Q:** Как мога да използвам SSH за администриране на сървъри в Linux?"

#: ../to-be-integrated.rst:359 ../to-be-integrated.rst:726
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys. Preparation on client"
msgstr ""
"В Nitrokey вече трябва да са инсталирани PGP ключове, а местният набор от"
" ключове GnuPG трябва да знае ключовете. Подготовка на клиента"

#: ../to-be-integrated.rst:362 ../to-be-integrated.rst:729
msgid ""
"Make sure ~/.gnupg/gpg.conf contains 'use-agent' Add ssh support to "
"gnupg-agent by adding 'enable-ssh-support' to ~/.gnupg/gpg-agent.conf If "
"the file does not exist yet, you can just create it. Add the following "
"code somewhere into your ~/.bashrc (for fish shell, look here)"
msgstr ""
"Уверете се, че ~/.gnupg/gpg.conf съдържа 'use-agent' Добавете ssh "
"поддръжка към gnupg-agent, като добавите 'enable-ssh-support' към "
"~/.gnupg/gpg-agent.conf Ако файлът все още не съществува, можете просто "
"да го създадете. Добавете следния код някъде във вашия ~/.bashrc (за fish"
" shell погледнете тук)"

#: ../to-be-integrated.rst:367 ../to-be-integrated.rst:734
msgid ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"
msgstr ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"

#: ../to-be-integrated.rst:372 ../to-be-integrated.rst:739
msgid ""
"Simply restart your system or try pkill gpg-agent and open a new "
"commandline to make sure everything is set In case of problems, please "
"try gpg2 --card-status on first usage to make sure the gpg-agent gets "
"started"
msgstr ""
"Просто рестартирайте системата си или опитайте pkill gpg-agent и отворете"
" нов команден ред, за да се уверите, че всичко е нагласено В случай на "
"проблеми, моля, опитайте gpg2 --card-status при първото използване, за да"
" се уверите, че gpg-agent се стартира."

#: ../to-be-integrated.rst:375 ../to-be-integrated.rst:742
msgid "Preparation for the server"
msgstr "Подготовка за сървъра"

#: ../to-be-integrated.rst:377 ../to-be-integrated.rst:744
msgid "You can generate an authorized_keys file by running either"
msgstr "Можете да генерирате файла authorized_keys, като стартирате"

#: ../to-be-integrated.rst:379 ../to-be-integrated.rst:746
msgid ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) or "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(for newer GnuPG "
"versions)"
msgstr ""
"gpgkey2ssh keyID >> ~/authorized_keys #(за версия на GnuPG <= 2.1.11) или"
" gpg2 --export-ssh-key keyID >> ~/authorized_keys #(за по-нови версии на "
"GnuPG)"

#: ../to-be-integrated.rst:382 ../to-be-integrated.rst:749
msgid "where"
msgstr "където"

#: ../to-be-integrated.rst:384 ../to-be-integrated.rst:751
msgid "keyID"
msgstr "keyID"

#: ../to-be-integrated.rst:386 ../to-be-integrated.rst:753
msgid ""
"is the subkey id being used for authentication on your Nitrokey. The "
"Nitrokey must already be known to the local GnuPG keyring. You can now "
"append that file to a remote server's authorized_keys and when you ssh to"
" the server you'll be asked for a pin rather than a passphrase."
msgstr ""
"е идентификаторът на подключ, който се използва за удостоверяване на "
"вашия Nitrokey. Ключът Nitrokey вече трябва да е известен на местния "
"набор от ключове GnuPG. Сега можете да добавите този файл към "
"authorized_keys на отдалечен сървър'и когато ssh към сървъра, ще бъдете "
"попитани за pin, а не за парола."

#: ../to-be-integrated.rst:389 ../to-be-integrated.rst:756
msgid "Troubleshooting"
msgstr "Отстраняване на неизправности"

#: ../to-be-integrated.rst:391 ../to-be-integrated.rst:758
msgid "If you are still asked for a password please make sure that"
msgstr "Ако все още ви се иска парола, уверете се, че"

#: ../to-be-integrated.rst:393 ../to-be-integrated.rst:760
msgid "echo $SSH_AUTH_SOCK"
msgstr "echo $SSH_AUTH_SOCK"

#: ../to-be-integrated.rst:395 ../to-be-integrated.rst:762
msgid ""
"returns something reasonable like '/run/user/1000/gnupg/S.gpg-agent.ssh' "
"or '/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were "
"some changes in GnuPG in the past so that the actual content can differ "
"from system and GnuPG version. On some systems there may are even "
"multiple folders in this variable saved. You have to adapt the above "
"given code in .bashrc so that the variable SSH_AUTH_SOCK is correct. In "
"doubt look for 'SSH_AUTH_SOCK' in"
msgstr ""
"връща нещо разумно като '/run/user/1000/gnupg/S.gpg-agent.ssh' или "
"'/home/username/.gnupg/.S.gpg-agent.ssh'. За съжаление, в миналото в "
"GnuPG имаше някои промени, така че действителното съдържание може да се "
"различава в зависимост от системата и версията на GnuPG. При някои "
"системи може да има дори няколко папки в тази запазена променлива. Трябва"
" да адаптирате дадения по-горе код в .bashrc, така че променливата "
"SSH_AUTH_SOCK да е правилна. При съмнение потърсете 'SSH_AUTH_SOCK' в"

#: ../to-be-integrated.rst:397 ../to-be-integrated.rst:764
msgid "man gpg-agent"
msgstr "man gpg-агент"

#: ../to-be-integrated.rst:399 ../to-be-integrated.rst:766
msgid "to find the actual code for your version/system."
msgstr "за да намерите действителния код за вашата версия/система."

#: ../to-be-integrated.rst:401 ../to-be-integrated.rst:768
msgid ""
"You may check if you have a 'pinentry' program installed via your package"
" manager. You may need to set it in the gpg-agent.conf as well. You may "
"need to point gpg-agent to the correct TTY."
msgstr ""
"Можете да проверите дали имате инсталирана програма 'pinentry' чрез вашия"
" мениджър на пакети. Може да се наложи да я зададете и в gpg-agent.conf. "
"Може да се наложи да посочите на gpg-agent правилния TTY."

#: ../to-be-integrated.rst:415
msgid "**Q:** How can I use the Nitrokey for VPN access?"
msgstr "**В:** За какво мога да използвам Nitrokey?"

#: ../to-be-integrated.rst:418 ../to-be-integrated.rst:789
msgid "For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"
msgstr "За: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"

#: ../to-be-integrated.rst:421 ../to-be-integrated.rst:792
msgid "Generate a key on Nitrokey via pkcs11-tool."
msgstr "Генерирайте ключ в Nitrokey чрез pkcs11-tool."

#: ../to-be-integrated.rst:423 ../to-be-integrated.rst:794
msgid "Generate a certificate signing request via openssl + pkcs11 module:"
msgstr ""
"Генериране на заявка за подписване на сертификат чрез openssl + модул "
"pkcs11:"

#: ../to-be-integrated.rst:425 ../to-be-integrated.rst:796
msgid ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:427 ../to-be-integrated.rst:798
msgid "Sign the certificate with our certificate authority"
msgstr "Органът за издаване на удостоверения"

#: ../to-be-integrated.rst:429 ../to-be-integrated.rst:800
msgid ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:431 ../to-be-integrated.rst:478
#: ../to-be-integrated.rst:802 ../to-be-integrated.rst:849
msgid "Import  the certificate into the Nitrokey via pkcs11-tool"
msgstr "Импортиране на сертификата в Nitrokey чрез pkcs11-tool"

#: ../to-be-integrated.rst:433 ../to-be-integrated.rst:804
msgid "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"
msgstr "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"

#: ../to-be-integrated.rst:435 ../to-be-integrated.rst:806
msgid "Read the certificate's ID required for openvpn configuration:"
msgstr ""
"Прочетете идентификатора на сертификата, необходим за конфигурирането на "
"openvpn:"

#: ../to-be-integrated.rst:437 ../to-be-integrated.rst:808
msgid "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"
msgstr "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"

#: ../to-be-integrated.rst:439 ../to-be-integrated.rst:810
msgid ""
"Modify your openvpn configuration. Add the certificate ID which you "
"gathered in the previous step: E.g."
msgstr ""
"Променете конфигурацията на openvpn. Добавете идентификатора на "
"сертификата, който сте събрали в предишната стъпка: Напр."

#: ../to-be-integrated.rst:441 ../to-be-integrated.rst:812
msgid ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"
msgstr ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"

#: ../to-be-integrated.rst:443 ../to-be-integrated.rst:814
msgid "Add the PKCS#11 driver to the configuration too, e.g.:"
msgstr "Добавете и драйвера PKCS#11 към конфигурацията, например:"

#: ../to-be-integrated.rst:445 ../to-be-integrated.rst:816
msgid "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"
msgstr "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"

#: ../to-be-integrated.rst:447 ../to-be-integrated.rst:818
msgid "See this link for further information."
msgstr "Вижте тази връзка за допълнителна информация."

#: ../to-be-integrated.rst:451 ../to-be-integrated.rst:822
msgid ""
"Now all configurations are done. When executing OpenVPN client, "
"Nitrokey's PIN needs to be entered. Unfortunately OpenVPN doesn't prompt "
"to enter the PIN and it has to be entered in the following way:"
msgstr ""
"Сега всички конфигурации са готови. При стартиране на OpenVPN клиента "
"трябва да се въведе ПИН кодът на Nitrokey'. За съжаление OpenVPN не "
"предлага да въведете ПИН и той трябва да бъде въведен по следния начин:"

#: ../to-be-integrated.rst:453 ../to-be-integrated.rst:824
msgid "$ telnet 8888 password 'User PIN (OpenPGP card) token' <PIN>"
msgstr "$ telnet 8888 password 'ПИН на потребителя (OpenPGP карта) token' <PIN>"

#: ../to-be-integrated.rst:455 ../to-be-integrated.rst:826
msgid ""
"Alternatively you could recompile OpenVPN client with systemd support "
"disabled and it will prompt you for the PIN as expected. Alternatively to"
" the OpenVPN client you could use the Viscosity client which provides a "
"better user experience especially for entering the PIN."
msgstr ""
"Алтернативно можете да прекомпилирате OpenVPN клиента с деактивирана "
"поддръжка на systemd и той ще ви попита за ПИН кода, както се очаква. "
"Като алтернатива на OpenVPN клиента можете да използвате клиента "
"Viscosity, който осигурява по-добро потребителско изживяване, особено при"
" въвеждането на ПИН кода."

#: ../to-be-integrated.rst:458 ../to-be-integrated.rst:829
msgid "IPsec"
msgstr "IPsec"

#: ../to-be-integrated.rst:460 ../to-be-integrated.rst:831
msgid "Strong Swan works using the PKCS#11 driver. Basically follow these steps:"
msgstr ""
"Strong Swan работи с драйвера PKCS#11. В общи линии следвайте следните "
"стъпки:"

#: ../to-be-integrated.rst:462 ../to-be-integrated.rst:833
msgid ""
"Generate a key on Nitrokey via pkcs11-tool. In this example it's a 4096 "
"bit RSA key."
msgstr ""
"Генерирайте ключ в Nitrokey чрез pkcs11-tool. В този пример това е "
"4096-битов RSA ключ."

#: ../to-be-integrated.rst:464 ../to-be-integrated.rst:835
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"

#: ../to-be-integrated.rst:466 ../to-be-integrated.rst:837
msgid "Generate a certificate signing request via openssl + pkcs11 module"
msgstr ""
"Генериране на заявка за подписване на сертификат чрез openssl + модул "
"pkcs11"

#: ../to-be-integrated.rst:468 ../to-be-integrated.rst:839
msgid ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"
msgstr ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"

#: ../to-be-integrated.rst:472 ../to-be-integrated.rst:843
msgid "Sign the certificate with your certificate authority"
msgstr "Органът за издаване на удостоверения"

#: ../to-be-integrated.rst:474 ../to-be-integrated.rst:845
msgid "Convert the certificate to DER"
msgstr "Конвертиране на сертификата в DER"

#: ../to-be-integrated.rst:476 ../to-be-integrated.rst:847
msgid ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"
msgstr ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"

#: ../to-be-integrated.rst:480 ../to-be-integrated.rst:851
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"

#: ../to-be-integrated.rst:482 ../to-be-integrated.rst:853
msgid ""
"Configure Strongswan to load opensc-pkcs11 module then to load the "
"certificate on Nitrokey. Edit /etc/strongswan.d/charon/pkcs11.conf and "
"add the following module:"
msgstr ""
"Конфигурирайте Strongswan да зареди модула opensc-pkcs11, след което да "
"зареди сертификата в Nitrokey. Редактирайте файла "
"/etc/strongswan.d/charon/pkcs11.conf и добавете следния модул:"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "modules {"
msgstr "Модули PAM"

#: ../to-be-integrated.rst:485 ../to-be-integrated.rst:856
msgid "Nitrokey {"
msgstr "Nitrokey Start"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"
msgstr "път = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"

#: ../to-be-integrated.rst:487 ../to-be-integrated.rst:488
#: ../to-be-integrated.rst:858 ../to-be-integrated.rst:859
msgid "}"
msgstr "}"

#: ../to-be-integrated.rst:490 ../to-be-integrated.rst:861
msgid ""
"Initiate the VPN connection via IPSec/Strongswan, then prompt for "
"Nitrokey PIN"
msgstr ""
"Инициирайте VPN връзката чрез IPSec/Strongswan, след което поискайте ПИН "
"кода на Nitrokey"

#: ../to-be-integrated.rst:492 ../to-be-integrated.rst:863
msgid "8. VPN is now connected Stunnel"
msgstr "8. VPN вече е свързана Stunnel"

#: ../to-be-integrated.rst:495 ../to-be-integrated.rst:866
msgid ""
"Stunnel works as an SSL encryption wrapper between remote client and "
"local (inetd-startable) or remote server. It can be used to add SSL "
"functionality to commonly used inetd daemons like POP2, POP3, and IMAP "
"servers without any changes in the programs' code."
msgstr ""
"Stunnel работи като обвивка за SSL криптиране между отдалечен клиент и "
"локален (стартируем от inetd) или отдалечен сървър. Той може да се "
"използва за добавяне на SSL функционалност към често използвани inetd "
"демони като POP2, POP3 и IMAP сървъри без никакви промени в кода на "
"програмите."

#: ../to-be-integrated.rst:497 ../to-be-integrated.rst:868
msgid "Stunnel is able to load OpenSC PKCS#11 engine using this configuration:"
msgstr ""
"Stunnel е в състояние да зареди OpenSC PKCS#11 engine, като използва тази"
" конфигурация:"

#: ../to-be-integrated.rst:499 ../to-be-integrated.rst:870
msgid ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"
msgstr ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"

#: ../to-be-integrated.rst:507 ../to-be-integrated.rst:878
msgid "[service] engineNum=1 key=id_45"
msgstr "[service] engineNum=1 key=id_45"

#: ../to-be-integrated.rst:525
msgid "**Q:** How can I do PKI / Certificate Authority (CA)?"
msgstr "**В:** Как мога да направя PKI / сертифициращ орган (CA)?"

#: ../to-be-integrated.rst:527
msgid "CA keys are very sensitive and must not be compromised or lost. GnuPG"
msgstr ""
"Ключовете на CA са много чувствителни и не трябва да бъдат компрометирани"
" или изгубени. GnuPG"

#: ../to-be-integrated.rst:530
msgid "Instructions OpenSSL"
msgstr "Инструкции"

#: ../to-be-integrated.rst:533
msgid ""
"Install OpenSC'S engine_pkcs11 Run the command \"pkcs11-tool --list-"
"slots\" to list the available slots. Run the command \"openssl> req "
"-engine pkcs11 -new -key slot_X-id_XXXX -keyform engine -x509 -out "
"cert.pem -text\" where X is the appropriate slot number and XXXX is the "
"slot ID, e.g. \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"
msgstr ""
"Инсталиране на OpenSC'S engine_pkcs11 Изпълнете командата \"pkcs11-tool "
"--list-slots\", за да видите списъка с наличните слотове. Изпълнете "
"командата \"openssl> req -engine pkcs11 -new -key slot_X-id_XXXX -keyform"
" engine -x509 -out cert.pem -text\" където X е съответният номер на "
"слота, а XXXX е идентификаторът на слота, например \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"

#: ../to-be-integrated.rst:538
msgid "Other"
msgstr "Други"

#: ../to-be-integrated.rst:540
msgid ""
"Please see this PDF (p. 30) from heinlein-support.de for summarized "
"instructions in German."
msgstr ""
"Моля, вижте този PDF файл (стр. 30) от heinlein-support.de за обобщени "
"инструкции на немски език."

#: ../to-be-integrated.rst:542
msgid ""
"µ-CA-tool is a script based on GnuPG, OpenSC and OpenSSL which helps to "
"perform basic tasks of a CA. It works with Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"µ-CA-tool е скрипт, базиран на GnuPG, OpenSC и OpenSSL, който помага да "
"се изпълняват основните задачи на CA. Той работи с Nitrokey Pro и "
"Nitrokey Storage."

#: ../to-be-integrated.rst:550
msgid "**Q:** How can I use the password manager?"
msgstr "**В:** Как мога да използвам мениджъра на пароли?"

#: ../to-be-integrated.rst:552
msgid "You have the following options:"
msgstr "Имате следните възможности:"

#: ../to-be-integrated.rst:554
msgid ""
"Use Nitrokey's built-in Password Safe to store passwords securely. For "
"this you need the Nitrokey App. Maximum are 16 passwords. Use Pass "
"(simple commandline password manager for Unix systems, mainly for "
"experts). Use KeePass as described below."
msgstr ""
"Използвайте вградения сейф за пароли на Nitrokey', за да съхранявате "
"сигурно пароли. За тази цел ви е необходимо приложението Nitrokey. "
"Максималният брой е 16 пароли. Използвайте Pass (прост мениджър на пароли"
" от командния ред за Unix системи, предимно за експерти). Използвайте "
"KeePass, както е описано по-долу."

#: ../to-be-integrated.rst:558
msgid "Protecting KeePass with Nitrokey's One-Time Passwords"
msgstr "Защита на KeePass с еднократните пароли на Nitrokey's"

#: ../to-be-integrated.rst:560
msgid ""
"You can also follow this video (It contains a mistake around time 4:22 "
"which is described later below). Keepass Installation"
msgstr ""
"Можете също така да проследите този видеоклип (в него има грешка около "
"4:22, която е описана по-долу). Инсталиране на Keepass"

#: ../to-be-integrated.rst:563
msgid ""
"Install Keepass 2.3.5. For Ubuntu: Because the main repository contains "
"the older 2.3.4, you have to use some other source like this private PPA "
"(please run these commands in terminal):"
msgstr ""
"Инсталирайте Keepass 2.3.5. За Ubuntu: Тъй като основното хранилище "
"съдържа по-старата версия 2.3.4, трябва да използвате друг източник като "
"този частен PPA (моля, изпълнете тези команди в терминала):"

#: ../to-be-integrated.rst:566
msgid ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"
msgstr ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"

#: ../to-be-integrated.rst:570
msgid ""
"Install the OtpKeyProv plugin by downloading the archive, unzipping and "
"copying the content to Keypass' Plugin directory. On Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ For Linux, optional: Install "
"mono-complete package if plugin is not detected when running Keepass2 "
"(you can check that in Tools/Plugins):"
msgstr ""
"Инсталирайте плъгина OtpKeyProv, като изтеглите архива, разархивирате го "
"и копирате съдържанието в директорията Keypass' Plugin. За Linux: sudo cp"
" OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ За Linux, по избор: "
"Инсталирайте пакета mono-complete, ако приставката не е открита при "
"стартиране на Keepass2 (можете да проверите това в Tools/Plugins):"

#: ../to-be-integrated.rst:574
msgid "sudo apt-get install mono-complete"
msgstr "sudo apt-get install mono-complete"

#: ../to-be-integrated.rst:576
msgid "Keepass OTP Configuration Existing Database"
msgstr "Конфигурация на Keepass OTP Съществуваща база данни"

#: ../to-be-integrated.rst:579
msgid ""
"Do a backup of your database and keep it until you are really sure "
"everything works fine! Make sure you really did a backup. If you mess up,"
" your passwords are lost! Open database as usual Select File/Change "
"Master Key..."
msgstr ""
"Направете резервно копие на базата данни и го запазете, докато не се "
"уверите, че всичко работи добре! Уверете се, че наистина сте направили "
"резервно копие. Ако се объркате, паролите ви са изгубени! Отворете базата"
" данни както обикновено Изберете Файл/Смяна на главния ключ..."

#: ../to-be-integrated.rst:584
msgid "New Database"
msgstr "Нова база данни"

#: ../to-be-integrated.rst:586
msgid "Create new database as usual"
msgstr "Създаване на нова база данни, както обикновено"

#: ../to-be-integrated.rst:588
msgid "Common"
msgstr "Обща"

#: ../to-be-integrated.rst:590
msgid ""
"Insert Master Password (optional) Set Key file / provider: to One-Time "
"Passwords (OATH HOTP) Click OK With Nitrokey App: select HOTP slot and "
"generate HOTP secret (it will be copied to clipboard automatically). "
"Note: You may want write down this secret and store it anywhere secure. "
"Otherwise if you lose your Nitrokey or it gets broken your password "
"database is lost as well!!! Paste the secret to Keepass OTP Plugin window"
" Make sure the Counter field and digits count are set the same in both "
"windows. Click OK in Nitrokey App to save the slot. Select secret type: "
"Base32 Set the other settings as you like. Please consult plugin's manual"
" (should be in same downloaded archive). I would recommend to set look-"
"ahead value to non-zero to prevent locking up the database after "
"accidental code request from used HOTP slot. In that case counters on the"
" device and in Keepass would be out of sync and OTP codes will not be the"
" same with expected."
msgstr ""
"Вмъкнете главната парола (по избор) Задайте ключов файл/доставчик: на "
"еднократни пароли (OATH HOTP) Кликнете върху OK С приложението Nitrokey: "
"изберете слот HOTP и генерирайте тайната HOTP (тя ще бъде копирана в "
"клипборда автоматично). Забележка: Може да искате да запишете тази тайна "
"и да я съхранявате на сигурно място. В противен случай, ако изгубите своя"
" Nitrokey или той се счупи, базата данни с пароли също ще бъде "
"изгубена!!! Вмъкнете тайната в прозореца на Keepass OTP Plugin Уверете "
"се, че полето Counter (Брояч) и броят на цифрите са зададени по един и "
"същ начин в двата прозореца. Щракнете върху OK в приложението Nitrokey, "
"за да запазите слота. Изберете типа на тайната: Base32 Задайте други "
"настройки, както ви харесва. Моля, консултирайте се с ръководството на "
"плъгина'(трябва да е в същия изтеглен архив). Бих препоръчал да зададете "
"стойност на look-ahead, различна от нула, за да предотвратите блокиране "
"на базата данни след случайна заявка за код от използван HOTP слот. В "
"този случай броячите на устройството и в Keepass няма да са "
"синхронизирани и OTP кодовете няма да са същите като очакваните."

#: ../to-be-integrated.rst:599
msgid "Unlocking Database"
msgstr "Отключване на базата данни"

#: ../to-be-integrated.rst:601
msgid ""
"Open database Insert Master Password (if set) Key file / provider: to "
"One-Time Passwords (OATH HOTP) Press OK Insert HOTP codes by repeatedly "
"choosing proper HOTP slot from the Nitrokey App and pasting the clipboard"
" content to proper field (the order of the codes is important). Press OK"
msgstr ""
"Отваряне на базата данни Вмъкване на главна парола (ако е зададена) "
"Ключов файл / доставчик: към еднократни пароли (OATH HOTP) Натиснете OK "
"Вмъкване на HOTP кодове чрез многократно избиране на подходящ HOTP слот "
"от приложението Nitrokey и поставяне на съдържанието от клипборда в "
"съответното поле (редът на кодовете е важен). Натиснете OK"

#: ../to-be-integrated.rst:608
msgid "Issues"
msgstr "Издание"

#: ../to-be-integrated.rst:610
msgid ""
"Due to nature of HOTP solution it is possible to get counters "
"desynchronized (by selecting wrong OTP slot during day-to-day use). Using"
" look-ahead plugin's setting should prevent that (value 10 or so should "
"suffice - depends on desired security requirements - this would allow to "
"10 accidental requests). TOTP is not having that problem. Setting the OTP"
" protection could be error-prone. There is no secret validation on "
"OtpKeyProv side. In the test movie at 4:22 I have managed to set the "
"Base32 coded secret as Hex (which was not a proper hex value) and it has "
"not complained about it. There is no information what happened to "
"database and how it is now configured. I have not noticed until I have "
"watched the movie."
msgstr ""
"Поради естеството на решението HOTP е възможно десинхронизиране на "
"броячите (чрез избиране на грешен слот за OTP по време на ежедневна "
"употреба). Използването на настройката на плъгина look-ahead би трябвало "
"да предотврати това (стойност 10 или приблизително толкова би трябвало да"
" е достатъчна - зависи от желаните изисквания за сигурност - това би "
"позволило до 10 случайни заявки). TOTP няма този проблем. Настройката на "
"защитата на OTP може да бъде склонна към грешки. От страна на OtpKeyProv "
"не се извършва проверка на секретността. В тестовия филм в 4:22 успях да "
"задам тайната, кодирана в Base32, като Hex (което не беше правилна "
"шестнайсетична стойност) и тя не се оплака от това. Няма информация какво"
" се е случило с базата данни и как е конфигурирана сега. Не съм "
"забелязал, докато не гледах филма."

#: ../to-be-integrated.rst:613
msgid "Tested under Ubuntu 16.10, Nitrokey App v0.6.3 and Nitrokey Storage v0.45."
msgstr "Тествано под Ubuntu 16.10, Nitrokey App v0.6.3 и Nitrokey Storage v0.45."

#: ../to-be-integrated.rst:622
msgid "**Q:** How can I use the True Random Number Generator?"
msgstr "**В:** Как мога да използвам генератора на истински случайни числа?"

#: ../to-be-integrated.rst:624
msgid ""
"Both devices are compatible to the OpenPGP Card, so that scdrand should "
"work. This script may be useful. The TRNG provides about 40 kbit/s."
msgstr ""
"И двете устройства са съвместими с картата OpenPGP, така че scdrand "
"трябва да работи. Този скрипт може да е полезен. TRNG осигурява около 40 "
"kbit/s."

#: ../to-be-integrated.rst:626
msgid ""
"The user comio created a systemd file to use scdrand and thus the TRNG "
"more generally. He created a ebuild for Gentoo, too."
msgstr ""
"Потребителят comio създаде systemd файл, за да използва scdrand и по този"
" начин TRNG в по-общ план. Той създаде и ebuild за Gentoo."

#: ../to-be-integrated.rst:632
msgid "**Q:** Do you have resources for development and integration?"
msgstr "**В:** Разполагате ли с ресурси за разработка и интеграция?"

#: ../to-be-integrated.rst:635
msgid ""
"Use Nitrokey library to manage the one-time passwords and password safe "
"functionality. The project nitrokey-get-totp and nitrokey-get-password "
"are nice examples for using the python bindings of Nitrokey library to "
"get a custom interface. In order to access the integrated smart card, you"
" can use OpenSC's command line tools. If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. To work with the smart card low "
"level, see the OpenPGP Card specification. The source code of the "
"firmware and the hardware layout are available too. To develop special "
"applications or for command line access one can use the nitrocli created "
"by d-e-s-o. Gkey is a go-based command line tool to access the Password "
"Safe and OTP entries. A libnitrokey wrapper for Rust providing access to "
"Nitrokey devices."
msgstr ""
"Използвайте библиотеката Nitrokey, за да управлявате еднократните пароли "
"и функциите на сейфа за пароли. Проектите nitrokey-get-totp и nitrokey-"
"get-password са хубави примери за използване на връзките на Python на "
"библиотеката Nitrokey за получаване на персонализиран интерфейс. За да "
"получите достъп до вградената смарт карта, можете да използвате "
"инструментите от командния ред на OpenSC'. Ако приложението ви има "
"PKCS#11 интерфейс, използвайте драйвера OpenSC's PKCS#11. За да работите "
"със смарт картата на ниско ниво, вижте спецификацията на OpenPGP Card. "
"Изходният код на фърмуера и хардуерното оформление също са достъпни. За "
"разработване на специални приложения или за достъп от команден ред може "
"да се използва nitrocli, създаден от d-e-s-o. Gkey е базиран на go "
"инструмент за достъп до командния ред за сейф за пароли и записи на OTP. "
"Обвивка на libnitrokey за Rust, осигуряваща достъп до устройствата "
"Nitrokey."

#: ../to-be-integrated.rst:646
msgid "# HSM 2"
msgstr "HSM"

#: ../to-be-integrated.rst:648
msgid ""
"**Nitrokey HSM:** 124 dataobjects (DF, EF) can be created. Each EF can "
"have a size of up to 256 byte. The total storage capacity of ca. 32 KByte"
" is shared dynamically among keys and data objects."
msgstr ""
"**Nitrokey HSM:** Могат да бъдат създадени 124 обекта за данни (DF, EF). "
"Всеки EF може да има размер до 256 байта. Общият капацитет за съхранение "
"от около 32 KByte се разпределя динамично между ключовете и обектите за "
"данни."

#: ../to-be-integrated.rst:652
msgid "**Q:** How to use the HSM for Login For: Nitrokey HSM"
msgstr "**В:** Как да използваме HSM за вход За: Nitrokey HSM"

#: ../to-be-integrated.rst:655
msgid "Select your use case:"
msgstr "Изберете вашия случай на употреба:"

#: ../to-be-integrated.rst:657
msgid ""
"Login With Nitrokey HSM on Stand Alone Windows Computers Login With "
"Nitrokey HSM on Windows Domain Computers Using MS Active Directory For "
"Unix environments an integration with PAM and OpenSSH is available."
msgstr ""
"Влизане с Nitrokey HSM на самостоятелни компютри с Windows Влизане с "
"Nitrokey HSM на компютри в домейна на Windows с помощта на MS Active "
"Directory За Unix средите е налична интеграция с PAM и OpenSSH."

#: ../to-be-integrated.rst:661
msgid "**Q:**  How to use the HSM for Email Encryption"
msgstr "**Q:** Как да използваме HSM за криптиране на имейл"

#: ../to-be-integrated.rst:663
msgid ""
"Encrypt your email using the S/MIME industry standard available in all "
"major e-mail clients."
msgstr ""
"Криптирайте имейла си с помощта на индустриалния стандарт S/MIME, наличен"
" във всички основни клиенти за електронна поща."

#: ../to-be-integrated.rst:665
msgid ""
"The Nitrokey HSM has been tested to work with Mozilla Thunderbird and "
"Microsoft Outlook. Other email clients with support for PKCS#11 or "
"Microsoft CSP should work as well."
msgstr ""
"Nitrokey HSM е тестван да работи с Mozilla Thunderbird и Microsoft "
"Outlook. Други клиенти за електронна поща с поддръжка на PKCS#11 или "
"Microsoft CSP също трябва да работят."

#: ../to-be-integrated.rst:667
msgid "Note: A certificate can be purchased cheaply from CERTUM."
msgstr "Забележка: Сертификат може да бъде закупен евтино от CERTUM."

#: ../to-be-integrated.rst:669
msgid "**Q:**   How to use the Nitrokey for Hard Disk Encryption with VeraCrpt?"
msgstr ""
"**Q:** Как да използвате Nitrokey за криптиране на твърди дискове с "
"VeraCrpt?"

#: ../to-be-integrated.rst:671
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey:"
msgstr ""
"VeraCrypt е безплатен софтуер за криптиране на дискове с отворен код за "
"Windows, macOS и GNU/Linux. Той е наследник на TrueCrypt и затова се "
"препоръчва, въпреки че следващите инструкции трябва да се прилагат и за "
"TrueCrypt. Следвайте тези стъпки, за да използвате програмата с Nitrokey:"

#: ../to-be-integrated.rst:680
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the password."
msgstr ""
"Съображения за сигурност: Моля, имайте предвид, че VeraCrypt не използва "
"пълната сигурност, която Nitrokey (и смарт картите като цяло) предлагат. "
"Вместо това тя съхранява ключов файл върху Nitrokey, който теоретично "
"може да бъде откраднат от компютърен вирус, след като потребителят въведе"
" паролата."

#: ../to-be-integrated.rst:682
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation. (Not tested with Nitrokey HSM!)"
msgstr ""
"Забележка: Aloaha Crypt е базирана на TrueCrypt/VeraCrypt, но без "
"описаното ограничение на сигурността. (Не е тестван с Nitrokey HSM!)"

#: ../to-be-integrated.rst:685
msgid "**Q:** How to sign and encrypt files and pdfs?"
msgstr "**В:** Как да подписвам и криптирам файлове и pdf файлове?"

#: ../to-be-integrated.rst:687
msgid "GnuPG"
msgstr "GnuPG"

#: ../to-be-integrated.rst:689
msgid ""
"Starting with version 2.1, GnuPG has build-in but limited support for the"
" Nitrokey HSM. Use the gpgsm tool to sign, verify, encrypt and decrypt "
"files or S/MIME messaging using your Nitrokey HSM. Use a signature key on"
" a Nitrokey HSM to sign documents using Acrobat Reader, Open Office / "
"Libre Office or any other PDF reader supporting electronic signatures. "
"ECC HSM Encryptor"
msgstr ""
"От версия 2.1 GnuPG има вградена, но ограничена поддръжка за Nitrokey "
"HSM. Използвайте инструмента gpgsm, за да подписвате, проверявате, "
"криптирате и декриптирате файлове или S/MIME съобщения, използвайки вашия"
" Nitrokey HSM. Използвайте ключа за подпис на Nitrokey HSM, за да "
"подписвате документи с помощта на Acrobat Reader, Open Office/Libre "
"Office или всеки друг PDF четец, поддържащ електронни подписи. ECC HSM "
"криптор"

#: ../to-be-integrated.rst:692
msgid ""
"ECC HSM Encryptor is a small application to encrypt and decrypt files "
"with a Nitrokey HSM."
msgstr ""
"ECC HSM Encryptor е малко приложение за криптиране и декриптиране на "
"файлове с Nitrokey HSM."

#: ../to-be-integrated.rst:694
msgid ""
"**Q:** How to do certificat-based Web login Protect access to sensitive "
"information on your website with 2nd factor authentication."
msgstr ""
"**В:** Как да направим уеб вход, базиран на сертификати Защитете достъпа "
"до чувствителна информация на уебсайта си с удостоверяване на втори "
"фактор."

#: ../to-be-integrated.rst:697
msgid ""
"Use a Nitrokey HSM as authentication token via the build-in device "
"authentication PKI or use keys and certificates on a Nitrokey HSM for "
"TLS/SSL client authentication."
msgstr ""
"Използвайте Nitrokey HSM като удостоверителен знак чрез вградения в "
"устройството PKI за удостоверяване или използвайте ключове и сертификати "
"на Nitrokey HSM за TLS/SSL удостоверяване на клиенти."

#: ../to-be-integrated.rst:699
msgid ""
"**Q:** SSH for Server Administration with windows For: Nitrokey Pro, "
"Nitrokey Storage, Nitrokey Start, Nitrokey HSM"
msgstr ""
"**Q:** SSH за администриране на сървъри с Windows За: Nitrokey Pro, "
"Nitrokey Storage, Nitrokey Start, Nitrokey HSM"

#: ../to-be-integrated.rst:702
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"В Nitrokey вече трябва да са инсталирани PGP ключове, а местният "
"ключодържател GnuPG трябва да знае за ключовете, т.е. в системата трябва "
"да е инсталиран GPG4Win (необходимо е само основното приложение GnuPG). "
"Освен това трябва да се инсталира PuTTY. Подготовка на клиента"

#: ../to-be-integrated.rst:724
msgid "**Q:** SSH Server administration on linux"
msgstr "**Q:** Администриране на SSH сървър в Linux"

#: ../to-be-integrated.rst:771
msgid "**Q:** DNSSEC"
msgstr "**Q:** DNSSEC"

#: ../to-be-integrated.rst:774
msgid "For: Nitrokey HSM"
msgstr "За: Nitrokey HSM"

#: ../to-be-integrated.rst:776
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resource apply:"
msgstr ""
"Защитете разрешаването на имената на домейни с помощта на DNSSEC и "
"Nitrokey HSM като защитено хранилище за ключове. Тя се основава на "
"Smartcard-HSM, поради което се прилагат следните ресурси:"

#: ../to-be-integrated.rst:778
msgid ""
"Signing NSD DNSSEC Zones with Nitrokey HSM by Vadim Penzin. Integration "
"with OpenDNSSEC has been successfully tested in a demo by Richard Lamb. "
"Luis D Espinoza Sanchez & Eberhard W Lisse held a session on using the "
"SmartCard-HSM for DNSSEC at the 2015 ICAAN Meeting in Singapore. Jan-Piet"
" Mens wrote a nice article about integrating the SmartCard-HSM with "
"PowerDNS."
msgstr ""
"Подписване на NSD DNSSEC зони с Nitrokey HSM от Vadim Penzin. "
"Интеграцията с OpenDNSSEC е успешно тествана в демонстрационна версия от "
"Ричард Ламб. Luis D Espinoza Sanchez & Eberhard W Lisse проведе сесия за "
"използване на SmartCard-HSM за DNSSEC на срещата на ICAAN през 2015 г. в "
"Сингапур. Jan-Piet Mens написа хубава статия за интегрирането на "
"SmartCard-HSM с PowerDNS."

#: ../to-be-integrated.rst:784
msgid ""
"**Q:** Physical Access Control With it's unique build-in device "
"authentication PKI, a Nitrokey HSM has a cryptographically protected "
"unique identity that can be verified in a fast authentication protocol. "
"An access control terminal can verify authenticity and identity of the "
"device, create a secure communication channel and perform offline PIN "
"verification. The coolPACS project has all the details."
msgstr ""
"**Q:** Контрол на физическия достъп Благодарение на уникалния вграден PKI"
" за удостоверяване на устройствата, Nitrokey HSM има криптографски "
"защитена уникална идентичност, която може да бъде проверена в бърз "
"протокол за удостоверяване. Терминалът за контрол на достъпа може да "
"провери автентичността и идентичността на устройството, да създаде "
"защитен комуникационен канал и да извърши офлайн проверка на ПИН. "
"Проектът coolPACS съдържа всички подробности."

#: ../to-be-integrated.rst:787 ../to-be-integrated.rst:883
msgid "**Q:**"
msgstr "**Q:**"

#: ../to-be-integrated.rst:885
msgid "PKI / Certificate Authority (CA)"
msgstr "Органът за издаване на удостоверения"

#: ../to-be-integrated.rst:887
msgid "**Q:** Secret Management and Cloud Infrastructure"
msgstr "**Q:** Управление на тайни и облачна инфраструктура"

#: ../to-be-integrated.rst:889
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey "
"HSM can be found at banzaicloud.com."
msgstr ""
"Подход за осигуряване на ключове за Hashicorp Vault/Bank-Vault на "
"Nitrokey HSM можете да намерите на banzaicloud.com."

#: ../to-be-integrated.rst:891
msgid "**Q:** How to do N-of-m Schemes"
msgstr "**Q:** Как да направим N-of-m схеми"

#: ../to-be-integrated.rst:893
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure"
" sharing of key material/passwords and one for public key authentication "
"to control the access to the device. Please see this blog post for more "
"detailed information. N-of-m for DKEK Shares"
msgstr ""
"Nitrokey HSM 2 поддържа две различни n-of-m схеми - една за сигурно "
"споделяне на ключови материали/пароли и една за удостоверяване с публичен"
" ключ за контрол на достъпа до устройството. Моля, вижте тази публикация "
"в блога за по-подробна информация. N-of-m за споделяне на DKEK"

#: ../to-be-integrated.rst:896
msgid ""
"This feature can be used with OpenSC as described here. The general "
"approach is seen in the videos below (external links)."
msgstr ""
"Тази функция може да се използва с OpenSC, както е описано тук. Общият "
"подход е показан във видеоклиповете по-долу (външни връзки)."

#: ../to-be-integrated.rst:898
msgid "Nitrokey HSM's Secure Key Backup and Restore:"
msgstr "Nitrokey HSM's Secure Key Backup and Restore:"

#: ../to-be-integrated.rst:900
msgid "Screencast"
msgstr "Предаване на екрана"

#: ../to-be-integrated.rst:902
msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
msgstr "Nitrokey HSM's M-of-N Threshold Scheme:"

#: ../to-be-integrated.rst:904
msgid "screencast N-of-m for public key authentication"
msgstr "скрийнкаст N-of-m за удостоверяване с публичен ключ"

#: ../to-be-integrated.rst:907
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. The blog post"
" gives an overview and a how-to here (CDN access required) is shown the "
"process step by step in the Smart Card Shell. For OpenSC there is a "
"ticket to get that integrated."
msgstr ""
"Засега n-of-m удостоверяването се поддържа само в OpenSCDP. В "
"публикацията в блога е направен преглед, а тук (изисква се достъп до CDN)"
" е показан процесът стъпка по стъпка в Smart Card Shell. За OpenSC има "
"билет за интегриране на тази функция."

#: ../to-be-integrated.rst:909
msgid ""
"n-of-m authentication is also supported in the PKI-as-a-Service Portal "
"for locally and remote connected HSMs. The PKI-as-a-Service Portal is "
"based on OpenSCDP."
msgstr ""
"Удостоверяването n-of-m се поддържа и в портала PKI-as-a-Service за "
"локално и отдалечено свързани HSM. Порталът PKI-as-a-Service се основава "
"на OpenSCDP."

#: ../to-be-integrated.rst:911
msgid "**Q:** How to safe Cryptocurrences in the Nitrokey HSM"
msgstr "**Q:** Как да защитим криптовалутите в Nitrokey HSM"

#: ../to-be-integrated.rst:914
msgid ""
"J.v.d.Bosch wrote a simple, free python program to secure the private key"
" of a Bitcoin wallet in a HSM. See here for further information. Using "
"the HSM in an Ethereum PoA Chain. Tezos has been reported to work with "
"Nitrokey HSM."
msgstr ""
"J.v.d.Bosch написа проста, безплатна програма на питон за защита на "
"частния ключ на портфейл за Биткойн в HSM. За повече информация вижте "
"тук. Използване на HSM във верига Ethereum PoA. Съобщава се, че Tezos "
"работи с Nitrokey HSM."

#: ../to-be-integrated.rst:918
msgid ""
"**Q:** How to use the True Random Number Generator? Nitrokey HSM can be "
"used with Botan and TokenTools by using OpenSC as a PKCS#11 driver."
msgstr ""
"**В:** Как да използвате генератора на истински случайни числа? Nitrokey "
"HSM може да се използва с Botan и TokenTools, като се използва OpenSC "
"като PKCS#11 драйвер."

#: ../to-be-integrated.rst:921
msgid ""
"OpenSSL can't use Nitrokey HSM's RNG directly because engine-pkcs11 "
"doesn't contain a mapping for OpenSSL to C_GenerateRandom."
msgstr ""
"OpenSSL не може'да използва Nitrokey HSM's RNG директно, защото engine-"
"pkcs11 не'съдържа мапинг за OpenSSL към C_GenerateRandom."

#: ../to-be-integrated.rst:923
msgid "**Q:** What can I use for development and integration?"
msgstr "**В:** Какво мога да използвам за разработка и интеграция?"

#: ../to-be-integrated.rst:925
msgid ""
"se OpenSC's commandline tools If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. Depending on your Linux "
"distribution, the PKCS driver may may be located at /usr/lib/x86_64"
"-linux-gnu/opensc-pkcs11.so for example."
msgstr ""
"Ако приложението ви има PKCS#11 интерфейс, използвайте драйвера на "
"OpenSC's PKCS#11. В зависимост от вашата дистрибуция на Linux драйверът "
"PKCS може да се намира например в /usr/lib/x86_64-linux-gnu/opensc-"
"pkcs11.so."

#: ../to-be-integrated.rst:927
msgid ""
"Alternatively to OpenSC, you might use sc-hsm-embedded PKCS#11 and CSP-"
"Minidriver Module."
msgstr ""
"Като алтернатива на OpenSC можете да използвате sc-hsm-embedded PKCS#11 и"
" CSP-Minidriver Module."

#: ../to-be-integrated.rst:928
msgid ""
"In case you use Java, you find a JCE Provider as part of Smart Card "
"Shell. You can find information about the m-of-n scheme here. Secure "
"Messaging can be used with the JCE provider. Please register at the "
"CardContact Developer Network to get access to the user manual and "
"further tools. You can also request the manual from us. Smart card "
"forwarding with Fedora A user generated tool on GitHub to provide an easy"
" frontend to OpenSCs toolset - nitrotool A forum post describes the "
"procedure to sign executables with a key stored on HSM on Windows."
msgstr ""
"В случай че използвате Java, ще намерите JCE Provider като част от Smart "
"Card Shell. Можете да намерите информация за схемата m-of-n тук. Secure "
"Messaging може да се използва с доставчика JCE. Моля, регистрирайте се в "
"CardContact Developer Network, за да получите достъп до ръководството за "
"потребителя и допълнителни инструменти. Можете също така да поискате "
"ръководството от нас. Препращане на смарт карти с Fedora Генериран от "
"потребителя инструмент в GitHub за осигуряване на лесен фронтенд към "
"набора от инструменти на OpenSC - nitrotool Публикация във форума описва "
"процедурата за подписване на изпълними файлове с ключ, съхранен на HSM в "
"Windows."

#: ../to-be-integrated.rst:936
msgid "Key Use Counter"
msgstr "Брояч за ключова употреба"

#: ../to-be-integrated.rst:938
msgid ""
"The Key Use Counter is displayed in the Key Manager of the Smart Card "
"Shell. At the moment you can only set it with a script "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter in the class "
"scsh/sc-hsm/SmartCardHSM.js)."
msgstr ""
"Броячът на използваните ключове се показва в мениджъра на ключове на "
"Smart Card Shell. В момента можете да го задавате само със скрипт "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter в класа scsh/sc-"
"hsm/SmartCardHSM.js)."

#: ../to-be-integrated.rst:940
msgid ""
"In our PKCS#11 module there is a proprietary attribute "
"CKA_SC_HSM_KEY_USE_COUNTER with the key use of the C_GenerateKeyPair "
"counter can be set. The attribute can then also be set for a key can be "
"queried."
msgstr ""
"В нашия модул PKCS#11 има патентован атрибут CKA_SC_HSM_KEY_USE_COUNTER, "
"с който може да се зададе използването на ключа на брояча "
"C_GenerateKeyPair. След това атрибутът може да се зададе и за ключ, който"
" може да бъде потърсен."

#: ../to-be-integrated.rst:942
msgid ""
"In OCF and the JCE Provider, the Key Use Counter can be queried with "
"SmartCardHSMKey.getUseCounter() and confirm with "
"SmartCardHSMKeySpec.setKeyUseCounter() can be set."
msgstr ""
"В OCF и JCE Provider броячът на използваните ключове може да бъде "
"потърсен с функцията SmartCardHSMKey.getUseCounter() и да бъде потвърден "
"с функцията SmartCardHSMKeySpec.setKeyUseCounter()."

#~ msgid "# storage"
#~ msgstr "Pro + съхранение"

#~ msgid "Configure Hidden Volumes:"
#~ msgstr "Конфигуриране на скрити томове:"

#~ msgid ""
#~ "Unlock encrypted volume from the "
#~ "Nitrokey App menu. Select \"setup hidden"
#~ " volume\". Now you need to enter "
#~ "a new password twice to protect "
#~ "your hidden volume. The password "
#~ "strength is indicated below."
#~ msgstr ""
#~ "Отключете криптирания том от менюто на"
#~ " приложението Nitrokey. Изберете \"setup "
#~ "hidden volume\". Сега трябва да въведете"
#~ " два пъти нова парола, за да "
#~ "защитите скрития си том. Силата на "
#~ "паролата е посочена по-долу."

#~ msgid ""
#~ "Note: PINs can only be tried three"
#~ " times only which is why they "
#~ "can be short. Passwords like used "
#~ "for hidden devices can potentially be"
#~ " attacked unlimited which is why they"
#~ " need to be sufficiently strong."
#~ msgstr ""
#~ "Забележка: ПИН кодовете могат да бъдат"
#~ " изпробвани само три пъти, поради "
#~ "което те могат да бъдат кратки. "
#~ "Паролите, като тези, използвани за "
#~ "скрити устройства, могат да бъдат "
#~ "атакувани неограничено, поради което трябва"
#~ " да бъдат достатъчно силни."

#~ msgid ""
#~ "Next you need to define the "
#~ "storage area being used. Hidden volumes"
#~ " are stored in the empty space "
#~ "of the encrypted volume. This is a"
#~ " critical choice because it could "
#~ "destroy data on the (not-hidden) "
#~ "encrypted volume and reveal the "
#~ "existience of the hidden volume."
#~ msgstr ""
#~ "След това трябва да определите "
#~ "използваната област за съхранение. Скритите"
#~ " томове се съхраняват в празното "
#~ "пространство на криптирания том. Това е"
#~ " критичен избор, защото може да "
#~ "унищожи данните в (нескрития) криптиран "
#~ "том и да разкрие съществуването на "
#~ "скрития том."

#~ msgid ""
#~ "You should use one FAT32 partition "
#~ "on your encrypted volume as journaling"
#~ " filesystems, especially NTFS, may destroy"
#~ " the encrypted data. Copy some files"
#~ " to the encrypted volume prior to "
#~ "creating the hidden volume. Once you "
#~ "configured a hidden volume you shouldn't"
#~ " add or change files on the "
#~ "encrypted volume anymore. Identify the "
#~ "storage space your files consume on "
#~ "the encrypted volume. For example: 10%"
#~ " The hiden volume should start after"
#~ " your files on the encrypted volume."
#~ " For example: 10% files + 10% "
#~ "buffer = 20% The hidden volume "
#~ "should end in a distance before "
#~ "the end of the storage. For "
#~ "example: 90%"
#~ msgstr ""
#~ "Трябва да използвате само един дял "
#~ "FAT32 на криптирания том, тъй като "
#~ "файловите системи за журналиране, особено "
#~ "NTFS, могат да унищожат криптираните "
#~ "данни. Копирайте някои файлове в "
#~ "криптирания том, преди да създадете "
#~ "скрития том. След като сте конфигурирали"
#~ " скрития том, не бива повече "
#~ "да'добавяте или променяте файлове в "
#~ "криптирания том. Идентифицирайте мястото за"
#~ " съхранение, което вашите файлове "
#~ "консумират върху криптирания том. Например:"
#~ " 10% Tскритият том трябва да започне"
#~ " след вашите файлове в криптирания "
#~ "том. Например: 10% fилеи + 10% "
#~ "bсупер = 20% Tскритият том трябва "
#~ "да завърши на разстояние преди края "
#~ "на хранилището. Например: 90%"

#~ msgid ""
#~ "In case you use two or more "
#~ "hidden volumes, note that their storage"
#~ " area must not overlap. Otherwise "
#~ "they would override and destroy each "
#~ "other's data. Each hidden volume would"
#~ " require a different password."
#~ msgstr ""
#~ "В случай че използвате два или "
#~ "повече скрити тома, имайте предвид, че"
#~ " тяхната област за съхранение не "
#~ "трябва да се припокрива. В противен "
#~ "случай те ще се заместят и ще "
#~ "унищожат взаимно данните си'. Всеки "
#~ "скрит том ще изисква различна парола."

#~ msgid "Usage of Hidden Volumes:"
#~ msgstr "Използване на скрити томове:"

#~ msgid ""
#~ "Select \"unlock encrypted volume\" and "
#~ "enter your User PIN. Select \"unlock "
#~ "hidden volume\" and enter any of "
#~ "the hidden volume's passwords. If this"
#~ " is the first time you may need"
#~ " to create a partition on the "
#~ "hidden volume. Windows will open an "
#~ "appropriate window and ask you to "
#~ "do so. On Linux and Mac OS "
#~ "you may need to open a partition"
#~ " manager and create a partition "
#~ "manually. You can create as many "
#~ "partitions as you want. We recommend "
#~ "FAT(32) if you want to access the"
#~ " partition from various operating systems."
#~ " Make sure to unmount/eject all "
#~ "partitions on the hidden volumes before"
#~ " locking or disconnecting the Nitrokey."
#~ msgstr ""
#~ "Изберете \"отключване на криптиран том\" "
#~ "и въведете потребителския си ПИН код."
#~ " Изберете \"отключване на скрит обем\" "
#~ "и въведете някоя от паролите на "
#~ "скрития обем'. Ако това се случва "
#~ "за първи път, може да се наложи"
#~ " да създадете дял на скрития том. "
#~ "Windows ще отвори подходящ прозорец и"
#~ " ще ви помоли да направите това. "
#~ "При Linux и Mac OS може да "
#~ "се наложи да отворите мениджър на "
#~ "дялове и да създадете дял ръчно. "
#~ "Можете да създадете толкова дялове, "
#~ "колкото искате. Препоръчваме ви FAT(32), "
#~ "ако искате да имате достъп до дяла"
#~ " от различни операционни системи. Не "
#~ "забравяйте да демонтирате/изхвърлите всички "
#~ "дялове на скритите томове, преди да "
#~ "заключите или изключите Nitrokey."

#~ msgid "Also see older but comprehensive Nitrokey Storage manual."
#~ msgstr ""
#~ "Вижте също по-старото, но изчерпателно "
#~ "ръководство за съхранение на Nitrokey."

