# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-31 15:35+0100\n"
"PO-Revision-Date: 2022-01-13 15:11+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language: lv\n"
"Language-Team: Latvian <https://translate.nitrokey.com/projects/nitrokey-"
"documentation/documentation-to-be-integrated/lv/>\n"
"Plural-Forms: nplurals=3; plural=(n % 10 == 0 || n % 100 >= 11 && n % 100"
" <= 19) ? 0 : ((n % 10 == 1 && n % 100 != 11) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../to-be-integrated.rst:1
msgid "# pro"
msgstr "# pro"

#: ../to-be-integrated.rst:5
msgid "PKCS#11 Driver"
msgstr "PKCS#11 draiveris"

#: ../to-be-integrated.rst:7
msgid ""
"If you want to use S/MIME email encryption with Thunderbird, to use "
"TrueCrypt/VeraCrypt, certificate-based SSL authentication with Firefox, "
"PuTTY/KiTTY, OpenSSH, OpenSSL, or any other PKCS#11 compatible software, "
"you should install OpenSC."
msgstr ""
"Ja vēlaties izmantot S/MIME e-pasta šifrēšanu ar Thunderbird, izmantot "
"TrueCrypt/VeraCrypt, uz sertifikātiem balstītu SSL autentifikāciju ar "
"Firefox, PuTTY/KiTTY, OpenSSH, OpenSSL vai jebkuru citu PKCS#11 saderīgu "
"programmatūru, jums jāinstalē OpenSC."

#: ../to-be-integrated.rst:9
msgid ""
"Note that a Nitrokey initialized with OpenSC doesn't work with "
"GnuPG/OpenPGP. But the other way around works fine. If you want to use "
"Nitrokey with both GnuPG and PKCS#11, generate the keys with GnuPG."
msgstr ""
"Ņemiet vērā, ka Nitrokey, kas inicializēts ar OpenSC, nedarbojas ar "
"GnuPG/OpenPGP. Bet otrādi darbojas labi. Ja vēlaties izmantot Nitrokey "
"gan ar GnuPG, gan PKCS#11, ģenerējiet atslēgas ar GnuPG."

#: ../to-be-integrated.rst:11
msgid ""
"Don't use PKCS#11 in parallel with GnuPG because both may interfere and "
"unexpected issues may result. (There is another promising project scd-"
"pkcs11 in development which may overcome this limitation eventually. "
"Currently it's limit to the authentication certificate and not widely "
"tested yet.)"
msgstr ""
"Nelietojiet PKCS#11 paralēli GnuPG, jo abi var traucēt un var rasties "
"neparedzētas problēmas. (Izstrādē ir vēl viens daudzsološs projekts scd-"
"pkcs11, kas ar laiku varētu pārvarēt šo ierobežojumu. Pašlaik tas "
"aprobežojas ar autentifikācijas sertifikātu un vēl nav plaši pārbaudīts.)"

#: ../to-be-integrated.rst:13
msgid ""
"Instructions, how to create a valid X.509 certificate with Nitrokey (1, "
"2, 3). These are general instructions how to use X.509 certificates. "
"Alternative PKCS#11 Driver:"
msgstr ""
"Instrukcijas, kā izveidot derīgu X.509 sertifikātu ar Nitrokey (1, 2, 3)."
" Šie ir vispārīgi norādījumi, kā izmantot X.509 sertifikātus. Alternatīvs"
" PKCS#11 draiveris:"

#: ../to-be-integrated.rst:16
msgid "The recommended PKCS#11 driver is OpenSC."
msgstr "Ieteicamais PKCS#11 draiveris ir OpenSC."

#: ../to-be-integrated.rst:18
msgid "Windows Mini Driver"
msgstr "Windows Mini draiveris"

#: ../to-be-integrated.rst:20
msgid ""
"This Mini Driver allows to integrate Nitrokey with Window's certificate "
"store. Subsequently all applications which use this certificate storage "
"can be used with Nitrokey (e.g. Internet Explorer, Google Chrome web "
"browser, Windows Login). To install the driver, you may need to allow the"
" installation of unsigned drivers first. Aloaha"
msgstr ""
"Šis mini draiveris ļauj integrēt Nitrokey ar Window's sertifikātu "
"krātuvi. Tādējādi visas lietojumprogrammas, kas izmanto šo sertifikātu "
"krātuvi, var izmantot ar Nitrokey (piemēram, Internet Explorer, Google "
"Chrome tīmekļa pārlūkprogrammu, Windows Login). Lai instalētu draiveri, "
"vispirms var būt nepieciešams atļaut neparakstītu draiveru instalēšanu. "
"Aloaha"

#: ../to-be-integrated.rst:23
msgid ""
"All applications of Aloaha are working with the Nitrokey. This includes a"
" middleware to integrate Nitrokey with other PKCS#11 based applications "
"and with Windows as well as applications to encrypt and sign PDFs and the"
" hard disk."
msgstr ""
"Visi Aloaha lietojumprogrammas lietojumi darbojas ar Nitrokey. Tas ietver"
" starpprogrammatūru, lai integrētu Nitrokey ar citām PKCS#11 bāzētām "
"lietojumprogrammām un ar Windows, kā arī lietojumprogrammām PDF failu un "
"cietā diska šifrēšanai un parakstīšanai."

#: ../to-be-integrated.rst:25
msgid "Alternative PKCS#11 Driver:"
msgstr "Alternatīvais PKCS#11 draiveris:"

#: ../to-be-integrated.rst:27
msgid ""
"The recommended PKCS#11 driver is OpenSC. Alternatively, you could use "
"Peter Koch's PKCS#11 driver which has the following limitations:"
msgstr ""
"Ieteicamais PKCS#11 draiveris ir OpenSC. Kā alternatīvu var izmantot "
"Peter Koch's PKCS#11 draiveri, kam ir šādi ierobežojumi:"

#: ../to-be-integrated.rst:29
msgid ""
"No import of existing X.509 certificates. (Instead, keys have to be "
"generated on the Nitrokey) The Linux version does not allow to generate "
"keys. Modification of the password/PIN under Linux is not possible."
msgstr ""
"Nav iespējams importēt esošos X.509 sertifikātus. (Tā vietā atslēgas ir "
"jāģenerē Nitrokey) Linux versija neļauj ģenerēt atslēgas. Linux "
"operētājsistēmā nav iespējams mainīt paroli/PIN kodu."

#: ../to-be-integrated.rst:33
msgid "p11-glue"
msgstr "p11-glue"

#: ../to-be-integrated.rst:35
msgid ""
"P11-glue uses PKCS#11 as glue between crypto libraries and security "
"applications on the open source desktop. Articles in German"
msgstr ""
"P11-glue izmanto PKCS#11 kā līmi starp kriptogrāfijas bibliotēkām un "
"drošības lietojumprogrammām atvērtā koda darbvirsmas vidē. Raksti vācu "
"valodā"

#: ../to-be-integrated.rst:38
msgid ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."
msgstr ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."

#: ../to-be-integrated.rst:44
msgid "**Q:** How can I login into Windows?"
msgstr "**K:** Kā es varu pieteikties sistēmā Windows?"

#: ../to-be-integrated.rst:44
msgid ""
"To access Nitrokey devices read-only, download and install this Mini "
"Driver (CSP). If you are using Windows Server you may need to disable the"
" driver signature verification before being able to install the driver. "
"Note that the Mini Driver for Nitrokey Pro may not work yet for write "
"mode."
msgstr ""
"Lai piekļūtu Nitrokey ierīcēm tikai lasīšanai, lejupielādējiet un "
"instalējiet šo Mini draiveri (CSP). Ja izmantojat Windows Server, pirms "
"draivera instalēšanas var būt nepieciešams atspējot draivera paraksta "
"pārbaudi. Ņemiet vērā, ka Nitrokey Pro mini draiveris vēl var nedarboties"
" rakstīšanas režīmā."

#: ../to-be-integrated.rst:46
msgid "There exist different ways to use a Nitrokey to logon on Windows:"
msgstr "Ir dažādi veidi, kā izmantot Nitrokey, lai pieteiktos sistēmā Windows:"

#: ../to-be-integrated.rst:48
msgid ""
"Login on stand alone Windows computers based on EIDAuthenticate. "
"Alternatively install OpenSC and use Aloaha Smart Login's PKCS#11 "
"Credentials. Login on Windows domain computers using MS Active Directory "
"based OpenPGP-CSP minidriver for Nitrokey Storage 2 Nitrokey Pro 2 Login "
"on Windows domain computers using MS Active Directory based on Smart "
"Policy for other Nitrokey devices."
msgstr ""
"Pieteikšanās atsevišķos Windows datoros, pamatojoties uz EIDAuthenticate."
" Alternatīvi instalējiet OpenSC un izmantojiet Aloaha Smart Login's "
"PKCS#11 Credentials. Pieslēgšanās Windows domēna datoros, izmantojot MS "
"Active Directory, pamatojoties uz OpenPGP-CSP minidriver Nitrokey Storage"
" 2 Nitrokey Pro 2 Pieslēgšanās Windows domēna datoros, izmantojot MS "
"Active Directory, pamatojoties uz Smart Policy citām Nitrokey ierīcēm."

#: ../to-be-integrated.rst:53
msgid "**Q:** How can I login into Linux? Linux Login with PAM"
msgstr "**Q:** Kā es varu pieteikties Linux sistēmā? Pieteikšanās Linux ar PAM"

#: ../to-be-integrated.rst:56
msgid "You have two options: pam_p11 or Poldi."
msgstr "Jums ir divas iespējas: pam_p11 vai Poldi."

#: ../to-be-integrated.rst:58
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on "
"S/MIME certificates. Please have a look at the documentation for more "
"information."
msgstr ""
"Risinājums ar pam_p11 ir grūtāk sasniedzams, un tā pamatā ir S/MIME "
"sertifikāti. Lūdzu, apskatiet dokumentāciju, lai iegūtu vairāk "
"informācijas."

#: ../to-be-integrated.rst:60
msgid ""
"Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication with "
"RSA keys (see Troubleshooting for information on ECC keys). Besides the "
"installation of poldi (e.g. 'sudo apt-get install libpam-poldi' on "
"Ubuntu) the following steps are needed to get it working."
msgstr ""
"Poldi 0.4.1 nevainojami darbojas ar Nitrokey PAM autentifikācijai ar RSA "
"atslēgām (informāciju par ECC atslēgām skatiet sadaļā Problēmu "
"novēršana). Papildus poldi instalēšanai (piemēram, 'sudo apt-get install "
"libpam-poldi' Ubuntu), lai tas darbotos, ir jāveic šādi pasākumi."

#: ../to-be-integrated.rst:62
msgid ""
"It is necessary to already have keys generated on the Nitrokey, as the "
"authentication key is used by PAM."
msgstr ""
"Ir nepieciešams, lai Nitrokey jau būtu ģenerētas atslēgas, jo "
"autentifikācijas atslēgu izmanto PAM."

#: ../to-be-integrated.rst:64
msgid ""
"At first you need to find out the \"Application ID\" of your Nitrokey. "
"You can use \"gpg --card-status | grep Application\" to find out what's "
"yours. It looks like 'D00600012401020000000000xxxxxxxx' or similiar. Now "
"you have to add a line to /etc/poldi/localdb/users which contains the "
"following information"
msgstr ""
"Vispirms ir jānoskaidro Nitrokey \"Pieteikuma ID\". Jūs varat izmantot "
"\"gpg --card-status | grep Application\", lai uzzinātu, kas ir jūsu. Tas "
"izskatās kā 'D006000124010200000000000000xxxxxxxxxx' vai līdzīgs. Tagad "
"jums /etc/poldi/localdb/users ir jāpievieno rinda, kurā ir šāda "
"informācija"

#: ../to-be-integrated.rst:66
msgid "<YourApplicationID> <YourUsername>"
msgstr "<YourApplicationID> <YourUsername>"

#: ../to-be-integrated.rst:68
msgid ""
"This could look like 'D00600012401020000000000xxxxxxxx nitrokeyuser'. Now"
" dump the public key from the Nitrokey into poldi local db:"
msgstr ""
"Tas varētu izskatīties kā 'D006000124010200000000000000xxxxxxxx "
"nitrokeyuser'. Tagad izgāziet publisko atslēgu no Nitrokey uz poldi "
"vietējo db:"

#: ../to-be-integrated.rst:70
msgid ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye'"
msgstr ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \" \"SCD READKEY --advanced"
" OPENPGP.3\" /bye'"

#: ../to-be-integrated.rst:72
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick!"
msgstr ""
"Lūdzu, ņemiet vērā, ka jūsu pieteikuma ID ir jāievada rindā, kas atrodas "
"virs jūsu nūjas!"

#: ../to-be-integrated.rst:74
msgid ""
"Then you have to configure PAM. Just add \"auth sufficient pam_poldi.so\""
" to pam configuration files according to your needs:"
msgstr ""
"Pēc tam ir jākonfigurē PAM. Vienkārši pievienojiet \"auth sufficient "
"pam_poldi.so\" pie pam konfigurācijas failiem atbilstoši savām "
"vajadzībām:"

#: ../to-be-integrated.rst:76
msgid ""
"/etc/pam.d/common-auth for graphical user login /etc/pam.d/login for "
"console login /etc/pam.d/sudo for sudo authentication /etc/pam.d/gnome-"
"screensaver for login back from a locked screen etc."
msgstr ""
"/etc/pam.d/common-auth grafiskajai lietotāja pieteikšanās sistēmai "
"/etc/pam.d/login konsoles pieteikšanās sistēmai /etc/pam.d/sudo sudo "
"autentifikācijai /etc/pam.d/gnome-screensaver pieteikšanās sistēmai no "
"bloķēta ekrāna utt."

#: ../to-be-integrated.rst:82
msgid ""
"Note: Pam is dangerous to play around with, so make sure you have a way "
"of accessing the machine if you break authentication completely. Remember"
" that booting into rescue mode from Grub requires a root password, so "
"keep that or a live CD which can read your filesystems to hand."
msgstr ""
"Piezīme: ar Pam ir bīstami spēlēties, tāpēc pārliecinieties, ka jums ir "
"veids, kā piekļūt ierīcei, ja pilnībā pārtraucat autentifikāciju. "
"Atcerieties, ka, lai no Grub bootētu glābšanas režīmā, ir nepieciešama "
"root parole, tāpēc turiet to vai dzīvu kompaktdisku, kas spēj nolasīt "
"failu sistēmas."

#: ../to-be-integrated.rst:84
msgid ""
"Here you find further instructions (in German, partially outdated). "
"Troubleshooting"
msgstr ""
"Šeit atradīsiet papildu norādījumus (vācu valodā, daļēji novecojuši). "
"Problēmu novēršana"

#: ../to-be-integrated.rst:87
msgid ""
"If you get an error similar to 'ERR 100663414 Invalid ID <SCD>' you "
"should try instead"
msgstr ""
"Ja parādās kļūda, kas līdzīga 'ERR 100663414 Nederīgs ID <SCD>', tā vietā"
" jāmēģina ievadīt"

#: ../to-be-integrated.rst:89
msgid ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"
msgstr ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"

#: ../to-be-integrated.rst:91
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick! ECC Keys Unfortunately, poldi has no "
"support for ECC keys yet. But there is a patch for ECC keys used with "
"Nitrokey Start. This is already included in the master branch of the "
"poldi development repository and thus will be released in a newer version"
" eventually. In the meantime the only option is to build poldi from "
"source."
msgstr ""
"Lūdzu, ņemiet vērā, ka jūsu pieteikuma ID ir jāievada rindā, kas atrodas "
"virs jūsu nūjas! ECC atslēgas Diemžēl poldi vēl neatbalsta ECC atslēgas. "
"Taču ir izstrādāts ECC atslēgu ielāps, ko izmanto ar Nitrokey Start. Tas "
"jau ir iekļauts poldi izstrādes repozitorija galvenajā atzarā, un "
"tādējādi ar laiku tiks izdots jaunākā versijā. Pagaidām vienīgā iespēja "
"ir izveidot poldi no pirmkoda."

#: ../to-be-integrated.rst:97
msgid "**Q:** How can I login with One Time Passwords?"
msgstr "**Ja var pieteikties, izmantojot vienreizējās paroles?"

#: ../to-be-integrated.rst:97
msgid ""
"One-Time-Passwords (OTP) are used for secure login to websites and local "
"applications."
msgstr ""
"Vienreizējās paroles (One-Time-Passwords, OTP) tiek izmantotas drošai "
"pieteikšanās vietnēm un vietējām lietojumprogrammām."

#: ../to-be-integrated.rst:99
msgid "Two OTP modes exist:"
msgstr "Ir divi OTP režīmi:"

#: ../to-be-integrated.rst:101
msgid ""
"Time-based One-time Passwords (TOTP) is widely used for websites. If "
"unsure, assume you are using this mode. HMAC-based One-time Passwords "
"(HOTP) is used for local applications and computer logins."
msgstr ""
"Uz laiku balstītas vienreizējās paroles (TOTP) tiek plaši izmantotas "
"tīmekļa vietnēs. Ja neesat pārliecināts, pieņemiet, ka izmantojat šo "
"režīmu. Uz HMAC balstītas vienreizējās paroles (HOTP) tiek izmantotas "
"vietējām lietojumprogrammām un datora pieteikšanās."

#: ../to-be-integrated.rst:104
msgid ""
"To use One-Time-Passwords with your Nitrokey Pro or Nitrokey Storage, you"
" need to download and install the latest Nitrokey App. Time-based One-"
"time Passwords - TOTP"
msgstr ""
"Lai izmantotu vienreizējās paroles ar Nitrokey Pro vai Nitrokey krātuvi, "
"ir nepieciešams lejupielādēt un instalēt jaunāko Nitrokey lietotni. Uz "
"laiku balstītas vienreizējās paroles - TOTP"

#: ../to-be-integrated.rst:107
msgid ""
"For login to a Google account. For login to a Microsoft account. For "
"login to a Nextcloud account. Generic instructions for all other "
"services."
msgstr ""
"Lai pieteiktos Google kontā. Lai pieteiktos Microsoft kontā. Pieslēgšanai"
" Nextcloud kontā. Vispārīgi norādījumi visiem pārējiem pakalpojumiem."

#: ../to-be-integrated.rst:112
msgid "**Q:** How can I use the Nitrokey Pro with Android?"
msgstr "**Q:** Kā es varu izmantot Nitrokey Pro ar Android?"

#: ../to-be-integrated.rst:114
msgid ""
"It is possible to use the Nitrokey on an Android devices in combination "
"with OpenKeychain. This enables one to encrypt/decrypt E-Mails or files "
"via OpenPGP."
msgstr ""
"Ir iespējams izmantot Nitrokey Android ierīcēs kopā ar OpenKeychain. Tas "
"ļauj šifrēt/dešifrēt e-pasta vēstules vai failus, izmantojot OpenPGP."

#: ../to-be-integrated.rst:116
msgid ""
"Cotech provides Android software with commercial support. Please have a "
"look there, if you like. The following instructions are based on "
"OpenKeychain."
msgstr ""
"Cotech nodrošina Android programmatūru ar komerciālu atbalstu. Ja "
"vēlaties, lūdzu, ielūkojieties tur. Turpmākie norādījumi ir balstīti uz "
"OpenKeychain."

#: ../to-be-integrated.rst:118
msgid ""
"Tested with Nitrokey Start, Pro and Storage in combination with Android "
"7.1, OpenKeychain 4.5 and K9Mail 5.207. Prerequisites"
msgstr ""
"Testēts ar Nitrokey Start, Pro un Storage kopā ar Android 7.1, "
"OpenKeychain 4.5 un K9Mail 5.207. Priekšnosacījumi"

#: ../to-be-integrated.rst:121
msgid ""
"Android phone which is capable of USB OTG USB OTG cable to connect the "
"Nitrokey with your phone OpenKeychain installed on Device Public key "
"saved on the device or uploaded on a keyserver"
msgstr ""
"Android tālrunis ar USB OTG USB OTG kabelis, lai savienotu Nitrokey ar "
"tālruni Ierīcē instalēta OpenKeychain Ierīcē saglabāta publiskā atslēga "
"vai augšupielādēta atslēgu serverī."

#: ../to-be-integrated.rst:126
msgid "First steps"
msgstr "Pirmie soļi"

#: ../to-be-integrated.rst:128
msgid ""
"To import the keys of the Nitrokey you should at first start the "
"OpenKeychain app. Then insert the Nitrokey with the USB OTG cable. "
"OpenKeychain starts a dialog to use the Nitrokey (you may have to accept "
"the usage of the key with OpenKeychain first). Now you can choose between"
" looking for public key on a keyserver or choosing the public key from "
"storage. After the public key got imported you have to tap on 'connect "
"key' to import a reference to the private key of the Nitrokey. That’s "
"basically it."
msgstr ""
"Lai importētu Nitrokey atslēgas, vispirms jāuzsāk lietotne OpenKeychain. "
"Pēc tam ievietojiet Nitrokey, izmantojot USB OTG kabeli. Programma "
"OpenKeychain atver dialoglodziņu, lai izmantotu Nitrokey (iespējams, "
"vispirms būs jāpieņem atslēgas izmantošana ar OpenKeychain). Tagad varat "
"izvēlēties, vai meklēt publisko atslēgu atslēgas serverī, vai izvēlēties "
"publisko atslēgu no krātuves. Pēc tam, kad publiskā atslēga ir importēta,"
" ir jāpieskarieties taustiņam 'connect key', lai importētu atsauci uz "
"Nitrokey privāto atslēgu. Tas būtībā ir viss."

#: ../to-be-integrated.rst:130
msgid ""
"In the case that no there are no keys on the Nitrokey yet, OpenKeychain "
"will help with the creation of a new key pair instead. Usage"
msgstr ""
"Ja Nitrokey vēl nav atslēgu, OpenKeychain palīdzēs izveidot jaunu atslēgu"
" pāri. Lietošana"

#: ../to-be-integrated.rst:133
msgid ""
"You can use all functions of OpenKeychain and Apps which make use of "
"OpenKeychain. Therefore you can just encrypt/decrypt messages or files by"
" hand using the app directly or for example you combine K9Mail with "
"OpenKeychain to decrypt your mails automatically. It is important to "
"choose the right key in the K9Mail account settings first."
msgstr ""
"Varat izmantot visas OpenKeychain funkcijas un lietotnes, kas izmanto "
"OpenKeychain. Tāpēc varat vienkārši šifrēt/dešifrēt ziņojumus vai failus "
"ar rokām, izmantojot tieši lietotni, vai, piemēram, apvienot K9Mail ar "
"OpenKeychain, lai automātiski atšifrētu e-pastus. Ir svarīgi vispirms "
"K9Mail konta iestatījumos izvēlēties pareizo atslēgu."

#: ../to-be-integrated.rst:135
msgid ""
"Note that you may have to enable the on-screen keyboard in the android "
"settings to type the PIN as the system recognizes the Nitrokey as a "
"physical keyboard and therefore tries to hide the on-screen keyboard. Go "
"to 'Language and Input' > 'Current Keyboard' > 'Hardware show input "
"method'."
msgstr ""
"Ņemiet vērā, ka, lai ievadītu PIN kodu, iespējams, būs jāiedarbina ekrāna"
" tastatūra Android iestatījumos, jo sistēma atpazīst Nitrokey kā fizisku "
"tastatūru un tāpēc mēģina paslēpt ekrāna tastatūru. Dodieties uz "
"'Language and Input' > 'Current Keyboard' > 'Hardware show input method'."

#: ../to-be-integrated.rst:138
msgid "**Q:** How can I use the Nitrokey Pro with Iphone?"
msgstr "**Q:** Kā es varu izmantot Nitrokey Pro ar Iphone?"

#: ../to-be-integrated.rst:139
msgid "Currently it is not possible"
msgstr "Pašlaik tas nav iespējams"

#: ../to-be-integrated.rst:141
msgid "**Q:** How can I use the Nitrokey Pro with Ubuntu Phone?"
msgstr "**Ja lietot Nitrokey Pro ar Ubuntu Phone?"

#: ../to-be-integrated.rst:141
msgid ""
"There are instructions on gnupg.org about how to use a OpenPGP Card on a "
"UbuntuPhone which should work for the Nitrokey Start, Pro and Storage."
msgstr ""
"Ir instrukcijas par gnupg.org par to, kā izmantot OpenPGP karti "
"UbuntuPhone, kam vajadzētu darboties Nitrokey Start, Pro un Storage."

#: ../to-be-integrated.rst:143
msgid ""
"**Q:** How can I do Email encryption? There are two widely used standards"
" for email encryption. While OpenPGP/GnuPG is popular among individuals, "
"S/MIME/X.509 is mostly used by enterprises. If you are in doubt which one"
" to choose, you should use OpenPGP."
msgstr ""
"**Q:** Kā es varu veikt e-pasta šifrēšanu? Pastāv divi plaši izmantoti "
"e-pasta šifrēšanas standarti. OpenPGP/GnuPG ir populārs privātpersonu "
"vidū, bet S/MIME/X.509 galvenokārt izmanto uzņēmumi. Ja šaubāties, kuru "
"no tiem izvēlēties, jāizmanto OpenPGP."

#: ../to-be-integrated.rst:146
msgid ""
"instructions for using the OpenPGP standard with the Nitrokey "
"instructions for using S/MIME with the Nitrokey. Note: SMIME certificates"
" can be purchased cheaply from CERTUM and SSLTrust."
msgstr ""
"norādījumi par OpenPGP standarta lietošanu ar Nitrokey norādījumi par "
"S/MIME lietošanu ar Nitrokey. Piezīme: SMIME sertifikātus var lēti "
"iegādāties no CERTUM un SSLTrust."

#: ../to-be-integrated.rst:149
msgid ""
"Please note, that it is currently advised to use either OpenPGP or S/MIME"
" encryption, but not both with the Nitrokey."
msgstr ""
"Lūdzu, ņemiet vērā, ka pašlaik ir ieteicams izmantot OpenPGP vai S/MIME "
"šifrēšanu, bet ne abus ar Nitrokey."

#: ../to-be-integrated.rst:151
msgid "To use a Nitrokey Storage with Thunderbird 78+, you can try this tutorial."
msgstr ""
"Lai izmantotu Nitrokey krātuvi ar Thunderbird 78+, varat izmēģināt šo "
"pamācību."

#: ../to-be-integrated.rst:153
msgid "**Q:** How can I do Hard Disk Encryption?"
msgstr "**Q:** Kā es varu veikt cietā diska šifrēšanu?"

#: ../to-be-integrated.rst:156
msgid ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (formerly "
"TrueCrypt)"
msgstr ""
"Par: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (agrāk "
"TrueCrypt)"

#: ../to-be-integrated.rst:159
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey "
"Storage or Pro:"
msgstr ""
"VeraCrypt ir bezmaksas atvērtā koda diska šifrēšanas programmatūra "
"operētājsistēmām Windows, macOS un GNU/Linux. Tā ir TrueCrypt pēctecis, "
"tāpēc ir ieteicama, lai gan turpmāk sniegtie norādījumi attiecas arī uz "
"TrueCrypt. Lai izmantotu programmu ar Nitrokey Storage vai Pro, izpildiet"
" šos soļus:"

#: ../to-be-integrated.rst:161 ../to-be-integrated.rst:673
msgid ""
"Install OpenSC Choose the library in VeraCrypt under "
"Settings>Preferences>Security Token (location depends on system, e.g. "
"/usr/lib/opensc). Generate a 64 Byte key file via Tools>Keyfile "
"Generator. Now you should be able to import the generated key file via "
"Tools>Manage Security Token Keyfiles. You should choose the first Slot "
"([0] User PIN). The keyfile is then stored on the Nitrokey as 'Private "
"Data Object 1' (PrivDO1). After this you should wipe the original keyfile"
" on your Computer securely! Now you can use VeraCrypt with the Nitrokey: "
"Create a container, choose the keyfile on the device as an alternative to"
" a password."
msgstr ""
"Instalējiet OpenSC Izvēlieties bibliotēku VeraCrypt sadaļā "
"Settings>Preferences>Security Token (atrašanās vieta atkarīga no "
"sistēmas, piemēram, /usr/lib/opensc). Izveidojiet 64 baitu atslēgas "
"failu, izmantojot Tools>Keyfile Generator. Tagad jums vajadzētu būt "
"iespējai importēt ģenerēto atslēgas failu, izmantojot Tools>Manage "
"Security Token Keyfiles. Jums jāizvēlas pirmais slots ([0] Lietotāja "
"PIN). Atslēgas fails tiek saglabāts Nitrokey kā 'Private Data Object 1' "
"(PrivDO1). Pēc tam oriģinālo atslēgas failu droši izdzēsiet savā datorā! "
"Tagad varat izmantot VeraCrypt ar Nitrokey: izveidojiet konteineru, "
"izvēlieties ierīcē esošo atslēgas failu kā alternatīvu parolei."

#: ../to-be-integrated.rst:168
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the PIN."
msgstr ""
"Drošības apsvērumi: Lūdzu, ņemiet vērā, ka VeraCrypt neizmanto visu "
"Nitrokey (un viedkaršu kopumā) piedāvāto drošību. Tā vietā Nitrokey "
"atmiņā tiek saglabāts atslēgas fails, kuru teorētiski var nozagt ar "
"datorvīrusu pēc tam, kad lietotājs ir ievadījis PIN kodu."

#: ../to-be-integrated.rst:170
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation."
msgstr ""
"Piezīme: Aloaha Crypt ir balstīts uz TrueCrypt/VeraCrypt, bet bez "
"aprakstītajiem drošības ierobežojumiem."

#: ../to-be-integrated.rst:173
msgid ""
"Hard Disk Encryption on Linux, Based on LUKS/dm-crypt Here are excellent "
"instructions how to use Nitrokey to encrypt your hard disk under Linux "
"with LUKS/dm-crypt. Other instruction."
msgstr ""
"Cietā diska šifrēšana Linux operētājsistēmā, izmantojot LUKS/dm-crypt "
"Šeit ir sniegtas lieliskas instrukcijas, kā izmantot Nitrokey, lai "
"šifrētu cieto disku Linux operētājsistēmā, izmantojot LUKS/dm-crypt. "
"Citas instrukcijas."

#: ../to-be-integrated.rst:176
msgid ""
"Purism has created a simple script to add the Nitrokey/LibremKey as a way"
" to unlock LUKS partitions (not tested by Nitrokey yet)."
msgstr ""
"Purism ir izveidojusi vienkāršu skriptu, lai pievienotu "
"Nitrokey/LibremKey kā veidu, kā atbloķēt LUKS nodalījumus (vēl nav "
"pārbaudīts ar Nitrokey)."

#: ../to-be-integrated.rst:178
msgid ""
"This project aims to ease the use of LUKS with the Nitrokey Pro or "
"Storage based on the Password Safe (not tested by Nitrokey yet). A "
"description on how to use it on Gentoo can be found here."
msgstr ""
"Šī projekta mērķis ir atvieglot LUKS lietošanu ar Nitrokey Pro vai uz "
"Password Safe balstītu krātuvi (Nitrokey vēl nav testēts). Apraksts, kā "
"to izmantot Gentoo sistēmā, ir atrodams šeit."

#: ../to-be-integrated.rst:180
msgid ""
"For Arch Linux, see initramfs-scencrypt. Storage Encryption on Linux, "
"Based on EncFS"
msgstr ""
"Arch Linux skatiet initramfs-scencrypt. Uzglabāšanas šifrēšana Linux "
"operētājsistēmā, pamatojoties uz EncFS"

#: ../to-be-integrated.rst:183
msgid ""
"Prerequisite: Please ensure that you installed the device driver, changed"
" the default PINs and generated or imported keys with GnuPG."
msgstr ""
"Priekšnosacījums: Lūdzu, pārliecinieties, ka esat instalējis ierīces "
"draiveri, mainījis noklusējuma PIN kodus un ģenerējis vai importējis "
"atslēgas ar GnuPG."

#: ../to-be-integrated.rst:185
msgid ""
"An easy to use encrypted file system is EncFS, which is based on FUSE. "
"You may follow these steps to use it with very long passwords and "
"Nitrokey:"
msgstr ""
"Viegli lietojama šifrēta failu sistēma ir EncFS, kuras pamatā ir FUSE. "
"Lai to izmantotu ar ļoti garām parolēm un Nitrokey, varat izpildīt šos "
"soļus:"

#: ../to-be-integrated.rst:187
msgid "Initialization"
msgstr "Inicializācija"

#: ../to-be-integrated.rst:189
msgid ""
"# Create a key file with random data: $ dd bs=64 count=1 if=/dev/urandom "
"of=keyfile"
msgstr ""
"# Izveidojiet atslēgas failu ar izlases datiem: $ dd bs=64 count=1 "
"if=/dev/urandom of=keyfile"

#: ../to-be-integrated.rst:192
msgid ""
"# Encrypt the key file and use the User-ID of your Nitrokey $ gpg "
"--encrypt keyfile"
msgstr ""
"# Šifrējiet atslēgas failu un izmantojiet Nitrokey lietotāja ID $ gpg "
"--encrypt keyfile"

#: ../to-be-integrated.rst:195
msgid ""
"# Remove the key file in clear text: $ rm keyfile # you may want to use "
"'wipe' or 'shred' to securely delete the keyfile"
msgstr ""
"# dzēst atslēgas failu tīrā tekstā: $ rm keyfile # lai droši dzēstu "
"atslēgas failu, varat izmantot 'wipe' vai 'shred'."

#: ../to-be-integrated.rst:198
msgid "# Create mount point: $ mkdir ~/.cryptdir ~/cryptdir"
msgstr "# Izveidot montāžas punktu: $ mkdir ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:201
msgid ""
"# Create the actual encryption folder $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"
msgstr ""
"# Izveidojiet faktisko šifrēšanas mapi $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:204
msgid ""
"# There may appears an error message about missing permission of "
"fusermount # This message can be ignored"
msgstr ""
"# Var parādīties kļūdas ziņojums par fusermount atļaujas trūkumu # Šo "
"ziņojumu var ignorēt"

#: ../to-be-integrated.rst:207
msgid "# Unmount the new file system: $ fusermount -u ~/cryptdir"
msgstr "# Atvienojiet jauno failu sistēmu: $ fusermount -u ~/cryptdir"

#: ../to-be-integrated.rst:210
msgid "Usage"
msgstr "Lietošana"

#: ../to-be-integrated.rst:212
msgid ""
"# Mount encrypted file system and enter PIN of Nitrokey: $ gpg -d "
"keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"
msgstr ""
"# Uzmontējiet šifrēto failu sistēmu un ievadiet Nitrokey PIN kodu: $ gpg "
"-d keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:215
msgid "# After usage, unmount the file system: $ fusermount -u ~/cryptdir"
msgstr "# Pēc lietošanas atvienojiet failu sistēmu: $ fusermount -u ~/cryptdir"

#: ../to-be-integrated.rst:219
msgid "Storage Encryption on Linux, Based on ECryptFS"
msgstr "Uzglabāšanas šifrēšana Linux operētājsistēmā, pamatojoties uz ECryptFS"

#: ../to-be-integrated.rst:221
msgid ""
"eCryptfs is a file based transparent encryption file system for Linux "
"which can be used with Nitrokey through a PKCS#11 driver. See these "
"instructions. Alternatively, try ESOSI or follow these steps using OpenSC"
" and OpenVPN:"
msgstr ""
"eCryptfs ir uz failiem balstīta caurspīdīga šifrēšanas failu sistēma "
"Linux, ko var izmantot ar Nitrokey, izmantojot PKCS#11 draiveri. Skatiet "
"šos norādījumus. Kā alternatīvu varat izmēģināt ESOSI vai izpildīt šos "
"soļus, izmantojot OpenSC un OpenVPN:"

#: ../to-be-integrated.rst:223
msgid "Warning: This will delete existing keys on your Nitrokey!"
msgstr "Brīdinājums: Tas izdzēsīs jūsu Nitrokey esošos taustiņus!"

#: ../to-be-integrated.rst:225
msgid ""
"# Import the certificate and key to the Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"
msgstr ""
"# Importējiet sertifikātu un atslēgu uz Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"

#: ../to-be-integrated.rst:228
msgid "# Create the file ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"
msgstr "# Izveidojiet failu ~/.ecryptfsrc.pkcs11: $ redaktors ~/.ecryptfsrc.pkcs11"

#: ../to-be-integrated.rst:231
msgid ""
"# Enter this content: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids path to opensc-pkcs11 module "
"Certificate"
msgstr ""
"# Ievadiet šo saturu: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=vārds,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids ceļš līdz opensc-pkcs11 modulim "
"sertifikāts"

#: ../to-be-integrated.rst:235
msgid ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Serial: 066E04 Serialized id: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"
msgstr ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Sērijas numurs: 066E04 Serialized id: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"

#: ../to-be-integrated.rst:239
msgid "# Copy the serialized id for later usage: $ ecryptfs-manager"
msgstr "# Kopējiet serializēto id vēlākai lietošanai: $ ecryptfs-manager"

#: ../to-be-integrated.rst:242
msgid ""
"# This will show list option. Choose option \"Add public key to keyring\""
" # Choose pkcs11-helper # Enter the serialized ID of step 3 to PKCS#11 "
"ID."
msgstr ""
"# Tas parādīs saraksta opciju. Izvēlieties opciju \"Add public key to "
"keyring\" # Izvēlieties pkcs11-helper # Ievadiet 3. soļa serializēto ID, "
"lai PKCS#11 ID."

#: ../to-be-integrated.rst:250
msgid "**Q:** How can I sign and encrypt Files and PDFs? GnuPG"
msgstr "**Q:** Kā es varu parakstīt un šifrēt failus un PDF failus? GnuPG"

#: ../to-be-integrated.rst:253
msgid ""
"Use the gpgsm tool to sign, verify, encrypt and decrypt files. Use a "
"signature key on a Nitrokey to sign documents using Acrobat Reader, Open "
"Office / Libre Office or any other PDF reader supporting electronic "
"signatures."
msgstr ""
"Izmantojiet gpgsm rīku, lai parakstītu, pārbaudītu, šifrētu un atšifrētu "
"failus. Izmantojiet Nitrokey paraksta atslēgu, lai parakstītu dokumentus,"
" izmantojot Acrobat Reader, Open Office/Libre Office vai jebkuru citu PDF"
" lasītāju, kas atbalsta elektroniskos parakstus."

#: ../to-be-integrated.rst:256
msgid "GPA - GNU Privacy Assistant"
msgstr "GPA - GNU privātuma palīgs"

#: ../to-be-integrated.rst:258
msgid ""
"The Gnu Privacy Assistant (GPA) recognizes Nitrokey out-of-the-box, has "
"various features to manage keys and cards. It also allows file operations"
" such as file encryption, decryption, signing."
msgstr ""
"Gnu Privacy Assistant (GPA) atpazīst Nitrokey jau gatavs, tam ir dažādas "
"funkcijas, lai pārvaldītu atslēgas un kartes. Tas arī ļauj veikt failu "
"operācijas, piemēram, failu šifrēšanu, atšifrēšanu, parakstīšanu."

#: ../to-be-integrated.rst:261
msgid "SOPS - Secrect OPerationS"
msgstr "SOPS - Secrect OPerationS"

#: ../to-be-integrated.rst:263
msgid ""
"SOPS is an editor of encrypted files that supports YAML, JSON and BINARY "
"formats and encrypts with AWS KMS and PGP. You can find it on github."
msgstr ""
"SOPS ir šifrētu failu redaktors, kas atbalsta YAML, JSON un BINARY "
"formātus un šifrē ar AWS KMS un PGP. To var atrast vietnē github."

#: ../to-be-integrated.rst:266
msgid "Aloaha"
msgstr "Aloaha"

#: ../to-be-integrated.rst:268
msgid ""
"Aloaha provides several applications to encrypt and sign PDFs. All of "
"them, which allow smart card integration, work with Nitrokey. You can for"
" example import key and certificate by using OpenSC or any other "
"appropriate variant. After this Windows recognize your certificate and "
"you can sign the document as it is shown in the screencast below."
msgstr ""
"Aloaha nodrošina vairākas lietojumprogrammas PDF failu šifrēšanai un "
"parakstīšanai. Visas tās, kas ļauj integrēt viedkarti, darbojas ar "
"Nitrokey. Jūs varat, piemēram, importēt atslēgu un sertifikātu, "
"izmantojot OpenSC vai jebkuru citu piemērotu variantu. Pēc tam Windows "
"atpazīs jūsu sertifikātu, un jūs varēsiet parakstīt dokumentu, kā tas "
"parādīts zemāk redzamajā ekrānskatē."

#: ../to-be-integrated.rst:270
msgid "GpgEx for Windows Explorer"
msgstr "GpgEx operētājsistēmai Windows Explorer"

#: ../to-be-integrated.rst:272
msgid ""
"GpgEx integrates smoothly into Windows Explorer to allow encryption and "
"decryption of files. Install it as part of the GPG4Win package."
msgstr ""
"GpgEx vienmērīgi integrējas Windows Explorer, lai varētu šifrēt un "
"atšifrēt failus. Instalējiet to kā daļu no GPG4Win paketes."

#: ../to-be-integrated.rst:275
msgid ""
"Before you start to use any of these applications with your Nitrokey, "
"please ensure that you installed the device driver and initialized the "
"device (e.g. generated keys)."
msgstr ""
"Pirms sākat lietot kādu no šīm lietojumprogrammām ar Nitrokey, "
"pārliecinieties, ka esat instalējis ierīces draiveri un inicializējis "
"ierīci (piemēram, ģenerējis atslēgas)."

#: ../to-be-integrated.rst:277
msgid ""
"Certificate-based login with TLS and web browser is a very secure "
"authentication method but it is only used rarely. If you are unsure what "
"this means, this approach is most likely not relevant for you."
msgstr ""
"Uz sertifikātu balstīta pieteikšanās ar TLS un tīmekļa pārlūkprogrammu ir"
" ļoti droša autentifikācijas metode, taču to izmanto reti. Ja neesat "
"pārliecināts, ko tas nozīmē, visticamāk, šī pieeja jums nav piemērota."

#: ../to-be-integrated.rst:279
msgid ""
"This page refers to websites and applications which support certificate "
"authentication, so that users don't need to enter username and password "
"when login. For instance WebID is a great protocol which makes use of it."
" Certificate authentication can be used easily with the Nitrokey and also"
" with any other certificate storages. Mozilla Firefox"
msgstr ""
"Šī lapa attiecas uz vietnēm un lietojumprogrammām, kas atbalsta "
"sertifikātu autentifikāciju, lai lietotājiem, pieslēdzoties, nebūtu "
"jāievada lietotājvārds un parole. Piemēram, WebID ir lielisks protokols, "
"kurā tas tiek izmantots. Sertifikātu autentifikāciju var viegli izmantot "
"ar Nitrokey, kā arī ar jebkuru citu sertifikātu krātuvi. Mozilla Firefox"

#: ../to-be-integrated.rst:282
msgid "You need to install the PKCS#11 driver:"
msgstr "Jāinstalē PKCS#11 draiveris:"

#: ../to-be-integrated.rst:284
msgid ""
"Download the PKCS11 driver and store it on your local hard disk or "
"install OpenSC. Open the Preferences in Firefox and go to  Privacy & "
"Security -> Security (just a headline) -> Button 'Security Devices...' "
"Press the button Load. Enter \"Nitrokey\" as the Module Name and press "
"the Browse button to select the previously downloaded PKCS11 driver file."
" Confirm and close all dialogs."
msgstr ""
"Lejupielādējiet PKCS11 draiveri un saglabājiet to vietējā cietajā diskā "
"vai instalējiet OpenSC. Atveriet Firefox preferences un atveriet sadaļu "
"Privātums & amp; Drošība -> Drošība (tikai virsraksts) -> Poga 'Drošības "
"ierīces...' Nospiediet pogu Ielādēt. Ievadiet \"Nitrokey\" kā moduļa "
"nosaukumu un nospiediet pogu Pārlūkot, lai izvēlētos iepriekš "
"lejupielādēto PKCS11 draivera failu. Apstipriniet un aizveriet visus "
"dialoglogus."

#: ../to-be-integrated.rst:288
msgid ""
"Now you are ready to access websites which provide certificate "
"authentication. Internet Explorer"
msgstr ""
"Tagad esat gatavs piekļūt vietnēm, kas nodrošina sertifikātu "
"autentifikāciju. Internet Explorer"

#: ../to-be-integrated.rst:291
msgid ""
"Install this Mini Driver for Windows. Now you are ready to access "
"websites which provide certificate authentication. Google Chrome"
msgstr ""
"Instalējiet šo Mini draiveri operētājsistēmai Windows. Tagad esat gatavs "
"piekļūt tīmekļa vietnēm, kas nodrošina sertifikātu autentifikāciju. "
"Google Chrome"

#: ../to-be-integrated.rst:294
msgid ""
"Under Windows, install this Mini Driver. Under Linux, follow these "
"instructions. Now you are ready to access websites which provide "
"certificate authentication. WebID"
msgstr ""
"Operētājsistēmā Windows instalējiet šo Mini draiveris. Linux "
"operētājsistēmā izpildiet šos norādījumus. Tagad esat gatavs piekļūt "
"tīmekļa vietnēm, kas nodrošina sertifikātu autentifikāciju. WebID"

#: ../to-be-integrated.rst:297
msgid ""
"WebID is a technology to enable secure and federated social websites. "
"Here is a video (WebM, Ogg video, H.264) which demonstrates how to use "
"Nitrokey to create a WebID profile and subsequently to use it in an "
"Internet cafe in Singapore. Nitrokey protects against computer viruses "
"which might otherwise steel the username and password. Websites Web Site"
"        Category CAcert  community-based Certificate Authority "
"PrivaSphere     Secure messaging HM Revenue & Customs    UK's tax "
"administration Software Application     Category Roundcube (plugin)      "
"Webmail Drupal (WebID, Certificate login)       Content management system"
" Media Wiki (plugin)     Wiki Joomla!         Content management system "
"Apache + mod_ssl        Web server OpenSSH         SSH (remote secure "
"shell) client and server Wordpress (plugin)      Blog and CMS Tivoli  "
"System management framework Globalscape EFT         managed file transfer"
" (MFT) Oracle Identity Manager         I&AM Fuse Source     Middleware "
"Liferay         Blog FusionForge     web-based project-management and "
"collaboration software"
msgstr ""
"WebID ir tehnoloģija, kas nodrošina drošu un federatīvu sociālo vietņu "
"izveidi. Šeit ir video (WebM, Ogg video, H.264), kurā parādīts, kā "
"izmantot Nitrokey, lai izveidotu WebID profilu, un pēc tam to izmantot "
"interneta kafejnīcā Singapūrā. Nitrokey aizsargā pret datorvīrusiem, kas "
"pretējā gadījumā varētu uzzināt lietotājvārdu un paroli. Tīmekļa vietnes "
"Tīmekļa vietņu kategorija CAcert kopienas sertifikātu iestāde PrivaSphere"
" Droša ziņojumapmaiņa HM Revenue & amp; Customs UK's nodokļu "
"administrācija Programmatūras lietojumprogrammu kategorija Roundcube "
"(spraudnis) Webmail Drupal (WebID, sertifikāta pieteikšanās) Satura "
"pārvaldības sistēma Media Wiki (spraudnis) Wiki Joomla!         Satura "
"pārvaldības sistēma Apache + mod_ssl Web serveris OpenSSH SSH (attālināta"
" droša čaulas kārba) klients un serveris Wordpress (spraudnis) Blogs un "
"CMS Tivoli Sistēmas pārvaldības sistēma Globalscape EFT pārvaldīta failu "
"pārsūtīšana (MFT) Oracle Identity Manager I&AM Fuse Source Middleware "
"Liferay Blog FusionForge tīmekļa projektu pārvaldības un sadarbības "
"programmatūra"

#: ../to-be-integrated.rst:319
msgid ""
"This website is a good read about strong authentication mechanisms, why "
"client certificate authentication isn't popular and better alternatives "
"at the horizon."
msgstr ""
"Šajā vietnē ir labi lasīt par spēcīgiem autentifikācijas mehānismiem, "
"kāpēc klienta sertifikāta autentifikācija nav populāra, un par labākajām "
"alternatīvām, kas tuvojas pie apvāršņa."

#: ../to-be-integrated.rst:321
msgid "**Q:** How can I use Enterprise Authentication?"
msgstr "**K:** Kā es varu izmantot uzņēmuma autentifikāciju?"

#: ../to-be-integrated.rst:323
msgid ""
"LinOTP privacyIDEA RCDevs OpenOTP Usage of Nitrokey HSM as a secure key "
"store for the Forgerock OpenDJ server and Forgerock Identity Gateway"
msgstr ""
"LinOTP privacyIDEA RCDevs OpenOTP Nitrokey HSM izmantošana kā droša "
"atslēgu glabātuve Forgerock OpenDJ serverim un Forgerock Identity "
"Gateway."

#: ../to-be-integrated.rst:329
msgid ""
"**Q:** How can I do SSH for Server Administration on Windows? The "
"Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"**Q:** Kā es varu veikt SSH servera administrēšanai operētājsistēmā "
"Windows? Nitrokey jau jābūt instalētām PGP atslēgām, un vietējai GnuPG "
"atslēgu kopai jābūt informētai par atslēgām, t. i., sistēmā jābūt "
"instalētai GPG4Win (nepieciešama tikai GnuPG pamatprogramma). Turklāt "
"jāinstalē PuTTY. Klienta sagatavošana"

#: ../to-be-integrated.rst:333 ../to-be-integrated.rst:705
msgid ""
"There are two steps needed to make PuTTY work. At first we need to enable"
" PuTTY support of GnuPG. To achieve this we use the following command:"
msgstr ""
"Lai PuTTY darbotos, ir jāveic divi soļi. Vispirms mums ir jāiedarbina "
"PuTTY GnuPG atbalsts. Lai to panāktu, izmantojam šādu komandu:"

#: ../to-be-integrated.rst:335 ../to-be-integrated.rst:707
msgid "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"
msgstr "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"

#: ../to-be-integrated.rst:337 ../to-be-integrated.rst:709
msgid ""
"Now we want to make sure, that the gpg-agent is starting automatically in"
" the background (you can start it manually with the command below, if you"
" prefer). We create a shortcut to gpg-connect-agent.exe. Press and hold "
"the Windows-key and press 'R'. Type in \"shell:startup\" in the opening "
"textfield (see picture below). The Windows-Explorer opens and you right-"
"click on an empty space and choose \"New\" -> \"Shortcut\". Now you "
"should insert the actual command and proceed:"
msgstr ""
"Tagad mēs vēlamies pārliecināties, ka gpg-agents tiek automātiski "
"palaists fonā (ja vēlaties, varat to palaist manuāli, izmantojot zemāk "
"redzamo komandu). Mēs izveidojam īsceļu uz gpg-connect-agent.exe. "
"Nospiediet un turiet nospiestu taustiņu Windows un nospiediet 'R'. "
"Ievadiet \"shell:startup\" atverošajā teksta laukā (skatīt attēlu zemāk)."
" Atveras Windows-Explorer, un jūs noklikšķiniet ar peles labo pogu uz "
"tukšās vietas un izvēlieties \"New\" -> \"Shortcut\". Tagad jums "
"jāievieto faktiskā komanda un jāturpina darbs:"

#: ../to-be-integrated.rst:339 ../to-be-integrated.rst:711
msgid "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"
msgstr "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"

#: ../to-be-integrated.rst:343 ../to-be-integrated.rst:715
msgid ""
"Reboot your system to make sure the shortcut works. If everything is "
"alright you now can use PuTTY as usual and PuTTY will make use of the "
"Nitrokey automatically. Preparation for the server"
msgstr ""
"Pārstartējiet sistēmu, lai pārliecinātos, ka saīsne darbojas. Ja viss ir "
"kārtībā, tagad varat izmantot PuTTY kā parasti, un PuTTY automātiski "
"izmantos Nitrokey. Servera sagatavošana"

#: ../to-be-integrated.rst:346 ../to-be-integrated.rst:718
msgid "You can generate an authorized_keys file by running"
msgstr "Autorizēto_atslēgu failu var ģenerēt, izpildot"

#: ../to-be-integrated.rst:348 ../to-be-integrated.rst:720
msgid ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"
msgstr ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">>> autorizētie_atslēgas"

#: ../to-be-integrated.rst:350 ../to-be-integrated.rst:722
msgid ""
"where 'keyID' is either the fingerprint of your key or just the E-Mail "
"address bind to your key. The Nitrokey must already be known to the local"
" GnuPG keyring. You can now append that file to a remote server's "
"authorized_keys and when you ssh to the server you'll be asked for a pin "
"rather than a passphrase."
msgstr ""
"kur 'keyID' ir vai nu atslēgas pirkstu nospiedums, vai tikai e-pasta "
"adrese, kas piesaistīta atslēgai. Nitro atslēgai jau jābūt zināmai "
"vietējai GnuPG atslēgu kopai. Tagad jūs varat pievienot šo failu "
"attālinātā servera autorizēto_atslēgu datnei, un, kad jūs ssh uz serveri,"
" jums tiks prasīts PIN kods, nevis parole."

#: ../to-be-integrated.rst:357
msgid "**Q:** How can I do SSH for Server Administration on Linux?"
msgstr "**Q:** Kā es varu veikt SSH servera administrēšanai Linux sistēmā?"

#: ../to-be-integrated.rst:359 ../to-be-integrated.rst:726
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys. Preparation on client"
msgstr ""
"Nitrokey jau ir jābūt instalētām PGP atslēgām, un vietējai GnuPG atslēgu "
"kopai ir jāzina atslēgas. Klienta sagatavošana"

#: ../to-be-integrated.rst:362 ../to-be-integrated.rst:729
msgid ""
"Make sure ~/.gnupg/gpg.conf contains 'use-agent' Add ssh support to "
"gnupg-agent by adding 'enable-ssh-support' to ~/.gnupg/gpg-agent.conf If "
"the file does not exist yet, you can just create it. Add the following "
"code somewhere into your ~/.bashrc (for fish shell, look here)"
msgstr ""
"Pārliecinieties, ka ~/.gnupg/gpg.conf satur 'use-agent' Pievienojiet ssh "
"atbalstu gnupg-agent, pievienojot 'enable-ssh-ssh-support' uz ~/.gnupg"
"/gpg-agent.conf Ja faila vēl nav, varat to vienkārši izveidot. "
"Pievienojiet kaut kur savā ~/.bashrc šādu kodu (fish shell gadījumā "
"skatiet šeit)"

#: ../to-be-integrated.rst:367 ../to-be-integrated.rst:734
msgid ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"
msgstr ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"

#: ../to-be-integrated.rst:372 ../to-be-integrated.rst:739
msgid ""
"Simply restart your system or try pkill gpg-agent and open a new "
"commandline to make sure everything is set In case of problems, please "
"try gpg2 --card-status on first usage to make sure the gpg-agent gets "
"started"
msgstr ""
"Vienkārši restartējiet sistēmu vai izmēģiniet pkill gpg-agent un atveriet"
" jaunu komandrindu, lai pārliecinātos, ka viss ir iestatīts Problēmas "
"gadījumā, lūdzu, izmēģiniet gpg2 --card-status pirmajā lietošanas reizē, "
"lai pārliecinātos, ka gpg-agent tiek palaists."

#: ../to-be-integrated.rst:375 ../to-be-integrated.rst:742
msgid "Preparation for the server"
msgstr "Servera sagatavošana"

#: ../to-be-integrated.rst:377 ../to-be-integrated.rst:744
msgid "You can generate an authorized_keys file by running either"
msgstr "Autorizēto_atslēgu failu var ģenerēt, izpildot vai nu"

#: ../to-be-integrated.rst:379 ../to-be-integrated.rst:746
msgid ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) or "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(for newer GnuPG "
"versions)"
msgstr ""
"gpgkey2ssh keyID >> ~/authorized_keys #(GnuPG versijai <= 2.1.11) vai "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(jaunākajām GnuPG "
"versijām)"

#: ../to-be-integrated.rst:382 ../to-be-integrated.rst:749
msgid "where"
msgstr "kur"

#: ../to-be-integrated.rst:384 ../to-be-integrated.rst:751
msgid "keyID"
msgstr "keyID"

#: ../to-be-integrated.rst:386 ../to-be-integrated.rst:753
msgid ""
"is the subkey id being used for authentication on your Nitrokey. The "
"Nitrokey must already be known to the local GnuPG keyring. You can now "
"append that file to a remote server's authorized_keys and when you ssh to"
" the server you'll be asked for a pin rather than a passphrase."
msgstr ""
"ir apakšatslēgas id, kas tiek izmantots Nitrokey autentifikācijai. "
"Nitrokey jau ir jābūt zināmam vietējai GnuPG atslēgu kopai. Tagad jūs "
"varat pievienot šo failu attālinātā servera autorizētajiem_atslēgiem, un,"
" ssh pieslēdzoties serverim, jums tiks prasīts PIN kods, nevis parole."

#: ../to-be-integrated.rst:389 ../to-be-integrated.rst:756
msgid "Troubleshooting"
msgstr "Problēmu novēršana"

#: ../to-be-integrated.rst:391 ../to-be-integrated.rst:758
msgid "If you are still asked for a password please make sure that"
msgstr "Ja jums joprojām tiek pieprasīta parole, pārliecinieties, ka."

#: ../to-be-integrated.rst:393 ../to-be-integrated.rst:760
msgid "echo $SSH_AUTH_SOCK"
msgstr "echo $SSH_AUTH_SOCK"

#: ../to-be-integrated.rst:395 ../to-be-integrated.rst:762
msgid ""
"returns something reasonable like '/run/user/1000/gnupg/S.gpg-agent.ssh' "
"or '/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were "
"some changes in GnuPG in the past so that the actual content can differ "
"from system and GnuPG version. On some systems there may are even "
"multiple folders in this variable saved. You have to adapt the above "
"given code in .bashrc so that the variable SSH_AUTH_SOCK is correct. In "
"doubt look for 'SSH_AUTH_SOCK' in"
msgstr ""
"atgriež kaut ko saprātīgu, piemēram, '/run/user/1000/gnupg/S.gpg-"
"agent.ssh' vai '/home/username/.gnupg/.S.gpg-agent.ssh'. Diemžēl pagātnē "
"GnuPG ir bijušas dažas izmaiņas, tāpēc faktiskais saturs var atšķirties "
"atkarībā no sistēmas un GnuPG versijas. Dažās sistēmās šajā mainīgajā var"
" būt saglabātas pat vairākas mapes. Jums ir jāpielāgo iepriekš dotais "
"kods .bashrc, lai mainīgais SSH_AUTH_SOCK būtu pareizs. Ja rodas šaubas, "
"meklējiet 'SSH_AUTH_SOCK' in"

#: ../to-be-integrated.rst:397 ../to-be-integrated.rst:764
msgid "man gpg-agent"
msgstr "man gpg-agent"

#: ../to-be-integrated.rst:399 ../to-be-integrated.rst:766
msgid "to find the actual code for your version/system."
msgstr "lai atrastu jūsu versijai/sistēmai atbilstošo kodu."

#: ../to-be-integrated.rst:401 ../to-be-integrated.rst:768
msgid ""
"You may check if you have a 'pinentry' program installed via your package"
" manager. You may need to set it in the gpg-agent.conf as well. You may "
"need to point gpg-agent to the correct TTY."
msgstr ""
"Varat pārbaudīt, vai ir instalēta 'pinentry' programma, izmantojot "
"pakotņu pārvaldnieku. Iespējams, ka to būs nepieciešams iestatīt arī gpg-"
"agent.conf. Jums var būt nepieciešams norādīt gpg-agent uz pareizo TTY."

#: ../to-be-integrated.rst:415
msgid "**Q:** How can I use the Nitrokey for VPN access?"
msgstr "**Q:** Kā es varu izmantot Nitrokey VPN piekļuvei?"

#: ../to-be-integrated.rst:418 ../to-be-integrated.rst:789
msgid "For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"
msgstr "Par: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"

#: ../to-be-integrated.rst:421 ../to-be-integrated.rst:792
msgid "Generate a key on Nitrokey via pkcs11-tool."
msgstr "Izveidojiet atslēgu Nitrokey, izmantojot pkcs11 rīku."

#: ../to-be-integrated.rst:423 ../to-be-integrated.rst:794
msgid "Generate a certificate signing request via openssl + pkcs11 module:"
msgstr ""
"Sertifikāta parakstīšanas pieprasījuma ģenerēšana, izmantojot openssl + "
"pkcs11 moduli:"

#: ../to-be-integrated.rst:425 ../to-be-integrated.rst:796
msgid ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:427 ../to-be-integrated.rst:798
msgid "Sign the certificate with our certificate authority"
msgstr "Parakstiet sertifikātu, izmantojot mūsu sertifikātu iestādi"

#: ../to-be-integrated.rst:429 ../to-be-integrated.rst:800
msgid ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:431 ../to-be-integrated.rst:478
#: ../to-be-integrated.rst:802 ../to-be-integrated.rst:849
msgid "Import  the certificate into the Nitrokey via pkcs11-tool"
msgstr "Sertifikāta importēšana Nitrokey, izmantojot pkcs11 rīku"

#: ../to-be-integrated.rst:433 ../to-be-integrated.rst:804
msgid "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"
msgstr "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"

#: ../to-be-integrated.rst:435 ../to-be-integrated.rst:806
msgid "Read the certificate's ID required for openvpn configuration:"
msgstr "Lasīt sertifikātu's ID, kas nepieciešams openvpn konfigurācijai:"

#: ../to-be-integrated.rst:437 ../to-be-integrated.rst:808
msgid "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"
msgstr "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"

#: ../to-be-integrated.rst:439 ../to-be-integrated.rst:810
msgid ""
"Modify your openvpn configuration. Add the certificate ID which you "
"gathered in the previous step: E.g."
msgstr ""
"Mainiet openvpn konfigurāciju. Pievienojiet iepriekšējā solī iegūto "
"sertifikāta ID: piem."

#: ../to-be-integrated.rst:441 ../to-be-integrated.rst:812
msgid ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"
msgstr ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"

#: ../to-be-integrated.rst:443 ../to-be-integrated.rst:814
msgid "Add the PKCS#11 driver to the configuration too, e.g.:"
msgstr "Konfigurācijai pievienojiet arī PKCS#11 draiveri, piemēram:"

#: ../to-be-integrated.rst:445 ../to-be-integrated.rst:816
msgid "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"
msgstr "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"

#: ../to-be-integrated.rst:447 ../to-be-integrated.rst:818
msgid "See this link for further information."
msgstr "Lai iegūtu papildu informāciju, skatiet šo saiti."

#: ../to-be-integrated.rst:451 ../to-be-integrated.rst:822
msgid ""
"Now all configurations are done. When executing OpenVPN client, "
"Nitrokey's PIN needs to be entered. Unfortunately OpenVPN doesn't prompt "
"to enter the PIN and it has to be entered in the following way:"
msgstr ""
"Tagad visas konfigurācijas ir pabeigtas. Izpildot OpenVPN klientu, ir "
"jāievada Nitrokey's PIN kods. Diemžēl OpenVPN nepiedāvā ievadīt PIN kodu,"
" un tas ir jāievada šādā veidā:"

#: ../to-be-integrated.rst:453 ../to-be-integrated.rst:824
msgid "$ telnet 8888 password 'User PIN (OpenPGP card) token' <PIN>"
msgstr "$ telnet 8888 parole 'Lietotāja PIN (OpenPGP karte) token' <PIN>"

#: ../to-be-integrated.rst:455 ../to-be-integrated.rst:826
msgid ""
"Alternatively you could recompile OpenVPN client with systemd support "
"disabled and it will prompt you for the PIN as expected. Alternatively to"
" the OpenVPN client you could use the Viscosity client which provides a "
"better user experience especially for entering the PIN."
msgstr ""
"Alternatīvi jūs varētu pārkompilēt OpenVPN klientu ar atspējotu systemd "
"atbalstu, un tas pieprasīs PIN kodu, kā paredzēts. Kā alternatīvu OpenVPN"
" klientam jūs varētu izmantot Viscosity klientu, kas nodrošina labāku "
"lietotāja pieredzi, jo īpaši PIN ievadīšanai."

#: ../to-be-integrated.rst:458 ../to-be-integrated.rst:829
msgid "IPsec"
msgstr "IPsec"

#: ../to-be-integrated.rst:460 ../to-be-integrated.rst:831
msgid "Strong Swan works using the PKCS#11 driver. Basically follow these steps:"
msgstr ""
"Strong Swan darbojas, izmantojot PKCS#11 draiveri. Pamatā veiciet šādas "
"darbības:"

#: ../to-be-integrated.rst:462 ../to-be-integrated.rst:833
msgid ""
"Generate a key on Nitrokey via pkcs11-tool. In this example it's a 4096 "
"bit RSA key."
msgstr ""
"Izveidojiet atslēgu Nitrokey, izmantojot pkcs11 rīku. Šajā piemērā tā ir "
"4096 bitu RSA atslēga."

#: ../to-be-integrated.rst:464 ../to-be-integrated.rst:835
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"

#: ../to-be-integrated.rst:466 ../to-be-integrated.rst:837
msgid "Generate a certificate signing request via openssl + pkcs11 module"
msgstr ""
"Sertifikāta parakstīšanas pieprasījuma ģenerēšana, izmantojot openssl + "
"pkcs11 moduli"

#: ../to-be-integrated.rst:468 ../to-be-integrated.rst:839
msgid ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"
msgstr ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organisation/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"

#: ../to-be-integrated.rst:472 ../to-be-integrated.rst:843
msgid "Sign the certificate with your certificate authority"
msgstr "Parakstiet sertifikātu ar savu sertifikātu iestādi"

#: ../to-be-integrated.rst:474 ../to-be-integrated.rst:845
msgid "Convert the certificate to DER"
msgstr "Sertifikāta konvertēšana uz DER"

#: ../to-be-integrated.rst:476 ../to-be-integrated.rst:847
msgid ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"
msgstr ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"

#: ../to-be-integrated.rst:480 ../to-be-integrated.rst:851
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"

#: ../to-be-integrated.rst:482 ../to-be-integrated.rst:853
msgid ""
"Configure Strongswan to load opensc-pkcs11 module then to load the "
"certificate on Nitrokey. Edit /etc/strongswan.d/charon/pkcs11.conf and "
"add the following module:"
msgstr ""
"Konfigurējiet Strongswan, lai ielādētu opensc-pkcs11 moduli un pēc tam "
"ielādētu Nitrokey sertifikātu. Rediģējiet "
"/etc/strongswan.d/charon/pkcs11.conf un pievienojiet šādu moduli:"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "modules {"
msgstr "moduļi {"

#: ../to-be-integrated.rst:485 ../to-be-integrated.rst:856
msgid "Nitrokey {"
msgstr "Nitrokey {"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"
msgstr "ceļš = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"

#: ../to-be-integrated.rst:487 ../to-be-integrated.rst:488
#: ../to-be-integrated.rst:858 ../to-be-integrated.rst:859
msgid "}"
msgstr "}"

#: ../to-be-integrated.rst:490 ../to-be-integrated.rst:861
msgid ""
"Initiate the VPN connection via IPSec/Strongswan, then prompt for "
"Nitrokey PIN"
msgstr ""
"Iniciējiet VPN savienojumu, izmantojot IPSec/Strongswan, pēc tam "
"pieprasiet Nitrokey PIN kodu."

#: ../to-be-integrated.rst:492 ../to-be-integrated.rst:863
msgid "8. VPN is now connected Stunnel"
msgstr "8. VPN tagad ir savienots Stunelis"

#: ../to-be-integrated.rst:495 ../to-be-integrated.rst:866
msgid ""
"Stunnel works as an SSL encryption wrapper between remote client and "
"local (inetd-startable) or remote server. It can be used to add SSL "
"functionality to commonly used inetd daemons like POP2, POP3, and IMAP "
"servers without any changes in the programs' code."
msgstr ""
"Stunnel darbojas kā SSL šifrēšanas apvalks starp attālo klientu un "
"vietējo (inetd palaižamu) vai attālo serveri. To var izmantot, lai "
"pievienotu SSL funkcionalitāti parasti izmantotajiem inetd dēmoniem, "
"piemēram, POP2, POP3 un IMAP serveriem, nemainot programmu kodu."

#: ../to-be-integrated.rst:497 ../to-be-integrated.rst:868
msgid "Stunnel is able to load OpenSC PKCS#11 engine using this configuration:"
msgstr "Izmantojot šo konfigurāciju, Stunnel spēj ielādēt OpenSC PKCS#11 dzinēju:"

#: ../to-be-integrated.rst:499 ../to-be-integrated.rst:870
msgid ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"
msgstr ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"

#: ../to-be-integrated.rst:507 ../to-be-integrated.rst:878
msgid "[service] engineNum=1 key=id_45"
msgstr "[service] engineNum=1 key=id_45"

#: ../to-be-integrated.rst:525
msgid "**Q:** How can I do PKI / Certificate Authority (CA)?"
msgstr "**Q:** Kā es varu izveidot PKI / sertifikātu iestādi (CA)?"

#: ../to-be-integrated.rst:527
msgid "CA keys are very sensitive and must not be compromised or lost. GnuPG"
msgstr ""
"CA atslēgas ir ļoti sensitīvas, un tās nedrīkst kompromitēt vai pazaudēt."
" GnuPG"

#: ../to-be-integrated.rst:530
msgid "Instructions OpenSSL"
msgstr "Instrukcijas OpenSSL"

#: ../to-be-integrated.rst:533
msgid ""
"Install OpenSC'S engine_pkcs11 Run the command \"pkcs11-tool --list-"
"slots\" to list the available slots. Run the command \"openssl> req "
"-engine pkcs11 -new -key slot_X-id_XXXX -keyform engine -x509 -out "
"cert.pem -text\" where X is the appropriate slot number and XXXX is the "
"slot ID, e.g. \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"
msgstr ""
"Instalējiet OpenSC'S engine_pkcs11 Palaidiet komandu \"pkcs11-tool "
"--list-slots\", lai uzskaitītu pieejamos slotus. Izpildiet komandu "
"\"openssl> req -engine pkcs11 -new -key slot_X-id_XXXX -keyform engine "
"-x509 -out cert.pem -text\" kur X ir attiecīgais slota numurs un XXXX ir "
"slota ID, piemēram, \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Tests"

#: ../to-be-integrated.rst:538
msgid "Other"
msgstr "Citi"

#: ../to-be-integrated.rst:540
msgid ""
"Please see this PDF (p. 30) from heinlein-support.de for summarized "
"instructions in German."
msgstr ""
"Apkopotas instrukcijas vācu valodā skatiet šajā PDF dokumentā (30. lpp.) "
"no heinlein-support.de."

#: ../to-be-integrated.rst:542
msgid ""
"µ-CA-tool is a script based on GnuPG, OpenSC and OpenSSL which helps to "
"perform basic tasks of a CA. It works with Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"µ-CA rīks ir skripts, kas balstīts uz GnuPG, OpenSC un OpenSSL un palīdz "
"veikt CA pamatdarbības. Tas darbojas ar Nitrokey Pro un Nitrokey Storage."

#: ../to-be-integrated.rst:550
msgid "**Q:** How can I use the password manager?"
msgstr "**Q:** Kā es varu izmantot paroļu pārvaldnieku?"

#: ../to-be-integrated.rst:552
msgid "You have the following options:"
msgstr "Jums ir šādas iespējas:"

#: ../to-be-integrated.rst:554
msgid ""
"Use Nitrokey's built-in Password Safe to store passwords securely. For "
"this you need the Nitrokey App. Maximum are 16 passwords. Use Pass "
"(simple commandline password manager for Unix systems, mainly for "
"experts). Use KeePass as described below."
msgstr ""
"Drošai paroļu glabāšanai izmantojiet Nitrokey iebūvēto paroļu seifu. Šim "
"nolūkam ir nepieciešama Nitrokey lietotne. Maksimālais paroļu skaits ir "
"16. Izmantojiet Pass (vienkāršs komandrindas paroļu pārvaldnieks Unix "
"sistēmām, galvenokārt ekspertiem). Izmantojiet KeePass, kā aprakstīts "
"tālāk."

#: ../to-be-integrated.rst:558
msgid "Protecting KeePass with Nitrokey's One-Time Passwords"
msgstr "KeePass aizsardzība ar Nitrokey vienreizējām parolēm"

#: ../to-be-integrated.rst:560
msgid ""
"You can also follow this video (It contains a mistake around time 4:22 "
"which is described later below). Keepass Installation"
msgstr ""
"Varat arī sekot šim video (tajā ir kļūda ap 4:22 minūti, kas aprakstīta "
"tālāk tekstā). Keepass instalēšana"

#: ../to-be-integrated.rst:563
msgid ""
"Install Keepass 2.3.5. For Ubuntu: Because the main repository contains "
"the older 2.3.4, you have to use some other source like this private PPA "
"(please run these commands in terminal):"
msgstr ""
"Instalējiet Keepass 2.3.5. Ubuntu: Jums ir jāizmanto kāds cits avots, "
"piemēram, šis privātais PPA (lūdzu, izpildiet šīs komandas terminālī):"

#: ../to-be-integrated.rst:566
msgid ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"
msgstr ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"

#: ../to-be-integrated.rst:570
msgid ""
"Install the OtpKeyProv plugin by downloading the archive, unzipping and "
"copying the content to Keypass' Plugin directory. On Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ For Linux, optional: Install "
"mono-complete package if plugin is not detected when running Keepass2 "
"(you can check that in Tools/Plugins):"
msgstr ""
"Instalējiet OtpKeyProv spraudni, lejupielādējot arhīvu, atvienojiet un "
"nokopējiet saturu uz Keypass' spraudņa direktoriju. Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ Linux operētājsistēmā, pēc "
"izvēles: Instalējiet mono-komplektu pakotni, ja spraudnis netiek atklāts,"
" kad tiek palaists Keepass2 (to var pārbaudīt sadaļā Tools/Plugins):"

#: ../to-be-integrated.rst:574
msgid "sudo apt-get install mono-complete"
msgstr "sudo apt-get install mono-complete"

#: ../to-be-integrated.rst:576
msgid "Keepass OTP Configuration Existing Database"
msgstr "Keepass OTP konfigurācija Esošā datubāze"

#: ../to-be-integrated.rst:579
msgid ""
"Do a backup of your database and keep it until you are really sure "
"everything works fine! Make sure you really did a backup. If you mess up,"
" your passwords are lost! Open database as usual Select File/Change "
"Master Key..."
msgstr ""
"Veiciet datu bāzes dublējumu un saglabājiet to, līdz esat patiešām "
"pārliecināts, ka viss darbojas pareizi! Pārliecinieties, ka patiešām esat"
" izveidojis dublējumu. Ja jūs kļūdīsieties, jūsu paroles būs zaudētas! "
"Atveriet datubāzi kā parasti Izvēlieties Failu/ Mainīt galveno atslēgu..."

#: ../to-be-integrated.rst:584
msgid "New Database"
msgstr "Jauna datubāze"

#: ../to-be-integrated.rst:586
msgid "Create new database as usual"
msgstr "Jaunas datubāzes izveide kā parasti"

#: ../to-be-integrated.rst:588
msgid "Common"
msgstr "Kopējais"

#: ../to-be-integrated.rst:590
msgid ""
"Insert Master Password (optional) Set Key file / provider: to One-Time "
"Passwords (OATH HOTP) Click OK With Nitrokey App: select HOTP slot and "
"generate HOTP secret (it will be copied to clipboard automatically). "
"Note: You may want write down this secret and store it anywhere secure. "
"Otherwise if you lose your Nitrokey or it gets broken your password "
"database is lost as well!!! Paste the secret to Keepass OTP Plugin window"
" Make sure the Counter field and digits count are set the same in both "
"windows. Click OK in Nitrokey App to save the slot. Select secret type: "
"Base32 Set the other settings as you like. Please consult plugin's manual"
" (should be in same downloaded archive). I would recommend to set look-"
"ahead value to non-zero to prevent locking up the database after "
"accidental code request from used HOTP slot. In that case counters on the"
" device and in Keepass would be out of sync and OTP codes will not be the"
" same with expected."
msgstr ""
"Ievietojiet galveno paroli (pēc izvēles) Iestatiet atslēgas failu / "
"pakalpojumu sniedzēju: uz vienreizējām parolēm (OATH HOTP) Noklikšķiniet "
"uz OK Ar Nitrokey App: izvēlieties HOTP slotu un ģenerējiet HOTP "
"noslēpumu (tas tiks automātiski nokopēts uz starpliktuvi). Piezīme: Jūs "
"varat pierakstīt šo noslēpumu un uzglabāt to drošā vietā. Pretējā "
"gadījumā, ja jūs pazaudēsiet Nitrokey vai tas tiks salauzts, tiks zaudēta"
" arī jūsu paroļu datubāze!!! Ievietojiet noslēpumu Keepass OTP spraudņa "
"logā Pārliecinieties, ka skaitītāja lauks un ciparu skaits abos logos ir "
"iestatīts vienāds. Nospiediet OK Nitrokey lietotnē, lai saglabātu slotu. "
"Izvēlieties slepenības veidu: Izvēlieties tipu Base32 Iestatiet citus "
"iestatījumus, kā jums patīk. Lūdzu, skatiet spraudņa rokasgrāmatu (tai "
"jābūt tajā pašā lejupielādētajā arhīvā). Es ieteiktu iestatīt Look-ahead "
"vērtību, kas nav nulle, lai novērstu datubāzes bloķēšanu pēc nejauša kodu"
" pieprasījuma no izmantotā HOTP slota. Tādā gadījumā skaitītāji ierīcē un"
" Keepass netiks sinhronizēti un OTP kodi nesakritīs ar gaidītajiem."

#: ../to-be-integrated.rst:599
msgid "Unlocking Database"
msgstr "Datu bāzes atbloķēšana"

#: ../to-be-integrated.rst:601
msgid ""
"Open database Insert Master Password (if set) Key file / provider: to "
"One-Time Passwords (OATH HOTP) Press OK Insert HOTP codes by repeatedly "
"choosing proper HOTP slot from the Nitrokey App and pasting the clipboard"
" content to proper field (the order of the codes is important). Press OK"
msgstr ""
"Atveriet datubāzi Ievietojiet galveno paroli (ja ir iestatīta) Atslēgas "
"fails / pakalpojumu sniedzējs: uz vienreizējām parolēm (OATH HOTP) "
"Nospiediet OK Ievietojiet HOTP kodus, atkārtoti izvēloties pareizo HOTP "
"slotu no Nitrokey lietotnes un ielīmējot starpliktuves saturu pareizajā "
"laukā (kodu secība ir svarīga). Nospiediet OK"

#: ../to-be-integrated.rst:608
msgid "Issues"
msgstr "Jautājumi"

#: ../to-be-integrated.rst:610
msgid ""
"Due to nature of HOTP solution it is possible to get counters "
"desynchronized (by selecting wrong OTP slot during day-to-day use). Using"
" look-ahead plugin's setting should prevent that (value 10 or so should "
"suffice - depends on desired security requirements - this would allow to "
"10 accidental requests). TOTP is not having that problem. Setting the OTP"
" protection could be error-prone. There is no secret validation on "
"OtpKeyProv side. In the test movie at 4:22 I have managed to set the "
"Base32 coded secret as Hex (which was not a proper hex value) and it has "
"not complained about it. There is no information what happened to "
"database and how it is now configured. I have not noticed until I have "
"watched the movie."
msgstr ""
"HOTP risinājuma būtības dēļ ir iespējams desinhronizēt skaitītājus "
"(ikdienas lietošanas laikā izvēloties nepareizu OTP slotu). Izmantojot "
"Look-ahead spraudņa iestatījumu, tas būtu jānovērš (vajadzētu pietikt ar "
"vērtību 10 vai aptuveni 10 - atkarībā no vēlamajām drošības prasībām - "
"tas ļautu veikt līdz 10 nejaušiem pieprasījumiem). TOTP nav šādas "
"problēmas. OTP aizsardzības iestatīšana varētu būt saistīta ar kļūdām. "
"OtpKeyProv pusē nav slepenas apstiprināšanas. Testa filmiņā 4:22 man ir "
"izdevies iestatīt Base32 kodētu noslēpumu kā Hex (kas nebija pareiza hex "
"vērtība), un tas par to nav sūdzējies. Nav informācijas, kas noticis ar "
"datu bāzi un kā tā tagad ir konfigurēta. Es neesmu pamanījis, kamēr "
"neesmu noskatījies filmu."

#: ../to-be-integrated.rst:613
msgid "Tested under Ubuntu 16.10, Nitrokey App v0.6.3 and Nitrokey Storage v0.45."
msgstr "Testēts ar Ubuntu 16.10, Nitrokey App v0.6.3 un Nitrokey Storage v0.45."

#: ../to-be-integrated.rst:622
msgid "**Q:** How can I use the True Random Number Generator?"
msgstr "**Q:** Kā es varu izmantot True Random Number Generator?"

#: ../to-be-integrated.rst:624
msgid ""
"Both devices are compatible to the OpenPGP Card, so that scdrand should "
"work. This script may be useful. The TRNG provides about 40 kbit/s."
msgstr ""
"Abas ierīces ir saderīgas ar OpenPGP karti, tāpēc scdrand vajadzētu "
"strādāt. Šis skripts var būt noderīgs. TRNG nodrošina aptuveni 40 kbit/s."

#: ../to-be-integrated.rst:626
msgid ""
"The user comio created a systemd file to use scdrand and thus the TRNG "
"more generally. He created a ebuild for Gentoo, too."
msgstr ""
"Lietotājs comio izveidoja systemd failu, lai izmantotu scdrand un "
"tādējādi TRNG vispārīgāk. Viņš izveidoja arī Gentoo e-komplektu."

#: ../to-be-integrated.rst:632
msgid "**Q:** Do you have resources for development and integration?"
msgstr "**Q:** Vai jums ir resursi izstrādes un integrācijas nodrošināšanai?"

#: ../to-be-integrated.rst:635
msgid ""
"Use Nitrokey library to manage the one-time passwords and password safe "
"functionality. The project nitrokey-get-totp and nitrokey-get-password "
"are nice examples for using the python bindings of Nitrokey library to "
"get a custom interface. In order to access the integrated smart card, you"
" can use OpenSC's command line tools. If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. To work with the smart card low "
"level, see the OpenPGP Card specification. The source code of the "
"firmware and the hardware layout are available too. To develop special "
"applications or for command line access one can use the nitrocli created "
"by d-e-s-o. Gkey is a go-based command line tool to access the Password "
"Safe and OTP entries. A libnitrokey wrapper for Rust providing access to "
"Nitrokey devices."
msgstr ""
"Izmantojiet Nitrokey bibliotēku, lai pārvaldītu vienreizējās paroles un "
"paroles seifa funkcionalitāti. Projekti nitrokey-get-totp un nitrokey-"
"get-password ir labi piemēri Nitrokey bibliotēkas python sasaistes "
"izmantošanai, lai iegūtu pielāgotu saskarni. Lai piekļūtu integrētajai "
"viedkartei, varat izmantot OpenSC'komandrindas rīkus. Ja jūsu "
"lietojumprogrammai ir PKCS#11 saskarne, izmantojiet OpenSC'PKCS#11 "
"draiveri. Lai strādātu ar viedkarti zemā līmenī, skatiet OpenPGP kartes "
"specifikāciju. Ir pieejams arī programmaparatūras pirmkods un aparatūras "
"izkārtojums. Speciālu lietojumprogrammu izstrādei vai komandrindas "
"piekļuvei var izmantot d-e-s-o izveidoto nitrocli. Gkey ir uz go balstīts"
" komandrindas rīks, lai piekļūtu paroles seifam un OTP ierakstiem. "
"Libnitrokey ietvars Rust, kas nodrošina piekļuvi Nitrokey ierīcēm."

#: ../to-be-integrated.rst:646
msgid "# HSM 2"
msgstr "# HSM 2"

#: ../to-be-integrated.rst:648
msgid ""
"**Nitrokey HSM:** 124 dataobjects (DF, EF) can be created. Each EF can "
"have a size of up to 256 byte. The total storage capacity of ca. 32 KByte"
" is shared dynamically among keys and data objects."
msgstr ""
"**Nitrokey HSM:** Var izveidot 124 datu objektus (DF, EF). Katra EF "
"izmērs var būt līdz 256 baitiem. Kopējā atmiņas ietilpība ir aptuveni 32 "
"KByte, un to dinamiski sadala starp atslēgām un datu objektiem."

#: ../to-be-integrated.rst:652
msgid "**Q:** How to use the HSM for Login For: Nitrokey HSM"
msgstr "**Q:** Kā izmantot HSM, lai pieteiktos: Nitrokey HSM"

#: ../to-be-integrated.rst:655
msgid "Select your use case:"
msgstr "Izvēlieties lietošanas gadījumu:"

#: ../to-be-integrated.rst:657
msgid ""
"Login With Nitrokey HSM on Stand Alone Windows Computers Login With "
"Nitrokey HSM on Windows Domain Computers Using MS Active Directory For "
"Unix environments an integration with PAM and OpenSSH is available."
msgstr ""
"Pieslēgšanās ar Nitrokey HSM atsevišķos Windows datoros Pieslēgšanās ar "
"Nitrokey HSM Windows domēna datoros, izmantojot MS Active Directory Unix "
"vidēm ir pieejama integrācija ar PAM un OpenSSH."

#: ../to-be-integrated.rst:661
msgid "**Q:**  How to use the HSM for Email Encryption"
msgstr "**Q:** Kā izmantot HSM e-pasta šifrēšanai"

#: ../to-be-integrated.rst:663
msgid ""
"Encrypt your email using the S/MIME industry standard available in all "
"major e-mail clients."
msgstr ""
"Šifrējiet e-pastu, izmantojot S/MIME nozares standartu, kas pieejams "
"visos lielākajos e-pasta klientos."

#: ../to-be-integrated.rst:665
msgid ""
"The Nitrokey HSM has been tested to work with Mozilla Thunderbird and "
"Microsoft Outlook. Other email clients with support for PKCS#11 or "
"Microsoft CSP should work as well."
msgstr ""
"Nitrokey HSM ir pārbaudīts darbam ar Mozilla Thunderbird un Microsoft "
"Outlook. Būtu jādarbojas arī citiem e-pasta klientiem ar PKCS#11 vai "
"Microsoft CSP atbalstu."

#: ../to-be-integrated.rst:667
msgid "Note: A certificate can be purchased cheaply from CERTUM."
msgstr "Piezīme: Sertifikātu var lēti iegādāties CERTUM."

#: ../to-be-integrated.rst:669
msgid "**Q:**   How to use the Nitrokey for Hard Disk Encryption with VeraCrpt?"
msgstr "**Q:** Kā izmantot Nitrokey cietā diska šifrēšanai ar VeraCrpt?"

#: ../to-be-integrated.rst:671
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey:"
msgstr ""
"VeraCrypt ir bezmaksas atvērtā koda diska šifrēšanas programmatūra "
"operētājsistēmām Windows, macOS un GNU/Linux. Tā ir TrueCrypt pēctecis, "
"tāpēc ir ieteicama, lai gan turpmāk sniegtie norādījumi attiecas arī uz "
"TrueCrypt. Lai izmantotu programmu ar Nitrokey, izpildiet šos soļus:"

#: ../to-be-integrated.rst:680
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the password."
msgstr ""
"Drošības apsvērumi: Lūdzu, ņemiet vērā, ka VeraCrypt neizmanto visu "
"Nitrokey (un viedkaršu kopumā) piedāvāto drošību. Tā vietā Nitrokey "
"atmiņā tiek saglabāts atslēgas fails, kuru teorētiski var nozagt ar "
"datorvīrusu pēc tam, kad lietotājs ir ievadījis paroli."

#: ../to-be-integrated.rst:682
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation. (Not tested with Nitrokey HSM!)"
msgstr ""
"Piezīme: Aloaha Crypt ir balstīts uz TrueCrypt/VeraCrypt, taču bez "
"aprakstītajiem drošības ierobežojumiem. (Nav testēts ar Nitrokey HSM!)"

#: ../to-be-integrated.rst:685
msgid "**Q:** How to sign and encrypt files and pdfs?"
msgstr "**Q:** Kā parakstīt un šifrēt failus un pdf failus?"

#: ../to-be-integrated.rst:687
msgid "GnuPG"
msgstr "GnuPG"

#: ../to-be-integrated.rst:689
msgid ""
"Starting with version 2.1, GnuPG has build-in but limited support for the"
" Nitrokey HSM. Use the gpgsm tool to sign, verify, encrypt and decrypt "
"files or S/MIME messaging using your Nitrokey HSM. Use a signature key on"
" a Nitrokey HSM to sign documents using Acrobat Reader, Open Office / "
"Libre Office or any other PDF reader supporting electronic signatures. "
"ECC HSM Encryptor"
msgstr ""
"Sākot ar versiju 2.1, GnuPG ir iebūvēts, bet ierobežots atbalsts Nitrokey"
" HSM. Izmantojiet rīku gpgsm, lai parakstītu, pārbaudītu, šifrētu un "
"atšifrētu failus vai S/MIME ziņojumus, izmantojot Nitrokey HSM. "
"Izmantojiet Nitrokey HSM paraksta atslēgu, lai parakstītu dokumentus, "
"izmantojot Acrobat Reader, Open Office/Libre Office vai jebkuru citu PDF "
"lasītāju, kas atbalsta elektroniskos parakstus. ECC HSM šifrētājs"

#: ../to-be-integrated.rst:692
msgid ""
"ECC HSM Encryptor is a small application to encrypt and decrypt files "
"with a Nitrokey HSM."
msgstr ""
"ECC HSM Encryptor ir neliela lietojumprogramma, lai šifrētu un atšifrētu "
"failus ar Nitrokey HSM."

#: ../to-be-integrated.rst:694
msgid ""
"**Q:** How to do certificat-based Web login Protect access to sensitive "
"information on your website with 2nd factor authentication."
msgstr ""
"**Q:** Kā veikt uz sertifikātu balstītu tīmekļa pieteikšanos Aizsargājiet"
" piekļuvi sensitīvai informācijai savā tīmekļa vietnē, izmantojot 2. "
"faktora autentifikāciju."

#: ../to-be-integrated.rst:697
msgid ""
"Use a Nitrokey HSM as authentication token via the build-in device "
"authentication PKI or use keys and certificates on a Nitrokey HSM for "
"TLS/SSL client authentication."
msgstr ""
"Izmantojiet Nitrokey HSM kā autentifikācijas žetonu, izmantojot iebūvēto "
"ierīces autentifikācijas PKI, vai izmantojiet Nitrokey HSM atslēgas un "
"sertifikātus TLS/SSL klienta autentifikācijai."

#: ../to-be-integrated.rst:699
msgid ""
"**Q:** SSH for Server Administration with windows For: Nitrokey Pro, "
"Nitrokey Storage, Nitrokey Start, Nitrokey HSM"
msgstr ""
"**Q:** SSH servera administrēšanai ar Windows For: Nitrokey Pro, Nitrokey"
" Storage, Nitrokey Start, Nitrokey HSM"

#: ../to-be-integrated.rst:702
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"Nitrokey jau jābūt instalētām PGP atslēgām, un vietējai GnuPG atslēgu "
"kopai jābūt informētai par šīm atslēgām, t. i., sistēmā jābūt instalētai "
"GPG4Win (nepieciešama tikai GnuPG pamatprogramma). Turklāt jāinstalē "
"PuTTY. Klienta sagatavošana"

#: ../to-be-integrated.rst:724
msgid "**Q:** SSH Server administration on linux"
msgstr "**Q:** SSH servera administrēšana operētājsistēmā linux"

#: ../to-be-integrated.rst:771
msgid "**Q:** DNSSEC"
msgstr "**Q:** DNSSEC"

#: ../to-be-integrated.rst:774
msgid "For: Nitrokey HSM"
msgstr "Par: Nitrokey HSM"

#: ../to-be-integrated.rst:776
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resource apply:"
msgstr ""
"Aizsargājiet domēna vārdu izšķirtspēju, izmantojot DNSSEC un Nitrokey HSM"
" kā drošu atslēgu krātuvi. Tas ir balstīts uz Smartcard-HSM, tāpēc ir "
"piemērojami šādi resursi:"

#: ../to-be-integrated.rst:778
msgid ""
"Signing NSD DNSSEC Zones with Nitrokey HSM by Vadim Penzin. Integration "
"with OpenDNSSEC has been successfully tested in a demo by Richard Lamb. "
"Luis D Espinoza Sanchez & Eberhard W Lisse held a session on using the "
"SmartCard-HSM for DNSSEC at the 2015 ICAAN Meeting in Singapore. Jan-Piet"
" Mens wrote a nice article about integrating the SmartCard-HSM with "
"PowerDNS."
msgstr ""
"NSD DNSSEC zonu parakstīšana ar Nitrokey HSM Vadim Penzin. Integrāciju ar"
" OpenDNSSEC veiksmīgi izmēģinājis Ričards Lambs (Richard Lamb). Luis D "
"Espinoza Sanchez & amp; Eberhard W Lisse 2015. gada ICAAN sanāksmē "
"Singapūrā rīkoja sesiju par SmartCard-HSM izmantošanu DNSSEC. Jan-Piet "
"Mens uzrakstīja labu rakstu par SmartCard-HSM integrēšanu ar PowerDNS."

#: ../to-be-integrated.rst:784
msgid ""
"**Q:** Physical Access Control With it's unique build-in device "
"authentication PKI, a Nitrokey HSM has a cryptographically protected "
"unique identity that can be verified in a fast authentication protocol. "
"An access control terminal can verify authenticity and identity of the "
"device, create a secure communication channel and perform offline PIN "
"verification. The coolPACS project has all the details."
msgstr ""
"**Q:** Fiziskās piekļuves kontrole Pateicoties unikālajam iebūvētajam "
"ierīces autentifikācijas PKI, Nitrokey HSM ir kriptogrāfiski aizsargāta "
"unikāla identitāte, ko var pārbaudīt ar ātru autentifikācijas protokolu. "
"Piekļuves kontroles terminālis var pārbaudīt ierīces autentiskumu un "
"identitāti, izveidot drošu sakaru kanālu un veikt PIN verifikāciju "
"bezsaistē. Visa informācija ir pieejama coolPACS projektā."

#: ../to-be-integrated.rst:787 ../to-be-integrated.rst:883
msgid "**Q:**"
msgstr "**Q:**"

#: ../to-be-integrated.rst:885
msgid "PKI / Certificate Authority (CA)"
msgstr "PKI / sertifikātu iestāde (CA)"

#: ../to-be-integrated.rst:887
msgid "**Q:** Secret Management and Cloud Infrastructure"
msgstr "**Q:** Slepenā pārvaldība un mākoņu infrastruktūra"

#: ../to-be-integrated.rst:889
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey "
"HSM can be found at banzaicloud.com."
msgstr ""
"Pieeja drošu atslēgu nodrošināšanai Hashicorp Vault/Bank-Vault uz "
"Nitrokey HSM ir atrodama banzaicloud.com."

#: ../to-be-integrated.rst:891
msgid "**Q:** How to do N-of-m Schemes"
msgstr "**Q:** Kā veikt N-of-m shēmas"

#: ../to-be-integrated.rst:893
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure"
" sharing of key material/passwords and one for public key authentication "
"to control the access to the device. Please see this blog post for more "
"detailed information. N-of-m for DKEK Shares"
msgstr ""
"Nitrokey HSM 2 atbalsta divas dažādas n-of-m shēmas - vienu drošai "
"atslēgas materiālu/paroļu koplietošanai un otru publiskās atslēgas "
"autentifikācijai, lai kontrolētu piekļuvi ierīcei. Sīkāku informāciju "
"skatiet šajā bloga ierakstā. N-of-m DKEK koplietošanai"

#: ../to-be-integrated.rst:896
msgid ""
"This feature can be used with OpenSC as described here. The general "
"approach is seen in the videos below (external links)."
msgstr ""
"Šo funkciju var izmantot kopā ar OpenSC, kā aprakstīts šeit. Vispārējā "
"pieeja ir redzama tālāk pievienotajos videoklipos (ārējās saites)."

#: ../to-be-integrated.rst:898
msgid "Nitrokey HSM's Secure Key Backup and Restore:"
msgstr "Nitrokey HSM's Droša atslēgu dublēšana un atjaunošana:"

#: ../to-be-integrated.rst:900
msgid "Screencast"
msgstr "Ekrānraides"

#: ../to-be-integrated.rst:902
msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
msgstr "Nitrokey HSM's M-of-N sliekšņa shēma:"

#: ../to-be-integrated.rst:904
msgid "screencast N-of-m for public key authentication"
msgstr "publiskās atslēgas autentifikācijas ekrānkarte N-of-m"

#: ../to-be-integrated.rst:907
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. The blog post"
" gives an overview and a how-to here (CDN access required) is shown the "
"process step by step in the Smart Card Shell. For OpenSC there is a "
"ticket to get that integrated."
msgstr ""
"Līdz šim n-of-m autentifikācija ir atbalstīta tikai OpenSCDP. Bloga "
"ierakstā sniegts pārskats, un šeit (nepieciešama CDN piekļuve) ir "
"parādīts process soli pa solim Smart Card Shell. Attiecībā uz OpenSC ir "
"biļete, lai to integrētu."

#: ../to-be-integrated.rst:909
msgid ""
"n-of-m authentication is also supported in the PKI-as-a-Service Portal "
"for locally and remote connected HSMs. The PKI-as-a-Service Portal is "
"based on OpenSCDP."
msgstr ""
"PKI kā pakalpojuma portālā tiek atbalstīta arī n-of-m autentifikācija "
"lokāli un attālināti savienotiem HSM. PKI kā pakalpojuma portāls ir "
"balstīts uz OpenSCDP."

#: ../to-be-integrated.rst:911
msgid "**Q:** How to safe Cryptocurrences in the Nitrokey HSM"
msgstr "**Q:** Kā droši ievadīt kriptogrāfijas Nitrokey HSM?"

#: ../to-be-integrated.rst:914
msgid ""
"J.v.d.Bosch wrote a simple, free python program to secure the private key"
" of a Bitcoin wallet in a HSM. See here for further information. Using "
"the HSM in an Ethereum PoA Chain. Tezos has been reported to work with "
"Nitrokey HSM."
msgstr ""
"J.v.d.Bosch uzrakstīja vienkāršu, bezmaksas python programmu, lai "
"nodrošinātu Bitcoin maku privāto atslēgu HSM. Sīkāku informāciju skatīt "
"šeit. HSM izmantošana Ethereum PoA ķēdē. Ir ziņots, ka Tezos darbojas ar "
"Nitrokey HSM."

#: ../to-be-integrated.rst:918
msgid ""
"**Q:** How to use the True Random Number Generator? Nitrokey HSM can be "
"used with Botan and TokenTools by using OpenSC as a PKCS#11 driver."
msgstr ""
"**Q:** Kā izmantot True Random Number Generator? Nitrokey HSM var "
"izmantot ar Botan un TokenTools, izmantojot OpenSC kā PKCS#11 draiveri."

#: ../to-be-integrated.rst:921
msgid ""
"OpenSSL can't use Nitrokey HSM's RNG directly because engine-pkcs11 "
"doesn't contain a mapping for OpenSSL to C_GenerateRandom."
msgstr ""
"OpenSSL nevar tieši izmantot Nitrokey HSM's RNG, jo engine-pkcs11 nesatur"
" OpenSSL kartēšanu uz C_GenerateRandom."

#: ../to-be-integrated.rst:923
msgid "**Q:** What can I use for development and integration?"
msgstr "**K:** Ko es varu izmantot izstrādei un integrācijai?"

#: ../to-be-integrated.rst:925
msgid ""
"se OpenSC's commandline tools If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. Depending on your Linux "
"distribution, the PKCS driver may may be located at /usr/lib/x86_64"
"-linux-gnu/opensc-pkcs11.so for example."
msgstr ""
"Ja jūsu lietojumprogrammā ir PKCS#11 saskarne, izmantojiet OpenSC'PKCS#11"
" draiveri. Atkarībā no jūsu Linux distribūcijas PKCS draiveris var "
"atrasties, piemēram, /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so."

#: ../to-be-integrated.rst:927
msgid ""
"Alternatively to OpenSC, you might use sc-hsm-embedded PKCS#11 and CSP-"
"Minidriver Module."
msgstr ""
"Kā alternatīvu OpenSC var izmantot sc-hsm-embedded PKCS#11 un CSP-"
"Minidriver Module."

#: ../to-be-integrated.rst:928
msgid ""
"In case you use Java, you find a JCE Provider as part of Smart Card "
"Shell. You can find information about the m-of-n scheme here. Secure "
"Messaging can be used with the JCE provider. Please register at the "
"CardContact Developer Network to get access to the user manual and "
"further tools. You can also request the manual from us. Smart card "
"forwarding with Fedora A user generated tool on GitHub to provide an easy"
" frontend to OpenSCs toolset - nitrotool A forum post describes the "
"procedure to sign executables with a key stored on HSM on Windows."
msgstr ""
"Ja izmantojat Java, JCE Provider ir daļa no Smart Card Shell. Informāciju"
" par m-of-n shēmu var atrast šeit. Drošu ziņojumapmaiņu var izmantot kopā"
" ar JCE pakalpojumu sniedzēju. Lūdzu, reģistrējieties CardContact "
"Developer Network, lai iegūtu piekļuvi lietotāja rokasgrāmatai un citiem "
"rīkiem. Rokasgrāmatu varat arī pieprasīt no mums. Viedkaršu pārsūtīšana "
"ar Fedora Lietotāja radīts rīks GitHub vietnē, lai nodrošinātu vienkāršu "
"priekšpusi OpenSC rīku komplektam - nitrotool Foruma ierakstā aprakstīta "
"procedūra izpildāmo failu parakstīšanai ar atslēgu, kas glabājas HSM "
"sistēmā Windows."

#: ../to-be-integrated.rst:936
msgid "Key Use Counter"
msgstr "Galvenais izmantošanas skaitītājs"

#: ../to-be-integrated.rst:938
msgid ""
"The Key Use Counter is displayed in the Key Manager of the Smart Card "
"Shell. At the moment you can only set it with a script "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter in the class "
"scsh/sc-hsm/SmartCardHSM.js)."
msgstr ""
"Atslēgu izmantošanas skaitītājs tiek parādīts viedkartes apvalka atslēgu "
"pārvaldniekā Key Manager (Atslēgu pārvaldnieks). Pašlaik to var iestatīt "
"tikai ar skripta palīdzību "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter klasē scsh/sc-"
"hsm/SmartCardHSM.js)."

#: ../to-be-integrated.rst:940
msgid ""
"In our PKCS#11 module there is a proprietary attribute "
"CKA_SC_HSM_KEY_USE_COUNTER with the key use of the C_GenerateKeyPair "
"counter can be set. The attribute can then also be set for a key can be "
"queried."
msgstr ""
"Mūsu PKCS#11 modulī ir patentēts atribūts CKA_SC_HSM_KEY_USE_COUNTER, "
"kurā var iestatīt C_GenerateKeyPair skaitītāja atslēgas izmantošanu. Pēc "
"tam šo atribūtu var iestatīt arī atslēgas meklēšanai."

#: ../to-be-integrated.rst:942
msgid ""
"In OCF and the JCE Provider, the Key Use Counter can be queried with "
"SmartCardHSMKey.getUseCounter() and confirm with "
"SmartCardHSMKeySpec.setKeyUseCounter() can be set."
msgstr ""
"OCF un JCE nodrošinātājā atslēgu izmantošanas skaitītāju var pieprasīt ar"
" SmartCardHSMKey.getUseCounter() un apstiprināt ar "
"SmartCardHSMKeySpec.setKeyUseCounter()."

#~ msgid "# storage"
#~ msgstr "# uzglabāšana"

#~ msgid "Configure Hidden Volumes:"
#~ msgstr "Slēpto sējumu konfigurēšana:"

#~ msgid ""
#~ "Unlock encrypted volume from the "
#~ "Nitrokey App menu. Select \"setup hidden"
#~ " volume\". Now you need to enter "
#~ "a new password twice to protect "
#~ "your hidden volume. The password "
#~ "strength is indicated below."
#~ msgstr ""
#~ "Atbloķējiet šifrēto sējumu no Nitrokey "
#~ "lietotnes izvēlnes. Izvēlieties \"setup hidden"
#~ " volume\". Tagad jums divreiz jāievada "
#~ "jauna parole, lai aizsargātu slēpto "
#~ "sējumu. Paroles stiprums ir norādīts "
#~ "turpmāk."

#~ msgid ""
#~ "Note: PINs can only be tried three"
#~ " times only which is why they "
#~ "can be short. Passwords like used "
#~ "for hidden devices can potentially be"
#~ " attacked unlimited which is why they"
#~ " need to be sufficiently strong."
#~ msgstr ""
#~ "Piezīme: PIN kodus var izmēģināt tikai"
#~ " trīs reizes, tāpēc tie var būt "
#~ "īsi. Parolēm, piemēram, slēptajām ierīcēm, "
#~ "var uzbrukt neierobežoti, tāpēc tām "
#~ "jābūt pietiekami stiprām."

#~ msgid ""
#~ "Next you need to define the "
#~ "storage area being used. Hidden volumes"
#~ " are stored in the empty space "
#~ "of the encrypted volume. This is a"
#~ " critical choice because it could "
#~ "destroy data on the (not-hidden) "
#~ "encrypted volume and reveal the "
#~ "existience of the hidden volume."
#~ msgstr ""
#~ "Tālāk ir jādefinē izmantotā glabāšanas "
#~ "vieta. Slēptie sējumi tiek glabāti "
#~ "šifrētā sējuma tukšajā vietā. Šī ir "
#~ "kritiski svarīga izvēle, jo tā var "
#~ "iznīcināt datus (neslēptajā) šifrētajā sējumā"
#~ " un atklāt slēptā sējuma esamību."

#~ msgid ""
#~ "You should use one FAT32 partition "
#~ "on your encrypted volume as journaling"
#~ " filesystems, especially NTFS, may destroy"
#~ " the encrypted data. Copy some files"
#~ " to the encrypted volume prior to "
#~ "creating the hidden volume. Once you "
#~ "configured a hidden volume you shouldn't"
#~ " add or change files on the "
#~ "encrypted volume anymore. Identify the "
#~ "storage space your files consume on "
#~ "the encrypted volume. For example: 10%"
#~ " The hiden volume should start after"
#~ " your files on the encrypted volume."
#~ " For example: 10% files + 10% "
#~ "buffer = 20% The hidden volume "
#~ "should end in a distance before "
#~ "the end of the storage. For "
#~ "example: 90%"
#~ msgstr ""
#~ "Šifrētajam sējumam jāizmanto viens FAT32 "
#~ "nodalījums, jo žurnālu failu sistēmas, "
#~ "īpaši NTFS, var iznīcināt šifrētos "
#~ "datus. Pirms slēptā sējuma izveides "
#~ "nokopējiet dažus failus uz šifrēto "
#~ "sējumu. Pēc slēptā sējuma konfigurēšanas "
#~ "nevajadzētu vairs pievienot vai mainīt "
#~ "failus šifrētajā sējumā. Nosakiet, cik "
#~ "daudz uzglabāšanas vietas jūsu faili "
#~ "aizšifrētajā sējumā aizņem. Piemēram: 10% "
#~ "Tslēptajam sējumam vajadzētu sākt darboties"
#~ " pēc jūsu failiem šifrētajā sējumā. "
#~ "Piemēram: 10% files + 10% buffer ="
#~ " 20% Tslēptajam sējumam jābeidzas attālumā"
#~ " pirms glabāšanas vietas beigām. Piemēram:"
#~ " 90%"

#~ msgid ""
#~ "In case you use two or more "
#~ "hidden volumes, note that their storage"
#~ " area must not overlap. Otherwise "
#~ "they would override and destroy each "
#~ "other's data. Each hidden volume would"
#~ " require a different password."
#~ msgstr ""
#~ "Ja izmantojat divus vai vairākus slēptos"
#~ " sējumus, ņemiet vērā, ka to "
#~ "glabāšanas zona nedrīkst pārklāties. Pretējā"
#~ " gadījumā tie pārklās un iznīcinās "
#~ "viens otra datus. Katram slēptajam "
#~ "sējumam būs nepieciešama atšķirīga parole."

#~ msgid "Usage of Hidden Volumes:"
#~ msgstr "Slēpto apjomu izmantošana:"

#~ msgid ""
#~ "Select \"unlock encrypted volume\" and "
#~ "enter your User PIN. Select \"unlock "
#~ "hidden volume\" and enter any of "
#~ "the hidden volume's passwords. If this"
#~ " is the first time you may need"
#~ " to create a partition on the "
#~ "hidden volume. Windows will open an "
#~ "appropriate window and ask you to "
#~ "do so. On Linux and Mac OS "
#~ "you may need to open a partition"
#~ " manager and create a partition "
#~ "manually. You can create as many "
#~ "partitions as you want. We recommend "
#~ "FAT(32) if you want to access the"
#~ " partition from various operating systems."
#~ " Make sure to unmount/eject all "
#~ "partitions on the hidden volumes before"
#~ " locking or disconnecting the Nitrokey."
#~ msgstr ""
#~ "Izvēlieties \"atbloķēt šifrētu sējumu\" un "
#~ "ievadiet savu lietotāja PIN kodu. "
#~ "Izvēlieties \"atbloķēt slēpto sējumu\" un "
#~ "ievadiet jebkuru slēptā sējuma paroli. "
#~ "Ja šī ir pirmā reize, iespējams, "
#~ "būs nepieciešams izveidot slēptā sējuma "
#~ "nodalījumu. Windows atvērs atbilstošu logu "
#~ "un lūgs to izdarīt. Linux un Mac"
#~ " OS var būt nepieciešams atvērt "
#~ "nodalījumu pārvaldnieku un izveidot nodalījumu"
#~ " manuāli. Varat izveidot tik daudz "
#~ "nodalījumu, cik vēlaties. Mēs iesakām "
#~ "izmantot FAT(32), ja vēlaties piekļūt "
#~ "šim nodalījumam no dažādām operētājsistēmām."
#~ " Pirms Nitrokey bloķēšanas vai atvienošanas"
#~ " pārliecinieties, ka visi slēptie sējumi"
#~ " ir atvienoti/izslēgti."

#~ msgid "Also see older but comprehensive Nitrokey Storage manual."
#~ msgstr ""
#~ "Skatiet arī vecāku, bet visaptverošu "
#~ "Nitrokey uzglabāšanas rokasgrāmatu."

