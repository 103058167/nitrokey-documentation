# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-01 13:50+0100\n"
"PO-Revision-Date: 2021-02-01 16:34+0000\n"
"Last-Translator: Weblate Admin <ben@dotplex.com>\n"
"Language-Team: Spanish <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-start/es/>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.3.1\n"
"Generated-By: Babel 2.6.0\n"

#: ../start/index.rst:2
msgid "Nitrokey Start"
msgstr ""

#: ../start/index.rst:4
msgid "Choose your operating system:"
msgstr "Elija su sistema operativo:"

#: ../start/linux/firmware-update.rst:2
msgid "Firmware Update"
msgstr ""

#: ../start/linux/firmware-update.rst:4
msgid "To update the firmware of your Nitrokey Start, proceed as follows."
msgstr ""

#: ../start/linux/firmware-update.rst:6
msgid "Install pip3."
msgstr ""

#: ../start/linux/firmware-update.rst:12
msgid "Install pynitrokey. For this you need an Internet connection."
msgstr ""

#: ../start/linux/firmware-update.rst:18
msgid "Connect your Nitrokey Start and verify its recognition."
msgstr ""

#: ../start/linux/firmware-update.rst:27
msgid "Start the update process. For this you need an Internet connection."
msgstr ""

#: ../start/linux/firmware-update.rst:33
msgid ""
"You will then be asked to enter the Admin PIN of your Nitrokey Start. "
"(Default PIN: 12345678)"
msgstr ""

#: ../start/linux/firmware-update.rst:46
msgid ""
"Under “Device” you will find information about the current version of "
"your Nitrokey Start. In the first item under “Please note” you can see "
"the latest firmware version available. Now you have to confirm the update"
" with “yes”."
msgstr ""

#: ../start/linux/firmware-update.rst:78
msgid ""
"You can check the firmware version after the upgrade process has "
"completed."
msgstr ""

#: ../start/linux/index.rst:2
msgid "Nitrokey Start, Linux"
msgstr ""

#: ../start/linux/index.rst:11
msgid ""
"Install ``scdaemon`` and GnuPG 2.1 or higher by using your package "
"manager (e.g. ``apt update && apt install scdaemon gpg2`` on Ubuntu)."
msgstr ""

#: ../start/linux/index.rst:13
msgid "Connect your Nitrokey to your computer."
msgstr ""

#: ../start/linux/index.rst:14
msgid ""
"Use GnuPG to `generate new keys or import existing ones "
"<https://docs.nitrokey.com/start/linux/openpgp-email-encryption.html>`__."
msgstr ""

#: ../start/linux/index.rst:18 ../start/mac/index.rst:19
msgid ""
"It is indeed necessary to first import or create new keys and change the "
"PINs afterwards. Otherwise changing User PIN will fail! Furthermore "
"overriding keys results in PIN reset (default values), please keep this "
"in mind!"
msgstr ""

#: ../start/linux/index.rst:23
msgid ""
"Change the Admin PIN (default: ``12345678``) and then the User PIN "
"(default: ``123456``) to your own choices. - The PIN must consist of at "
"least 14 characters (starting from RTM.8), can contain any character (not"
" only numbers). Do not select only numbers. If your environment allows "
"that, use emoticons or national characters. - The longer the PIN the "
"better. It is possible to use 6 randomly selected words instead as well "
"for the same or better security than random character string. - Use ‘gpg "
"–card-edit’ -> ‘admin’ -> ‘passwd’ to achieve this (for Admin PIN case). "
"- Please be careful to change Admin PIN first and User PIN second! "
"Otherwise the admin-less mode got activated, see `this instructions "
"<https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#>`__ for "
"further information. - Optionally Reset code can be set up (`guide "
"<http://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#set-up-pw1-pw3"
"-and-reset-code>`__). The minimum length accepted is 8 characters, "
"however it should be as long as User PIN. 5. KDF-DO allows for a shorter "
"PIN of 8 characters minimum, by executing part of the calculations on the"
" PC. Please use greater length for the increased security."
msgstr ""

#: ../start/linux/index.rst:25 ../start/mac/index.rst:28
#: ../start/windows/index.rst:28
msgid ""
"**Firmware version 1.2.5 or below: In case you forget a PIN or enter it "
"wrongly three times you need the reset code to unblock the PIN. Otherwise"
" the device wouldn’t be usable anymore! Therefore please** `set the reset"
" code <http://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#set-up-"
"pw1-pw3-and-reset-code>`__ **as well when initialising the key!**"
msgstr ""

#: ../start/linux/index.rst:32 ../start/mac/index.rst:35
#: ../start/windows/index.rst:35
msgid ""
"Your Nitrokey is now ready to use. `Checkout "
"<https://www.nitrokey.com/documentation/applications>`__ the various use "
"cases and supported applications."
msgstr ""

#: ../start/linux/index.rst:37 ../start/mac/index.rst:40
#: ../start/windows/index.rst:40
msgid "Key Creation with OpenPGP or S/MIME"
msgstr ""

#: ../start/linux/index.rst:39 ../start/mac/index.rst:42
#: ../start/windows/index.rst:42
msgid ""
"There are two widely used standards for email encryption. While "
"OpenPGP/GnuPG is popular among individuals, S/MIME/x.509 is mostly used "
"by enterprises. If you are in doubt which one to choose, you should use "
"OpenPGP."
msgstr ""

#: ../start/linux/index.rst:44
msgid ""
"`instructions <https://docs.nitrokey.com/start/linux/openpgp-email-"
"encryption.html>`__ for using the OpenPGP standard with the Nitrokey"
msgstr ""

#: ../start/linux/index.rst:47
msgid ""
"`instructions <https://docs.nitrokey.com/start/linux/smime-email-"
"encryption.html>`__ for using S/MIME with the Nitrokey"
msgstr ""

#: ../start/linux/index.rst:50 ../start/mac/index.rst:53
#: ../start/windows/index.rst:53
msgid "Please note that the Nitrokey App can not be used for this device!"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:14
#: ../pro/smime-email-encryption.rst:93 ../start/linux/index.rst:53
msgid "Troubleshooting"
msgstr ""

#: ../start/linux/index.rst:55
msgid ""
"On some GNU/Linux systems it is necessary to insert the UDEV rules for "
"the Nitrokey device manually. If you followed the above instructions and "
"get the message:"
msgstr ""

#: ../start/linux/index.rst:63
msgid ""
"please install the `Nitrokey App <https://www.nitrokey.com/download>`__ "
"or type the following commands in the terminal to download and install "
"the UDEV rules:"
msgstr ""

#: ../start/multiple-identities.rst:2
msgid "Multiple Identities"
msgstr ""

#: ../start/multiple-identities.rst:4
msgid ""
"The multiple identites feature allows to use 3 virtual smart cards in "
"place of one, giving bigger flexibility in the every day use, as well as "
"separation between user identities (business, personal etc.) or even "
"allowing usage of it for more than one user (PINs are separate)."
msgstr ""

#: ../start/multiple-identities.rst:9
msgid ""
"All of the smart cards have separate data objects, meaning they all could"
" have different keys, certificates stored, and PINs set. Identities do "
"not intereact between each other."
msgstr ""

#: ../start/multiple-identities.rst:13
msgid ""
"The virtual smart cards are identifyable by the first digit of the serial"
" number, which is replaced by identity number for second (“1”) and third "
"one (“2”). Serial number is not changed for the first identity."
msgstr ""

#: ../pro/openpgp-email-encryption.rst:59
#: ../pro/smime-email-encryption-with-outlook.rst:36
#: ../pro/smime-email-encryption-with-thunderbird.rst:47
#: ../pro/smime-email-encryption.rst:78
#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:27
#: ../start/multiple-identities.rst:18
msgid "Usage"
msgstr ""

#: ../start/multiple-identities.rst:20
msgid ""
"To change the identity it suffices to send a custom CCID command. This "
"could be achieved with ``pynitrokey`` tool:"
msgstr ""

#: ../start/multiple-identities.rst:23
msgid ""
"`Install pynitrokey "
"<https://github.com/Nitrokey/pynitrokey#installation>`__."
msgstr ""

#: ../start/multiple-identities.rst:26
msgid "Connect your Nitrokey Start and verify that it got recognized."
msgstr ""

#: ../start/multiple-identities.rst:35
msgid "Change the identity, by replacing ``<ID>`` with ``0``, ``1``, or ``2``."
msgstr ""

#: ../start/multiple-identities.rst:46
msgid "Limitations"
msgstr ""

#: ../start/multiple-identities.rst:48
msgid ""
"As of version RTM.10 there is only one limitation - the third identity "
"can store a certificate not longer than 1024 bytes. The other two "
"identities have standard limit of 2048 bytes per certificate."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:2
msgid "Nitrokey Start Supports Elliptic Curves (ECC)"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:5
msgid "RSA-2048 Becomes Increasingly Insecure"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:7
msgid ""
"For security reasons, the German Federal Office for Information Security "
"(Bundesamt für Sicherheit in der Informationstechnik or BSI) no longer "
"recommends RSA keys with a length of 2048 `bit be used after 2022 "
"<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102"
"/BSI-"
"TR-02102-1.pdf;jsessionid=064DAA7AD3195C1C87B1C71B2760DB4E.1_cid360?__blob=publicationFile&v=7>`__."
" This means that longer keys will need to come into use in the "
"foreseeable future. Assuming a period of use of five years, safer keys "
"should already be being generated. However, longer RSA keys with 3072 bit"
" or 4096 bit are significantly slower. For this reason `Nitrokey Start "
"<https://shop.nitrokey.com/shop/product/nitrokey-start-6>`__ (resp. the "
"underlying firmware `Gnuk <https://www.fsij.org/category/gnuk.html>`__) "
"has been supporting encryption by means of `elliptic-curve cryptography "
"(ECC) <https://en.wikipedia.org/wiki/Elliptic-curve_cryptography>`__ for "
"some time. This method is considered to be just as secure for smaller key"
" systems as longer RSA keys and is also considerably faster."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:24
msgid "Basics of Elliptic-Curve Cryptography"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:26
msgid ""
"In contrast to RSA, there are many different forms (so-called curves) of "
"elliptic-curve cryptography. Notably, the `NSA was involved "
"<https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html>`__"
" in the development of the NIST curves. Even if there is no evidence of "
"back doors in the curves, using a certain curve can pose a question of "
"trust. Fortunately the Nitrokey Start supports multiple curves, namely "
"NIST, SECG and Curve25519. In what follows we will use Curve25519 and "
"Ed25519 that is based upon this, both of which have a good reputation and"
" are considered to be secure. `This article <https://arstechnica.com"
"/information-technology/2013/10/a-relatively-easy-to-understand-primer-"
"on-elliptic-curve-cryptography/>`__ provides a good entry point for "
"gaining a general understanding of elliptic-curve cryptography."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:40
msgid "System Requirements"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:42
msgid ""
"In order to create keys based on elliptic curves on the Nitrokey Start, "
"firmware 1.2 and GnuPG version 2.1.16 or higher must be installed."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:45
msgid "You can read Nitrokey Start’s firmware version via ‘gpg2 —card-status’:"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:53
msgid ""
"The digit after ‘FSIJ’ indicates the state of the software — in this case"
" it is 1.2.4. Elliptic-curve cryptography can be used with the Nitrokey "
"Start from version 1.2.x onwards. Should older firmware happen to be "
"installed, you can update it with the help of `these instructions "
"<https://github.com/Nitrokey/nitrokey-start-firmware/blob/gnuk1.2"
"-regnual-fix/prebuilt/README.md#firmware-upgrade-instructions>`__."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:59
msgid ""
"You can learn about the installed version of GnuPG via ‘gpg2 –version’. "
"At least version 2.1.16 is required. The newest GnuPG version for Windows"
" can be found `here <https://www.gpg4win.org/>`__ and the newest version "
"for MacOS can be found `here <https://gpgtools.org/>`__. A suitable "
"version of GnuPG is included in the GNU/Linux distributions Debian (from "
"Stretch onwards), Arch Linux, Fedora (from Release 26 onwards) and "
"openSUSE Tumbleweed. Unfortunately only GnuPG 2.1.15 is currently "
"included in the latest release of Ubuntu (17.10) and use is therefore "
"currently not readily possible. At the end of this articles are "
"instructions how to manually update GnuPG on Ubuntu."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:70
msgid ""
"Important: GnuPG 2.0 is still being used, but support for it will run out"
" around the end of 2017. All communication partners must use GnuPG 2.1 or"
" newer for email encryption by means of ECC, otherwise incompatibility "
"issues might arise. Therefore you should only use ECC if you are sure you"
" will be able to circumvent this problem."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:77
msgid "Key Generation on the Nitrokey Start"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:79
msgid ""
"Once these requirements are fulfilled, you can get started. (Warning: "
"existing keys will be overwritten in the process!) You now have two "
"options. The first option is to create the key directly on the Nitrokey "
"Start. The benefit here is that the key will never be outside the device "
"and as such can never be read out. The second option is to import a "
"previously locally generated key. The advantage in this case is that you "
"can securely store a backup of the key, which can then be restored in "
"case the Nitrokey is lost. Only the first option is described below. In "
"order to create a key with backup, you can access `the following "
"instructions "
"<https://www.gniibe.org/memo/software/gpg/keygen-25519.html>`__ and use "
"this `general information "
"<https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups>`__"
" to transfer the key to the Nitrokey."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:93
msgid ""
"Within GnuPG there is already a ‘generate’ command, which can be used to "
"easily create keys on the device. **(Update 20.11.2017: With GnuPG 2.2.2 "
"and higher, during “generate” command you can enter the keysize “25519” "
"to select Curve25519. In this case you can skip the following lines.)** "
"However it is not as yet possible to select the type of key directly, so "
"the key must first be prepared. We use the following commands for this:"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:106
msgid ""
"Alternatively, other curves could be selected, as described in the next "
"section."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:109
msgid ""
"Now we enter ‘gpg2 –card-edit’ and see that ed25519 or cv25519 is under "
"‘key attributes’ instead of rsa2048."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:135
msgid "Then we create the key."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:141
msgid "Admin commands are allowed"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:170
msgid ""
"The Nitrokey Start now incorporates elliptic-curve cryptography instead "
"of RSA keys and can be used as usual."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:174
msgid "Available Curves"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:176
msgid ""
"In the above procedure we chose the curve ed25519 and cv25519 by Daniel "
"Bernstein. Alternatively, NIST or SECG curves can be used. The "
"configuration is carried out as follows:"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:180
msgid "Option NIST curves:"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:188
msgid ""
"Option SECG curves: **Warning: This curve is not recommended for email "
"encryption but for Bitcoin-related use cases only!**"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:197
msgid "Option Curve25519:"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:206
msgid "Update of GnuPG on Ubuntu"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:208
msgid ""
"The following steps are needed only if you are running a Ubuntu version "
"older than 18.04! You can install GnuPG 2.1.18 on such system with the "
"commands below. This involves newer Debian packages, which is the easiest"
" option. This approach has been tested successfully on Ubuntu 17.10. "
"However, the occurence of problems during usage can‘t be excluded."
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:227
msgid ""
"In case you want to undo the installation, you have to execute the "
"following commands:"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:234
msgid "(removes manually installed packages)"
msgstr ""

#: ../start/nitrokey-start-supports-elliptic-curves-ecc.rst:240
msgid "(installs the appropriate packages from regular package repositories)"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:2
msgid "OpenPGP Email Encryption"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:4 ../pro/smime-email-encryption.rst:7
msgid "There are two widely used standards for email encryption."
msgstr ""

#: ../pro/openpgp-email-encryption.rst:6 ../pro/smime-email-encryption.rst:9
msgid "OpenPGP/GnuPG is popular among individuals,"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:8 ../pro/smime-email-encryption.rst:11
msgid "S/MIME/X.509 is mostly used by enterprises."
msgstr ""

#: ../pro/openpgp-email-encryption.rst:10
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP. While "
"this page describes the usage of OpenPGP, S/MIME is described `here "
"<https://docs.nitrokey.com/pro/smime-email-encryption.html>`__."
msgstr ""

#: ../pro/openpgp-email-encryption.rst:14
msgid ""
"Please familiarize yourself with the general concept behind the OpenPGP "
"standard first, for example by reading `this info graphic "
"<https://emailselfdefense.fsf.org/en/infographic.html>`__ of the Free "
"Software Foundation."
msgstr ""

#: ../pro/openpgp-email-encryption.rst:20
#: ../pro/openpgp-key-generation-on-device.rst:21
#: ../pro/openpgp-key-generation-using-gpa.rst:19
#: ../pro/openpgp-key-generation-with-backup.rst:15
msgid "Key Generation"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:22
msgid "If you do not have OpenPGP keys yet, you need to generate them first."
msgstr ""

#: ../pro/openpgp-email-encryption.rst:24
msgid ""
"`Generate keys on Nitrokey <https://docs.nitrokey.com/pro/openpgp-key-"
"generation-using-gpa.html>`__ - this is the best option if you are "
"unexperienced, but you won’t have a backup of your keys and therefore "
"won’t be able to mitigate the loss of the Nitrokey"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:30
msgid ""
"`Generate keys on Nitrokey with different algorithm or key size "
"<https://docs.nitrokey.com/pro/openpgp-key-generation-on-device.html>`__ "
"- this is as secure as the previous option and thus you won’t have a "
"backup as well, but you can change the key attributes (that is the "
"algorithm and key size)"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:36
msgid ""
"`Generate keys locally <https://docs.nitrokey.com/pro/openpgp-key-"
"generation-with-backup.html>`__ and copy them to Nitrokey - this is the "
"most flexible, expert option, but only secure if your system is not "
"compromised, because you can create a backup key outside your Nitrokey A "
"similar description in french can be found `here <https://xieme-"
"art.org/post/importer-des-clefs-gnupg-dans-sa-nitrokey-pro/>`__."
msgstr ""

#: ../pro/openpgp-email-encryption.rst:45
msgid "Importing Existing Keys"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:47
msgid ""
"If you already have OpenPGP keys you may want to use them with your "
"Nitrokey, instead of generating new ones. Importing exsiting keys works "
"basically the same as generating keys locally first and copy them to the "
"Nitrokey (see above). Therefore, please have a look at the `corresponding"
" instructions <https://docs.nitrokey.com/pro/openpgp-key-generation-with-"
"backup.html#key-import>`__. Note that you probably want to generate "
"another subkey for authentication to your existing key. See at the same "
"instructions for `subkey generation <https://docs.nitrokey.com/pro"
"/openpgp-key-generation-with-backup.html#subkey-for-authentication>`__."
msgstr ""

#: ../pro/openpgp-email-encryption.rst:61 ../pro/smime-email-encryption.rst:80
msgid "You can find further information about the usage on these pages:"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:63
msgid ""
"for using `OpenPGP encryption with Thunderbird "
"<https://docs.nitrokey.com/pro/openpgp-email-encryption-with-"
"thunderbird.html>`__"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:66
msgid ""
"for using `OpenPGP encryption with Outlook "
"<https://docs.nitrokey.com/pro/windows/openpgp-email-encryption-with-"
"outlook.html>`__"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:69
msgid ""
"for using `Claws Mail <https://www.claws-"
"mail.org/plugin.php?plugin=gpg>`__, an email client (and news reader) for"
" Linux and Windows"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:73 ../pro/smime-email-encryption.rst:88
msgid ""
"for using `Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`__, an email client for the Gnome Desktop on Linux "
"systems"
msgstr ""

#: ../pro/openpgp-email-encryption.rst:77
msgid "for using `GPGTools <https://gpgtools.org/>`__ on macOS."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:2
msgid "OpenPGP Email Encryption With Thunderbird"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:5
msgid "Thunderbird 78.3 and newer"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:7
msgid ""
"At the moment Thunderbird’s 78 support for the OpenPGP emails is not easy"
" to set up. See `Thunderbird’s documentation "
"<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`__ for details."
" Here is a `comprehensive German guide "
"<https://decatec.de/it/thunderbird-78-pgp-verschluesselung-mit-dem-"
"nitrokey-storage/>`__."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:16
msgid ""
"1. Error message: ``The configured key ID '4BA0183FCBA844A7' cannot be "
"found on your keyring``"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:19
msgid "Make sure that the public key is imported to the Thunderbird’s manager and"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:20
msgid ""
"The key ID does not contain any whitespace, and consists of 16 characters"
" from range 0-9 A-F"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:21
msgid "you have GPA or Kleopatra software installed."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:23
msgid ""
"Please use Kleopatra or `GPA <https://docs.nitrokey.com/start/windows"
"/openpgp-key-generation-using-gpa.html>`__ software to handle the smart "
"card."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:28
msgid "Thunderbird 77 and older"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:31
msgid "Installation"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:33
msgid ""
"Install the device driver as described `here "
"<https://www.nitrokey.com/documentation/installation>`__."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:36
msgid ""
"Install `Thunderbird <https://www.thunderbird.net/en-US/>`__ and the Add-"
"on `Enigmail <https://www.enigmail.net/index.php/en/>`__."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:40
msgid "Changing PINs"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:42
msgid "There are two PINs for the Nitrokey:"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:44
msgid "The User PIN required for daily work"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:46
msgid ""
"The Admin PIN is required to change keys or other settings of the device."
" In addition, the Nitrokey can be unlocked (for example, after 3 times "
"incorrect input of the User PIN) by means of the Admin PIN."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:50
msgid ""
"After receiving the Nitrokey, you should immediately change the User PIN "
"= “123456” and Admin PIN = “12345678”."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:54
msgid "Procedure"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:56
msgid "Insert the Nitrokey into a USB port on your computer."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:58
msgid "Start Thunderbird."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:60
msgid ""
"In Thunderbird, select as shown in the following picture. “OpenPGP” → "
"“Manage smart card”"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:68
msgid "In the “SmartCard Details” window, select “SmartCard → Change PIN”"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:75
msgid ""
"Select “Change PIN”. This is your User PIN you need for daily work. Enter"
" the current PIN ( “123456” for delivery) and twice your new PIN. For "
"this PIN you can use the characters: a-z A-Z 0-9 / .;;:- !? () [] {}% +. "
"The PIN should be at least 6 characters long. Click “OK”."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:86
msgid "Repeat the procedure for the Admin PIN. “SmartCard → Change PIN”"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:93
msgid ""
"Select Change Admin PIN. This is your Admin PIN that you only rarely "
"need. Enter the current PIN ( “12345678” for delivery) and the new PIN "
"twice. For this PIN, you can use the characters: a-z A-Z 0-9 / .;;:- !? "
"() [] {}% +. The PIN should be at least 8 characters long. Click “OK”."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:104
msgid ""
"You have now changed the PINs and should continue to generate your "
"personal keys."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:108
msgid "Generation of Keys"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:110
msgid ""
"To encrypt data and e-mails, a key pair consisting of a public key and a "
"private key, must first be generated. The so-called public key is used to"
" **en**\\ crypt the data or e-mails. You can distribute this to all those"
" with whom you want to communicate securely (for example, publish it "
"publicly on your site). The so-called private key is used to **de**\\ "
"crypt the data or messages. This key should **NEVER** be made known! "
"Usually, you also do not have direct access to it (see below), since this"
" is stored securely on the Nitrokey. Use the Nitrokey to create both keys"
" using the following procedure:"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:120
msgid "Insert the Nitrokey into a USB port on your computer. StartThunderbird"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:123
msgid ""
"In Thunderbird, select as shown in the following picture „OpenPGP“ → "
"„Manage Smart Card“"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:126
msgid "In the “SmartCard details” window, select “SmartCard” → “Generate key”"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:129
msgid ""
"In the following window, select your e-mail address for which you want to"
" generate keys. Verify that the e-mail address specified in “User ID” is "
"correct. You can also specify whether a private key backup copy should be"
" stored on your computer."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:139
msgid ""
"If you do not create a backup copy, you have no chance to get your "
"encrypted data if the Nitrokey is lost or damaged!"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:147
msgid ""
"It is recommended to store this safety device. Select “Save key copy of "
"the key outside the Smard Card”. Then enter your personal password for "
"the backup copy under “Passphrase”. This password should not be less than"
" 8 characters, and should contain both uppercase and lowercase letters "
"and numbers. You can also use a long sentence, but avoid known prose or "
"lyric. Also, no name or known term should be used."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:155
msgid ""
"**Allowed characters**: a-z A-Z 0-9 /.,;:-!?( )%+ (keine Umlaute "
"ä,ü,ö,Ä,Ü,Ö oder ß)"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:158
msgid ""
"**Poor Password**: qwertz123, IchliebeSusi3, Password, If you can dream "
"it, you can do it."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:161
#, python-format
msgid ""
"**Strong Password**: g(Ak?2Pn7Yn oder Ki.stg2bLqzp%d or A dog with greeen"
" Earz and fife legs (spelling errors increase security)"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:164
msgid ""
"You do **not** need this password for daily work. It is only necessary "
"for the restoration of the secret key, e.g. if you have lost the "
"Nitrokey. Therefore, keep the password in a safe place."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:168
msgid ""
"You can also specify whether and when the key should be automatically "
"invalid. This means, from this point onwards, no more e-mails can be "
"encrypted with this key and you have to create a new key pair."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:172
msgid "Finally, click on “Generate key pair”."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:179
msgid "You are now asked if the key should be generated. Confirm with “Yes”."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:186
msgid ""
"In order for the program to write your keys to the stick, you must enter "
"the admin PIN and the user PIN (changed above)."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:194
msgid ""
"The key generation can take a few minutes. Do not terminate the program "
"prematurely!"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:197
msgid ""
"When the key generation is complete, you receive the following message. A"
" certificate is now created that allows you to invalidate your key in an "
"emergency. This certificate is automatically saved with your private key."
" This should be printed out or backed up on at least one other external "
"medium so that you can revoke the validity of the keys if your keys and "
"backups are lost. Click “Yes”"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:204
msgid ""
"You can now select the directory in which the backup copy is stored. This"
" copy is encrypted with your password entered above. This means that no "
"one can read or use the keys without your password. Do not give your "
"password to anyone. This file with the name of your e-mail address and "
"the suffix “.asc” should be backed up on another medium. After selecting "
"the directory, click “Save”."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:216
msgid "Here you must again specify your user PIN or passphrase. Then click “OK”"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:224
msgid ""
"You will now see the message that the certificate was created and saved. "
"Click “OK”"
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:232
msgid ""
"Key generation is now complete. You can now exit the program (File - "
"Close)."
msgstr ""

#: ../pro/openpgp-email-encryption-with-thunderbird.rst:240
msgid ""
"Your Nitrokey is personalized and ready to use. **Have fun with the "
"secure email encryption!**"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:2
msgid "OpenPGP Key Generation On-Device"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:4
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey. This is done by using the command line "
"interface of GnuPG. Thus, you need to have GnuPG installed on your "
"system. The newest GnuPG version for Windows can be found `here "
"<https://www.gpg4win.org/>`__ and the newest version for MacOS can be "
"found `here <https://gpgtools.org/>`__. Users of Linux systems please "
"install GnuPG with help of the package manager."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:14
msgid ""
"These instructions are based on GnuPG version 2.2.6 or higher. Some Linux"
" Distributions have an older version installed. In this case please "
"choose a different method as listed `here <https://docs.nitrokey.com/pro"
"/openpgp-email-encryption.html>`__ or install a newer version if "
"possible."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:23
msgid ""
"The following descriptions explain the basic key generation on-device via"
" GnuPG’s command line interface. The default behaviour is to generate RSA"
" keys of 2048 bit size. If you want to change the key algorithm and "
"length, have a look at the next section first."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:28
msgid "Open a command line and type ``gpg2 --card-edit``."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:30
#: ../pro/smime-email-encryption.rst:37
msgid ""
"To open the Windows command line please push the Windows-key and R-key. "
"Now type ‘cmd.exe’ in the text field and hit enter. To open a Terminal on"
" macOS or GNU/Linux please use the application search (e.g. spotlight on "
"macOS)."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:61
msgid ""
"Now you are in the interactive interface of GnuPG. Activate the admin "
"commands with ``admin`` and use ``generate`` afterwards to start the "
"generation of keys."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:105
msgid ""
"**Please do not create the suggested off-card backup.** This “backup” "
"does only save the encryption key, but not the signature and "
"authentication keys. In case of a loss of the device, you will not be "
"able to restore the whole key set. So on the one hand it is no full "
"backup (use `these instructions <https://docs.nitrokey.com/pro/openpgp-"
"key-generation-with-backup.html>`__ instead, if you need one) and on the "
"other hand you risk that someone else can get in possession of your "
"encryption key. The advantage of generating keys on-device is to make "
"sure that keys are stored securely. Therefore, we recommend to skip this "
"half-backup."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:116
msgid ""
"Now you have a complete key set on your device which can be used for the "
"`various applications "
"<https://www.nitrokey.com/documentation/applications>`__ listed on our "
"site. Type ``quit`` and hit enter to exit."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:122
msgid "Change Key Attributes"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:124
msgid ""
"This section is about changing the key attributes. If you want to use the"
" default values, you can proceed with the next section."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:127
msgid "Open a command line and type ``gpg2 --card-edit --expert``."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:153
msgid ""
"Now you are in the interactive interface of GnuPG. As you can see in the "
"“Key attributes” field above, the default value rsa2048 is set. To change"
" them, activate the admin commands with ``admin`` and use ``key-attr`` "
"afterwards to change the attributes of the keys."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:186
msgid ""
"You can choose the attribute for each key (that is, signature, encryption"
" and authentication key). Most people will use the same attributes for "
"every key. Type ``list`` to see the results (have look at the “Key "
"attributes” field, which now reads rsa4096)."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:215
msgid ""
"Type ``quit`` and hit enter to exit or proceed directly with the previous"
" section to actually generate the keys with the key attributes you just "
"set."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:219
msgid ""
"The following table illustrates which algorithm can be used on which "
"device."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:223
#: ../pro/openpgp-key-generation-with-backup.rst:95
msgid "\\"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:223
#: ../pro/openpgp-key-generation-with-backup.rst:95
msgid "Start"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:223
#: ../pro/openpgp-key-generation-with-backup.rst:95
msgid "Pro + Storage"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:223
#: ../pro/openpgp-key-generation-with-backup.rst:95
msgid "Pro 2 + Storage 2"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:225
#: ../pro/openpgp-key-generation-with-backup.rst:97
msgid "rsa1024"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:225
#: ../pro/openpgp-key-generation-on-device.rst:226
#: ../pro/openpgp-key-generation-on-device.rst:227
#: ../pro/openpgp-key-generation-on-device.rst:228
#: ../pro/openpgp-key-generation-on-device.rst:229
#: ../pro/openpgp-key-generation-on-device.rst:230
#: ../pro/openpgp-key-generation-on-device.rst:231
#: ../pro/openpgp-key-generation-on-device.rst:232
#: ../pro/openpgp-key-generation-with-backup.rst:97
#: ../pro/openpgp-key-generation-with-backup.rst:98
#: ../pro/openpgp-key-generation-with-backup.rst:99
#: ../pro/openpgp-key-generation-with-backup.rst:100
#: ../pro/openpgp-key-generation-with-backup.rst:101
#: ../pro/openpgp-key-generation-with-backup.rst:102
#: ../pro/openpgp-key-generation-with-backup.rst:103
#: ../pro/openpgp-key-generation-with-backup.rst:104
msgid "✓"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:226
#: ../pro/openpgp-key-generation-with-backup.rst:98
msgid "rsa2048"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:227
#: ../pro/openpgp-key-generation-with-backup.rst:99
msgid "rsa3072"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:228
#: ../pro/openpgp-key-generation-with-backup.rst:100
msgid "rsa4096"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:229
#: ../pro/openpgp-key-generation-with-backup.rst:101
msgid "curve25519 (ECC)"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:230
#: ../pro/openpgp-key-generation-with-backup.rst:102
msgid "NIST (ECC)"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:231
#: ../pro/openpgp-key-generation-with-backup.rst:103
msgid "Brainpool (ECC)"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:232
#: ../pro/openpgp-key-generation-with-backup.rst:104
msgid "secp256k1"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:236
#: ../pro/openpgp-key-generation-using-gpa.rst:79
#: ../pro/openpgp-key-generation-with-backup.rst:371
msgid "Exporting Public Key and Keyserver Usage"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:238
#: ../pro/openpgp-key-generation-using-gpa.rst:81
#: ../pro/openpgp-key-generation-with-backup.rst:373
msgid ""
"Although you can start to use your Nitrokey right away after generating "
"the keys on your system, you need to import your public key on every "
"system, you want to use the Nitrokey on. So to be prepared you have two "
"options: You either save the public key anywhere you like and use it on "
"another system or you save the public key on a webpage/keyserver."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:245
#: ../pro/openpgp-key-generation-with-backup.rst:380
msgid "Generating a Public Key File"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:247
msgid ""
"To get a simple file of your public key, you can just use ``gpg2 --armor "
"--export keyID > pubkey.asc``. Use either the fingerprint as “keyID” "
"(look at ``gpg -K`` to get it) or just use your email address as an "
"identifier."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:252
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg2 --import pubkey.asc``"
" and then types ``gpg2 --card-status`` so that the system knows where to "
"look for this key. That’s all."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:259
#: ../pro/openpgp-key-generation-with-backup.rst:394
msgid "Uploading the Public Key"
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:261
#: ../pro/openpgp-key-generation-with-backup.rst:396
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. You can do this by typing ``gpg --keyserver "
"search.keyserver.net --send-key keyID``. If you are using another machine"
" you can just import it by using ``gpg --keyserver search.keyserver.net "
"--recv-key keyID``."
msgstr ""

#: ../pro/openpgp-key-generation-on-device.rst:267
msgid ""
"Another possibility is to change the URL setting on your card. Start gpg "
"–card-edit again and first set the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.) via the ``url`` command. From now"
" on you can import the key on another system by just using the ``fetch`` "
"command within the ``gpg --card-edit`` environment."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:2
msgid "OpenPGP Key Generation Using GPA"
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:4
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey with help of the GNU Privacy Assistant (GPA). "
"You won’t be able to create a backup of these keys. Thus, if you lose the"
" Nitrokey or it breaks you can not decrypt mails or use these keys "
"anymore. Please see `here <https://docs.nitrokey.com/pro/windows/openpgp-"
"email-encryption-with-outlook.html>`__ for a comparison of the different "
"methods to generate OpenPGP keys."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:12
msgid ""
"You need to have GnuPG and GPA installed on your system. The newest "
"version for Windows can be found `here <https://www.gpg4win.org/>`__ "
"(make sure to check “GPA” during the installation!). Users of Linux "
"systems please install GnuPG and GPA with help of the package manager "
"(e.g. using ``sudo apt install gnupg gpa`` on Ubuntu)."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:21
msgid ""
"At first, open the GNU Privacy Assistant (GPA). You may are asked to "
"generate a key, you can skip this step for now by clicking “Do it later”."
" In the main window, please click on “Card” or “Card Manager”."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:30
msgid ""
"Another windows opens. Please go to “Card” -> “Generate key” to start the"
" key generation process."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:38
msgid ""
"Now you can put in your name and the email address you want to use for "
"the key that will be generated next. You may choose an expiration date "
"for your key, but you don’t have to."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:42
msgid ""
"**Please do not use the backup checkbox**. This “backup” does only save "
"the encryption key. In case of a loss of the device, you will not be able"
" to restore the whole key set. So on the one hand it is no full backup "
"(use `these instructions <https://docs.nitrokey.com/pro/openpgp-key-"
"generation-with-backup.html>`__ instead, if you need one) and on the "
"other hand you risk that someone else can get in possession of your "
"encryption key. The advantage of generating keys on-device is to make "
"sure that keys are stored securely. Therefore, we recommend to skip this "
"half-backup."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:57
msgid ""
"You will be asked for the admin PIN (default: 12345678) and the user PIN "
"(default: 123456). When the key generation is finished, you can see the "
"fingerprints of the keys on the bottom of the window. You may fill up the"
" fields shown above, which are saved on your Nitrokey as well."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:67
msgid ""
"Now you can close the window and go back to the main window. Your key "
"will be visible in the key manager after refreshing. Every application "
"which makes use of GnuPG will work with your Nitrokey as well, because "
"GnuPG is fully aware of the fact, that the keys are stored on your "
"Nitrokey."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:92
msgid ""
"Right-click on your key entry in the key manager and click “Export Keys…”"
" to export the public key to a file and/or “Send Keys…” to upload the key"
" to a keyserver."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:96
msgid ""
"You can carry the keyfile with you or send it to anyone who you like. "
"This file is not secret at all. If you want to use the Nitrokey on "
"another system, you first import this public key via clicking on “Keys” "
"-> “Importing Keys…” and choosing the file."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:101
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. If you are using another machine you can just import it by "
"using “Server” -> “Retrieve Keys…” and entering your name or key id."
msgstr ""

#: ../pro/openpgp-key-generation-using-gpa.rst:105
msgid ""
"Another possibility is to change the URL setting on your card. Open the "
"card manager again and fill in the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.). From now on you can import the "
"key on another system by right-clicking on the URL and click on “Fetch "
"Key”."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:2
msgid "OpenPGP Key Generation With Backup"
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:4
msgid ""
"The following instructions explain the generation of OpenPGP keys and how"
" to copy them to the Nitrokey. This method has the advantage of providing"
" a backup of the keys in case of losing or breaking the Nitrokey. The "
"instructions are based on the command line interface of GnuPG. Thus, you "
"need to have GnuPG installed on your system. The newest GnuPG version for"
" Windows can be found `here <https://www.gpg4win.org/>`__ and the newest "
"version for MacOS can be found `here <https://gpgtools.org/>`__. Users of"
" Linux systems please install GnuPG with help of the package manager."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:17
msgid ""
"At first, you need to generate a key locally. You can decide, which key "
"attributes to use and - most importantly - you can export the key and "
"keep it somewhere save in case you need to restore the key."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:22
msgid "Main Key and Encryption Subkey"
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:24
msgid ""
"We can use the command ``gpg --full-generate-key --expert`` to start a "
"guided key generation with all possible options. You can choose the key "
"type (usually RSA (1) or ECC (9)), the length of the key and other "
"attributes. The following output is just a simple example, you may choose"
" other values."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:91
msgid ""
"The following table illustrates which algorithm can be used on which "
"device, in case you want to use different key attributes."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:108
msgid "Subkey for Authentication"
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:110
msgid ""
"You now have a main key with the capability to sign and certify (marked "
"as [SC]) and a subkey for encryption (marked as [E]). It is necessary to "
"have another subkey for use cases in which authentication is needed. This"
" subkey is generated in the next step. Type in ``gpg --edit-key --expert "
"keyID`` to start the process, whereas “keyID” is either the id of the key"
" or the email address used during key generation."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:136
msgid ""
"Now you are in the interactive mode of GnuPG and you can add a key by "
"simply typing ``addkey``. You need to choose the key you want to use. It "
"is crucial to choose “set your own capabilities”, because we want to have"
" the “authenticate” capability which is not available otherwise. We "
"toggle sign and encrypt by typing ``s`` and ``e`` and we activate "
"authenticate by typing ``a``."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:199
msgid ""
"We quit with ``q``. Afterwards we need to answer the same questions as "
"before. Finally, we have a ready-to-go key set which we can import to our"
" device."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:235
msgid ""
"Now is good time to backup your key. Please keep this backup very secure."
" It is best practice to never have this key on a regular computer which "
"has connection to the internet, so that the key never gets compromised. "
"You can create a backup with something like:"
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:245
msgid "Key Import"
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:247
msgid ""
"You have a main key and two subkeys which can be imported to your "
"Nitrokey. Before proceeding please make sure that you really have a "
"backup of the key, if you need one. The ``keytocard`` command used in the"
" next steps will **delete** your key from your disk!"
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:252
msgid ""
"We start the process by accessing the interactive interface of GnuPG "
"again with ``gpg --edit-key --expert keyID``, whereas ``keyID`` is either"
" the id of the key or the email address used during key generation."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:291
msgid ""
"We just imported the main key to the card. Now we proceed with the two "
"subkeys. We type ``key 1`` to select the encryption subkey and type in "
"``keytocard`` again and select the slot to use."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:322
msgid ""
"Now we deselect the first key with ``key 1`` and select the second subkey"
" with ``key 2`` and move it as well with ``keytocard``. Afterwards we "
"quit and save the changes."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:367
msgid ""
"Your keys are now moved to the Nitrokey and thus secured in hardware. "
"Congratulations!"
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:382
msgid ""
"To get a simple file of your public key, you can just use ``gpg --armor "
"--export keyID > pubkey.asc``. Use either the fingerprint as “keyID” "
"(look at ``gpg -K`` to get it) or just use your email address as an "
"identifier."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:387
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg --import pubkey.asc`` "
"and then types ``gpg --card-status`` so that the system knows where to "
"look for this key. That’s all."
msgstr ""

#: ../pro/openpgp-key-generation-with-backup.rst:402
msgid ""
"Another possibility is to change the URL setting on your card. Start "
"``gpg --card-edit`` again and first set the URL where the key is situated"
" (e.g. on the keyserver or on your webpage etc.) via the ``url`` command."
" From now on you can import the key on another system by just using the "
"``fetch`` command within the ``gpg --card-edit environment``."
msgstr ""

#: ../pro/putty.rst:2
msgid "PuTTY"
msgstr ""

#: ../pro/putty.rst:4
msgid ""
"This mini-howto assumes that the Nitrokey has been initialized and "
"contains cryptographic keys."
msgstr ""

#: ../pro/putty.rst:7
msgid "**Required on the client side:**"
msgstr ""

#: ../pro/putty.rst:9
msgid ""
"`PuTTY "
"<http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html>`__ or a"
" variant of it"
msgstr ""

#: ../pro/putty.rst:12
msgid ""
"`GPG4Win <https://gpg4win.org/>`__ or `pageant.exe <http://smartcard-"
"auth.de/download-de.html>`__ with Smartcard support from Dr. Peter Koch"
msgstr ""

#: ../pro/putty.rst:16
msgid ""
"Optional: `OpenPGP Minidriver "
"<http://wald.intevation.org/frs/?group_id=49&release_id=353>`__"
msgstr ""

#: ../pro/putty.rst:19
msgid "**1) Pageant**"
msgstr ""

#: ../pro/putty.rst:21
msgid ""
"start pageant.exe. That this is running is shown in the notification area"
" of the taskbar."
msgstr ""

#: ../pro/putty.rst:29
msgid "A double click opens the view of the current keys."
msgstr ""

#: ../pro/putty.rst:36
msgid "After inserting the key it looks like this."
msgstr ""

#: ../pro/putty.rst:43
msgid ""
"If nothing is displayed here, pageant may have to be restarted or another"
" application is already using the stick. A possibly running pgp-agent "
"must be terminated! Now we only need the public key we want to store in "
"the ssh configuration of the server. Therefore we press CTRL while "
"inserting the stick…"
msgstr ""

#: ../pro/putty.rst:54
msgid "and then view the Pageant-PublicKeys.txt."
msgstr ""

#: ../pro/putty.rst:61
msgid ""
"I searched for the ssh-rsa entry of the auth key and added the line on "
"the server to the authorized_keys."
msgstr ""

#: ../pro/putty.rst:64
msgid "**2) PuTTY**"
msgstr ""

#: ../pro/putty.rst:66
msgid "There is surprisingly little to say about PuTTY itself."
msgstr ""

#: ../pro/putty.rst:73
msgid ""
"“Attempt authentication using Pageant” must be set, which is the default "
"anyway."
msgstr ""

#: ../pro/putty.rst:76
msgid ""
"That’s it, as soon as you connect to the server while pageant is running "
"and you have the keys, you will be asked for the password of the Crypto-"
"Stick and can log in."
msgstr ""

#: ../pro/putty.rst:80
msgid "**3) openpgp-minidriver (optional)**"
msgstr ""

#: ../pro/putty.rst:82
msgid ""
"If you are annoyed that Windows reports every time you plug in the stick "
"that no driver could be found for “Smartcard”, you can get rid of it. You"
" just have to install the x86 or x64 version of the above mentioned "
"driver and the smartcard looks like this:"
msgstr ""

#: ../start/setting-kdf-do.rst:2
msgid "Setting KDF-DO"
msgstr ""

#: ../start/setting-kdf-do.rst:4
msgid ""
"At the moment it is only possible to set the KDF-DO, when the Nitrokey "
"Start is empty (just after a factory reset)."
msgstr ""

#: ../start/setting-kdf-do.rst:6
msgid "Overview:"
msgstr ""

#: ../start/setting-kdf-do.rst:8
msgid "Run factory reset"
msgstr ""

#: ../start/setting-kdf-do.rst:9
msgid "Set up KDF-DO using GnuPG"
msgstr ""

#: ../start/setting-kdf-do.rst:10
msgid ""
"Change Admin PIN (optional; without keys only Admin PIN change is "
"possible)"
msgstr ""

#: ../start/setting-kdf-do.rst:11
msgid "Import / generate keys"
msgstr ""

#: ../start/setting-kdf-do.rst:12
msgid "Change User and Admin PIN"
msgstr ""

#: ../start/setting-kdf-do.rst:15
msgid "Setting KDF-DO using GnuPG:"
msgstr ""

#: ../start/setting-kdf-do.rst:17
msgid "Run `gpg2 --card-edit`"
msgstr ""

#: ../start/setting-kdf-do.rst:18
msgid "`$ admin`"
msgstr ""

#: ../start/setting-kdf-do.rst:19
msgid "`$ kdf-setup`"
msgstr ""

#: ../start/setting-kdf-do.rst:20
msgid "Enter Admin PIN"
msgstr ""

#: ../start/setting-kdf-do.rst:21
msgid ""
"Verify current state state by looking at the card details (`gpg2 --card-"
"status`), where `KDF setting ......: on` should be visible, e.g.:"
msgstr ""

#: ../start/setting-kdf-do.rst:32
msgid "Tested with:"
msgstr ""

#: ../start/setting-kdf-do.rst:34
msgid "gpg (GnuPG) 2.2.20 / 2.2.25"
msgstr ""

#: ../start/setting-kdf-do.rst:35
msgid "Nitrokey Start RTM.10"
msgstr ""

#: ../start/setting-kdf-do.rst:36
msgid "Curve 25519 keys"
msgstr ""

#: ../pro/smime-email-encryption.rst:2
msgid "S/MIME Email Encryption"
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:5
#: ../pro/smime-email-encryption-with-thunderbird.rst:5
#: ../pro/smime-email-encryption.rst:5
#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:10
msgid "Prerequisites"
msgstr ""

#: ../pro/smime-email-encryption.rst:13
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP, see "
"`here <https://docs.nitrokey.com/pro/openpgp-email-encryption.html>`__. "
"This page describes the usage of S/MIME email encryption."
msgstr ""

#: ../pro/smime-email-encryption.rst:17
msgid ""
"You need to purchase a S/MIME certificate or may already got one by your "
"company. Furthermore, you need to install `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__ on your System. While "
"GNU/Linux users usually can install OpenSC over the package manager (e.g."
" ``sudo apt install opensc`` on Ubuntu), macOS and Windows users can "
"download the installation files from the `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__ page."
msgstr ""

#: ../pro/smime-email-encryption.rst:25
msgid ""
"**Note: Windows users with 64-bit system (standard) need to install both,"
" the 32-bit and the 64-bit version of OpenSC!**"
msgstr ""

#: ../pro/smime-email-encryption.rst:29
msgid "Import Existing Key and Certificate"
msgstr ""

#: ../pro/smime-email-encryption.rst:31
msgid ""
"The following instructions are based on the `wiki of OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki/OpenPGP-card>`__. We will assume, "
"that you already got a key-certificate pair as a .p12 file. Please have a"
" look at the wiki page, if you got a separate key and certificate file."
msgstr ""

#: ../pro/smime-email-encryption.rst:42
msgid ""
"To make these commands as simple as possible, the .p12 file needs to be "
"in your home folder. On Windows this is usually ‘C:\\Users\\yourusername’"
" and on macOS and GNU/Linux system it will be ‘/home/yourusername’. If "
"you do not store the .p12 file there, you have to adapt the path in the "
"commands below. Please plug in the Nitrokey before submitting the "
"commands."
msgstr ""

#: ../pro/smime-email-encryption.rst:49
msgid ""
"Assuming that your key-certificate file reads ‘myprivate.p12’ the "
"commands for Windows looks like this:"
msgstr ""

#: ../pro/smime-email-encryption.rst:57
msgid "and on macOS and GNU/Linux it will be"
msgstr ""

#: ../pro/smime-email-encryption.rst:64
msgid ""
"The two commands copy the key-certificate pair to the slot 2 (needed for "
"decrypting emails) and slot 3 (needed for signing). The output looks on "
"both systems something like this:"
msgstr ""

#: ../pro/smime-email-encryption.rst:73
msgid ""
"Please note that there will be error messages that can be safely ignored "
"(see output example above). You now have the key-certificate pair loaded "
"on the Nitrokey."
msgstr ""

#: ../pro/smime-email-encryption.rst:82
msgid ""
"for using `S/MIME encryption on Thunderbird "
"<https://docs.nitrokey.com/pro/smime-email-encryption-with-"
"thunderbird.html>`__"
msgstr ""

#: ../pro/smime-email-encryption.rst:85
msgid ""
"for using `S/MIME encryption on Outlook <https://docs.nitrokey.com/pro"
"/smime-email-encryption-with-outlook.html>`__"
msgstr ""

#: ../pro/smime-email-encryption.rst:95
msgid ""
"On Windows: Did you install **both**, the 32-bit and the 64-bit version "
"of OpenSC?"
msgstr ""

#: ../pro/smime-email-encryption.rst:98
msgid ""
"Nitrokey Storage 2: You need to install OpenSC in version 0.18 or higher."
" You can find the files on the `OpenSC website "
"<https://github.com/OpenSC/OpenSC/releases>`__ for Windows and macOS user"
" or `here <https://github.com/Nitrokey/opensc-build>`__ for Debian/Ubuntu"
" users."
msgstr ""

#: ../pro/smime-email-encryption-with-thunderbird.rst:2
msgid "S/MIME Email Encryption with Thunderbird"
msgstr ""

#: ../pro/smime-email-encryption-with-thunderbird.rst:7
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet or if you did not installed OpenSC, please look at `this "
"page <https://docs.nitrokey.com/pro/smime-email-encryption.html>`__ "
"first."
msgstr ""

#: ../pro/smime-email-encryption-with-thunderbird.rst:11
msgid ""
"You need to have `OpenSC installed "
"<https://github.com/OpenSC/OpenSC/wiki>`__ on your System. While "
"GNU/Linux users usually can install OpenSC over the package manager (e.g."
" ``sudo apt update && sudo apt install opensc`` on Ubuntu), macOS and "
"Windows users can download the installation files from OpenSC directly."
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:18
#: ../pro/smime-email-encryption-with-thunderbird.rst:15
msgid ""
"Windows users with 64-bit system (standard) need to install both, the "
"32-bit and the 64-bit version of OpenSC!"
msgstr ""

#: ../pro/smime-email-encryption-with-thunderbird.rst:19
msgid "Settings in Thunderbird"
msgstr ""

#: ../pro/smime-email-encryption-with-thunderbird.rst:21
msgid ""
"Before you can use the Nitrokey in Thunderbird you have to activate "
"S/MIME encryption in the account settings. You can achieve this by "
"clicking on the menu and go to ‘Preferences’ -> ‘Account Settings’ and "
"clicking on ‘Security’ in the account settings window."
msgstr ""

#: ../pro/smime-email-encryption-with-thunderbird.rst:28
msgid ""
"Click on “Security Devices” to import the right PCKS11 module. Click on "
"“Load” on the right-hand side. Now give the Module a name (like “OpenSC "
"Module”) and click on “Browse” to choose the location of the Module (see "
"below)."
msgstr ""

#: ../pro/smime-email-encryption-with-thunderbird.rst:36
msgid ""
"On Windows the right file lays under “C:\\Windows\\System32\\opensc-"
"pkcs11.dll”. On macOS and GNU/Linux the file should be in “/lib/pkcs11"
"/opensc-pkcs11.so” or “/usr/lib/pkcs11/opensc-pkcs11.so” or alike. Press "
"“OK” twice and you are back in security section of the account settings. "
"Now you can actually choose a certificate on the upper part of the "
"window. You should get asked for a PIN to unlock your Nitrokey. Please "
"type in your User PIN."
msgstr ""

#: ../pro/smime-email-encryption-with-thunderbird.rst:49
msgid ""
"When composing an email you can now choose to encrypt and sign the "
"message."
msgstr ""

#: ../start/mac/index.rst:2
msgid "Nitrokey Start, Mac"
msgstr ""

#: ../start/mac/index.rst:11
msgid "Install `GnuPG 2.1 <https://gpgtools.org/>`__ or higher."
msgstr ""

#: ../start/mac/index.rst:12 ../start/windows/index.rst:12
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that "
"the USB smart card device driver gets installed almost automatically."
msgstr ""

#: ../start/mac/index.rst:15
msgid ""
"Use GnuPG to `generate new keys or import existing ones "
"<https://docs.nitrokey.com/start/mac/openpgp-email-encryption.html>`__."
msgstr ""

#: ../start/mac/index.rst:24 ../start/windows/index.rst:24
msgid ""
"Change the Admin PIN (default: ``12345678``) and then the User PIN "
"(default: ``123456``) to your own choices. - The PIN must consist of at "
"least 14 characters (starting from RTM.8), can contain any character (not"
" only numbers). Do not select only numbers. If your environment allows "
"that, use emoticons or national characters. - The longer the PIN the "
"better. It is possible to use 6 randomly selected words instead as well "
"for the same or better security than random character string. - Use ‘gpg "
"–card-edit’ -> ‘admin’ -> ‘passwd’ to achieve this (for Admin PIN case). "
"- Please be careful to change Admin PIN first and User PIN second! "
"Otherwise the admin-less mode got activated, see `this instructions "
"<https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#>`__ for "
"further information."
msgstr ""

#: ../start/mac/index.rst:26 ../start/windows/index.rst:26
msgid ""
"KDF-DO allows for a shorter PIN of 8 characters minimum. Please use "
"greater length for the increased security."
msgstr ""

#: ../start/mac/index.rst:47
msgid ""
"`instructions <https://docs.nitrokey.com/start/mac/openpgp-email-"
"encryption.html>`__ for using the OpenPGP standard with the Nitrokey"
msgstr ""

#: ../start/mac/index.rst:50
msgid ""
"`instructions <https://docs.nitrokey.com/start/mac/smime-email-"
"encryption.html>`__ for using S/MIME with the Nitrokey"
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:2
msgid "S/MIME Email Encryption with Outlook"
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:7
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet, please look at `this page <https://docs.nitrokey.com/pro"
"/smime-email-encryption.html>`__ first."
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:12
msgid ""
"You need to have OpenSC installed on your System. Please have a look at "
"the `wiki page of the OpenSC project "
"<https://github.com/OpenSC/OpenSC/wiki>`__."
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:22
msgid "Settings in Outlook"
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:24
msgid ""
"Before you can use the Nitrokey in Outlook you have to activate S/MIME "
"encryption. You can achieve this by clicking on to ‘Start’ -> ‘Options’ "
"and clicking on ‘Trust Center’ in the options window. In section ‘Email "
"Security’ you can choose your S/MIME identity. Your certificate should "
"already be recognized by Outlook."
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:30
msgid "|img1|"
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:32
msgid "|img2|"
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:38
msgid ""
"When composing a mail you can now choose to encrypt and sign the message "
"in the ‘Options’ ribbon of the compose window."
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:41
msgid "|img3|"
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:45
msgid ""
"Outlook will only encrypt message to mail addresses which are saved in "
"your address book. So make sure, that the persons you want to write an "
"encrypted mail to have an entry in Outlook’s contacts. You can ask the "
"person to write you a signed mail, so that you can import the certificate"
" information."
msgstr ""

#: ../pro/smime-email-encryption-with-outlook.rst:47
msgid ""
"Depending on your certificate or the certificate of your partners you may"
" have to import a so-called root certificate. This is the certificate of "
"the party which issued the certificate you or your partner uses. You "
"should usually got informed if this is necessary."
msgstr ""

#: ../start/windows/index.rst:2
msgid "Nitrokey Start, Windows"
msgstr ""

#: ../start/windows/index.rst:11
msgid "Install `Gpg4win <https://www.gpg4win.org/>`__ on your Computer."
msgstr ""

#: ../start/windows/index.rst:17
msgid ""
"Windows may fail to install an additional device driver for the smart "
"card. Its safe to ignore this warning."
msgstr ""

#: ../start/windows/index.rst:19
msgid ""
"Use GnuPG to `generate new keys or import existing ones "
"<https://www.nitrokey.com/documentation/openpgp-email-encryption>`__."
msgstr ""

#: ../start/windows/index.rst:22
msgid ""
"It is indeed necessary to first import or create new keys and change the "
"PINs afterwards. Otherwise changing User PIN will fail! Furthermore "
"overriding keys results in PIN reset (default values),  please keep this "
"in mind!"
msgstr ""

#: ../start/windows/index.rst:47
msgid ""
"`instructions <https://www.nitrokey.com/documentation/openpgp-email-"
"encryption>`__ for using the OpenPGP standard with the Nitrokey"
msgstr ""

#: ../start/windows/index.rst:50
msgid ""
"`instructions <https://www.nitrokey.com/documentation/smime-email-"
"encryption>`__ for using S/MIME with the Nitrokey"
msgstr ""

#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:2
msgid "OpenPGP Email Encryption with Outlook"
msgstr ""

#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:6
msgid ""
"Unfortunately, there is no solution to use OpenPGP in Outlook for macOS "
"yet."
msgstr ""

#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:12
msgid ""
"If you do not have PGP-Keys on your Nitrokey yet, please look at `this "
"page <https://www.nitrokey.com/documentation/openpgp-email-encryption>`__"
" first."
msgstr ""

#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:16
msgid ""
"You need to have GnuPG installed on your System. The newest GnuPG version"
" for Windows can be found `here <https://www.gpg4win.org>`__. You need to"
" make sure to have “GpgOL” checked during installation process (see "
"below)."
msgstr ""

#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:29
msgid ""
"After installing GPG4Win along with GpgOL, you will see a new icon "
"labeled “Secure” in the composing window. To encrypt and sign a mail you "
"just click on the sign like seen below."
msgstr ""

#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:38
msgid ""
"GnuPG will start signing and encrypting the mail as soon as you click on "
"‘send’. You are requested to choose the identity you want to sign with "
"and encrypt for."
msgstr ""

#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:47
msgid ""
"Furthermore, you are asked for typing in the User PIN of the Nitrokey for"
" signing the mail."
msgstr ""

#: ../pro/windows/openpgp-email-encryption-with-outlook.rst:55
msgid ""
"You will be asked automatically for your User PIN if you want to read an "
"encrypted mail."
msgstr ""

#~ msgid ""
#~ "::: note Windows may fail to "
#~ "install an additional device driver for"
#~ " the smart card. Its safe to "
#~ "ignore this warning. ::: 3. Use "
#~ "GnuPG to `generate new keys or "
#~ "import existing ones "
#~ "<https://www.nitrokey.com/documentation/openpgp-email-"
#~ "encryption>`__."
#~ msgstr ""

#~ msgid ""
#~ "::: note It is indeed necessary to"
#~ " first import or create new keys "
#~ "and change the PINs afterwards. "
#~ "Otherwise changing User PIN will fail!"
#~ " Furthermore overriding keys results in "
#~ "PIN reset (default values), please keep"
#~ " this in mind! :::"
#~ msgstr ""

#~ msgid ""
#~ "4. Change the Admin PIN (default: "
#~ "``12345678``) and then the User PIN "
#~ "(default: ``123456``) to your own "
#~ "choices. - The PIN must consist of"
#~ " at least 14 characters (starting "
#~ "from RTM.8), can contain any character"
#~ " (not only numbers). Do not select"
#~ " only numbers. If your environment "
#~ "allows that, use emoticons or national"
#~ " characters. - The longer the PIN "
#~ "the better. It is possible to use"
#~ " 6 randomly selected words instead as"
#~ " well for the same or better "
#~ "security than random character string. -"
#~ " Use ‘gpg –card-edit’ -> ‘admin’ "
#~ "-> ‘passwd’ to achieve this (for "
#~ "Admin PIN case). - Please be "
#~ "careful to change Admin PIN first "
#~ "and User PIN second! Otherwise the "
#~ "admin-less mode got activated, see "
#~ "`this instructions <https://www.fsij.org/doc-gnuk"
#~ "/gnuk-passphrase-setting.html#>`__ for further"
#~ " information. - Optionally Reset code "
#~ "can be set up (`guide "
#~ "<http://www.fsij.org/doc-gnuk/gnuk-passphrase-"
#~ "setting.html#set-up-pw1-pw3-and-reset-"
#~ "code>`__). The minimum length accepted "
#~ "is 8 characters, however it should "
#~ "be as long as User PIN. 5. "
#~ "KDF-DO allows for a shorter PIN "
#~ "of 8 characters minimum, by executing"
#~ " part of the calculations on the "
#~ "PC. Please use greater length for "
#~ "the increased security."
#~ msgstr ""

#~ msgid ""
#~ "**Firmware version 1.2.5 or below: In"
#~ " case you forget a PIN or enter"
#~ " it wrongly three times you need "
#~ "the reset code to unblock the PIN."
#~ " Otherwise the device wouldn’t be "
#~ "usable anymore! Therefore please**\\ `set "
#~ "the reset code <http://www.fsij.org/doc-gnuk"
#~ "/gnuk-passphrase-setting.html#set-up-pw1-pw3"
#~ "-and-reset-code>`__\\ **as well when "
#~ "initialising the key!**"
#~ msgstr ""

#~ msgid "Set up KDF"
#~ msgstr ""

#~ msgid "Setting KDF:"
#~ msgstr ""

#~ msgid ""
#~ "4. Change the Admin PIN (default: "
#~ "``12345678``) and then the User PIN "
#~ "(default: ``123456``) to your own "
#~ "choices. - The PIN must consist of"
#~ " at least 14 characters (starting "
#~ "from RTM.8), can contain any character"
#~ " (not only numbers). Do not select"
#~ " only numbers. If your environment "
#~ "allows that, use emoticons or national"
#~ " characters. - The longer the PIN "
#~ "the better. It is possible to use"
#~ " 6 randomly selected words instead as"
#~ " well for the same or better "
#~ "security than random character string. -"
#~ " Use ‘gpg –card-edit’ -> ‘admin’ "
#~ "-> ‘passwd’ to achieve this (for "
#~ "Admin PIN case). - Please be "
#~ "careful to change Admin PIN first "
#~ "and User PIN second! Otherwise the "
#~ "admin-less mode got activated, see "
#~ "`this instructions <https://www.fsij.org/doc-gnuk"
#~ "/gnuk-passphrase-setting.html#>`__ for further"
#~ " information. 5. KDF-DO allows for"
#~ " a shorter PIN of 8 characters "
#~ "minimum. Please use greater length for"
#~ " the increased security."
#~ msgstr ""

#~ msgid "Change the Admin PIN (default: ``12345678``) and then the User PIN"
#~ msgstr ""

#~ msgid ""
#~ "(default: ``123456``) to your own "
#~ "choices. - The PIN must consist of"
#~ " at least 14 characters (starting "
#~ "from RTM.8), can contain any character"
#~ " (not only numbers). Do not select"
#~ " only numbers. If your environment "
#~ "allows that, use emoticons or national"
#~ " characters. - The longer the PIN "
#~ "the better. It is possible to use"
#~ " 6 randomly selected words instead as"
#~ " well for the same or better "
#~ "security than random character string. -"
#~ " Use ‘gpg –card-edit’ -> ‘admin’ "
#~ "-> ‘passwd’ to achieve this (for "
#~ "Admin PIN case). - Please be "
#~ "careful to change Admin PIN first "
#~ "and User PIN second! Otherwise the "
#~ "admin-less mode got activated, see "
#~ "`this instructions <https://www.fsij.org/doc-gnuk"
#~ "/gnuk-passphrase-setting.html#>`__ for further"
#~ " information."
#~ msgstr ""

#~ msgid "KDF-DO allows for a shorter PIN of 8"
#~ msgstr ""

#~ msgid ""
#~ "characters minimum. Please use greater "
#~ "length for the increased security."
#~ msgstr ""

#~ msgid ""
#~ "It is indeed necessary to first "
#~ "import or create new keys and "
#~ "change the PINs afterwards. Otherwise "
#~ "changing User PIN will fail! Furthermore"
#~ " overriding keys results in PIN reset"
#~ " (default values), please keep this "
#~ "in mind! :::"
#~ msgstr ""

#~ msgid ""
#~ "**Firmware version 1.2.5 or below: In"
#~ " case you forget a PIN or enter"
#~ " it wrongly three times you need "
#~ "the reset code to unblock the PIN."
#~ " Otherwise the device wouldn’t be "
#~ "usable anymore! Therefore please `set "
#~ "the reset code <http://www.fsij.org/doc-gnuk"
#~ "/gnuk-passphrase-setting.html#set-up-pw1-pw3"
#~ "-and-reset-code>`__ as well when "
#~ "initialising the key!**"
#~ msgstr ""

#~ msgid ""
#~ "Your Nitrokey is now ready to use."
#~ " `Checkout "
#~ "<https://www.nitrokey.com/documentation/applications>`__ the "
#~ "various use cases and supported "
#~ "applications. ## Key Creation with "
#~ "OpenPGP or S/MIME There are two "
#~ "widely used standards for email "
#~ "encryption. While OpenPGP/GnuPG is popular "
#~ "among individuals, S/MIME/x.509 is mostly "
#~ "used by enterprises. If you are in"
#~ " doubt which one to choose, you "
#~ "should use OpenPGP."
#~ msgstr ""

#~ msgid ""
#~ "At the moment Thunderbird’s 78 support"
#~ " for the OpenPGP emails is not "
#~ "easy to set up. See `Thunderbird’s "
#~ "documentation "
#~ "<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`__ for"
#~ " details. Here is a `comprehensive "
#~ "German guide <https://decatec.de/it/thunderbird-78-pgp-"
#~ "verschluesselung-mit-dem-nitrokey-"
#~ "storage/>`__. ## Troubleshooting 1. Error "
#~ "message: ``The configured key ID "
#~ "'4BA0183FCBA844A7' cannot be found on "
#~ "your keyring`` - make sure that: -"
#~ " public key is imported to the "
#~ "Thunderbird’s manager - the key ID "
#~ "does not contain any whitespace, and "
#~ "consists of 16 characters from range "
#~ "0-9 A-F - you have GPA or "
#~ "Kleopatra software installed"
#~ msgstr ""

#~ msgid ""
#~ "You need to have OpenSC installed "
#~ "on your System. Please have a look"
#~ " at the `wiki page of the "
#~ "OpenSC project <https://github.com/OpenSC/OpenSC/wiki>`__."
#~ " While GNU/Linux users usually can "
#~ "install OpenSC over the package manager"
#~ " (e.g. sudo apt update && sudo "
#~ "apt install opensc on Ubuntu), macOS "
#~ "and Windows users can download the "
#~ "installation files from the wiki page."
#~ msgstr ""
