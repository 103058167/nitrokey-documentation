# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-15 06:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../nethsm/index.rst:2
msgid "NetHSM"
msgstr ""

#: ../nethsm/index.rst:13
msgid "This guide explains three different methods of accessing a NetHSM instance:"
msgstr ""

#: ../nethsm/index.rst:15
msgid "nitropy command line tool"
msgstr ""

#: ../nethsm/index.rst:16
msgid "REST API"
msgstr ""

#: ../nethsm/index.rst:17
msgid "PKCS#11 driver"
msgstr ""

#: ../nethsm/index.rst:20
msgid "Development and Testing"
msgstr ""

#: ../nethsm/index.rst:22
msgid "A public NetHSM demo instance is available at `nethsmdemo.nitrokey.com <https://nethsmdemo.nitrokey.com>`__."
msgstr ""

#: ../nethsm/index.rst:24
msgid "Alternatively you can run the `NetHSM Docker container <https://hub.docker.com/r/nitrokey/nethsm>`__ locally. The NetHSM container requires nested virtualization for strong separation with other containers. Thus, to start a NetHSM container you need a Linux host with /dev/kvm available. Execute this command:"
msgstr ""

#: ../nethsm/index.rst:34
msgid "CLI Tutorial"
msgstr ""

#: ../nethsm/index.rst:36
msgid "This tutorial demonstrates how to access the NetHMS via `nitropy <https://github.com/Nitrokey/pynitrokey>`__ command line tool, which you need to download and install."
msgstr ""

#: ../nethsm/index.rst:38
#: ../nethsm/index.rst:206
msgid "First, let’s see what we have here:"
msgstr ""

#: ../nethsm/index.rst:49
msgid "If you use a self-signed certificate for the NetHSM demo instance, you have to set the ``--no-verify-ssl`` option for `nitropy`, for example::"
msgstr ""

#: ../nethsm/index.rst:54
#: ../nethsm/index.rst:221
msgid "See what the device’s status is:"
msgstr ""

#: ../nethsm/index.rst:62
#: ../nethsm/index.rst:237
msgid "Initialization"
msgstr ""

#: ../nethsm/index.rst:64
#: ../nethsm/index.rst:239
msgid "A new NetHSM needs to be provisioned first with passphrases and the current time. The *Admin Passphrase* is the *Administrator*’s passphrase, which is the super user of the NetHSM. The *Unlock Passphrase* is used to encrypt NetHSM’s confidential data store."
msgstr ""

#: ../nethsm/index.rst:75
#: ../nethsm/index.rst:257
msgid "NetHSM can be used in *Attended Boot* mode and *Unattended Boot* mode."
msgstr ""

#: ../nethsm/index.rst:77
#: ../nethsm/index.rst:259
msgid "In *Attended Boot* mode the *Unlock Passphrase* needs to be entered during each start which is used to encrypt the data store. For security reasons this mode is recommended."
msgstr ""

#: ../nethsm/index.rst:80
#: ../nethsm/index.rst:262
msgid "In *Unattended Boot* mode no Unlock Passphrase is required, therefore the NetHSM can start unattended and the data store is stored unencrypted. Use this mode if your availability requirements can’t be fulfilled with *Attended Boot* mode."
msgstr ""

#: ../nethsm/index.rst:85
#: ../nethsm/index.rst:267
msgid "Retrieve the current mode:"
msgstr ""

#: ../nethsm/index.rst:94
#: ../nethsm/index.rst:273
msgid "Switch to *Unattended Boot* mode:"
msgstr ""

#: ../nethsm/index.rst:102
#: ../nethsm/index.rst:280
msgid "Or switch back to *Attended Boot* mode:"
msgstr ""

#: ../nethsm/index.rst:111
#: ../nethsm/index.rst:288
msgid "Roles"
msgstr ""

#: ../nethsm/index.rst:113
#: ../nethsm/index.rst:290
msgid "Separation of duties can be implemented by using the available Roles. Each user account configured on the NetHSM has one of the following Roles assigned to it. Following is a high-level description of the operations allowed by individual Roles, for endpoint-specific details please refer to the REST API documentation."
msgstr ""

#: ../nethsm/index.rst:119
msgid "*R-Administrator* A user account with this Role has access to all operations provided by the REST API, with the exception of key usage operations, i.e. message signing and decryption."
msgstr ""

#: ../nethsm/index.rst:122
#: ../nethsm/index.rst:299
msgid "*R-Operator* A user account with this Role has access to all key usage op- erations, a read-only subset of key management operations and user management operations allowing changes to their own account only."
msgstr ""

#: ../nethsm/index.rst:126
#: ../nethsm/index.rst:303
msgid "*R-Metrics* A user account with this Role has access to read-only metrics operations only."
msgstr ""

#: ../nethsm/index.rst:128
#: ../nethsm/index.rst:305
msgid "*R-Backup* A user account with this Role has access to the operations required to initiate a system backup only."
msgstr ""

#: ../nethsm/index.rst:131
#: ../nethsm/index.rst:308
msgid "Note: In a future release another Role will be implemented which is allowed to /keys/ POST, /keys/generate POST, /keys/{KeyID} PUT & DELETE, /keys/{KeyID}/cert PUT & DELETE in addition to what R-Operator is allowed to do."
msgstr ""

#: ../nethsm/index.rst:134
#: ../nethsm/index.rst:311
msgid "Create a User"
msgstr ""

#: ../nethsm/index.rst:144
#: ../nethsm/index.rst:321
msgid "Generate Keys"
msgstr ""

#: ../nethsm/index.rst:154
#: ../nethsm/index.rst:339
msgid "List Keys"
msgstr ""

#: ../nethsm/index.rst:167
#: ../nethsm/index.rst:355
msgid "Show Key Details"
msgstr ""

#: ../nethsm/index.rst:181
#: ../nethsm/index.rst:365
msgid "Decryption"
msgstr ""

#: ../nethsm/index.rst:199
msgid "API Tutorial"
msgstr ""

#: ../nethsm/index.rst:201
msgid "This tutorial demonstrates how to access the NetHMS via REST API. The interface is `documented here <https://nethsmdemo.nitrokey.com/api_docs/index.html#docs/summary/summary>`__ and it's specification is available as `RAML <https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.raml>`__ and as `OpenAPI (Swagger) <https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20.json>`__."
msgstr ""

#: ../nethsm/index.rst:296
msgid "*R-Administrator* A user account with this Role has access to all operations provided by the REST API, with the exception of key usage operations, i.e. message signing and decryption."
msgstr ""

#: ../nethsm/index.rst:367
msgid "TODO"
msgstr ""

#: ../nethsm/index.rst:370
msgid "PKCS#11"
msgstr ""

#: ../nethsm/index.rst:372
msgid "Download the `PKCS#11 driver <https://github.com/Nitrokey/nethsm-pkcs11>`__ for NetHSM."
msgstr ""

#: ../nethsm/index.rst:373
msgid "Modify the configuration file ``p11nethsm-config.yaml`` according to your setup (e.g. address, operator name) and store it in ``$HOME/.nitrokey``, ``/etc/nitrokey/``, or in the folder where your application is executed."
msgstr ""

#: ../nethsm/index.rst:378
msgid "Decrypting"
msgstr ""

#: ../nethsm/index.rst:380
msgid "After creating a key (here: ID 42) with the according mechanism, you can use it for decryption:"
msgstr ""

#: ../nethsm/index.rst:396
msgid "Signing"
msgstr ""

#: ../nethsm/index.rst:398
msgid "After creating a key (here: ID 23) with the according mechanism, you can use it for decryption:"
msgstr ""

#: ../nethsm/index.rst:412
msgid "Integration to Custom Application"
msgstr ""

#: ../nethsm/index.rst:414
msgid "To integrate the NetHSM into own custom applications client libraries are available for almost all programming languages, including JavaScript, C++ and Python for example. Therefore we recommend using `OpenAPI Generator <https://github.com/OpenAPITools/openapi-generator>`__."
msgstr ""

#: ../nethsm/index.rst:416
msgid "To list all the available languages, you enter"
msgstr ""

#: ../nethsm/index.rst:422
msgid "Then you can generate the NetHSM client for your programming language like this:"
msgstr ""

#: ../nethsm/index.rst:428
msgid "The generated client code, in this example JavaScript, will be created in the ``./out/`` directory. This folder also contains the necessary documentation how to use it."
msgstr ""

#: ../nethsm/index.rst:431
msgid "Example in Python:"
msgstr ""

#: ../nethsm/index.rst:441
msgid "Old description, needs to be converted to current API"
msgstr ""

#: ../nethsm/index.rst:443
msgid "Does it has some keys on it?"
msgstr ""

#: ../nethsm/index.rst:455
msgid "Ohh, NetHSM seems to have access control. In fact is has an Admin password and a User password. The Admin password is used to authenticate any kind of changes of the system, settings and keys. The User password is required to authenticate the usage of keyfender without any modification."
msgstr ""

#: ../nethsm/index.rst:461
msgid "Before you can do anything with the system, the Admin password needs to be defined first. It doesn’t has a default value."
msgstr ""

#: ../nethsm/index.rst:471
msgid "If you want to change the Admin password again, you need to authenticate:"
msgstr ""

#: ../nethsm/index.rst:481
msgid "Define a User password:"
msgstr ""

#: ../nethsm/index.rst:490
msgid "You can generate RSA keys:"
msgstr ""

#: ../nethsm/index.rst:504
msgid "Here you got the location of the newly generated key. The last part of the URL is the key ID: Im4bPvqXM8w4SZxEvxvi"
msgstr ""

#: ../nethsm/index.rst:507
msgid "Instead of dealing with generated key IDs, you can specify the key ID yourself:"
msgstr ""

#: ../nethsm/index.rst:522
msgid "You can also import existing keys:"
msgstr ""

#: ../nethsm/index.rst:536
msgid "You can overwrite an existing key with PUT or delete with DELETE."
msgstr ""

#: ../nethsm/index.rst:538
msgid "Now we are going to perform key operations. For this we don’t need the Admin password anymore but can use the User password instead. What we have got?"
msgstr ""

#: ../nethsm/index.rst:560
msgid "Here is how you get a public key:"
msgstr ""

#: ../nethsm/index.rst:584
msgid "You can get it also in PEM format:"
msgstr ""

#: ../nethsm/index.rst:605
msgid "With each key you can execute decrypt and signing operations (Technical restriction to the designated key purpose is not enforced yet.) Signing can invoke hashing, or you send a hash instead."
msgstr ""

#: ../nethsm/index.rst:613
msgid "Decrypting data is similarly easy:"
msgstr ""

#: ../nethsm/index.rst:619
msgid "Available key actions:"
msgstr ""

#: ../nethsm/index.rst:621
msgid "decrypt"
msgstr ""

#: ../nethsm/index.rst:622
msgid "pkcs1/decrypt"
msgstr ""

#: ../nethsm/index.rst:623
msgid "oaep/md5/decrypt"
msgstr ""

#: ../nethsm/index.rst:624
msgid "oaep/sha1/decrypt"
msgstr ""

#: ../nethsm/index.rst:625
msgid "oaep/sha224/decrypt"
msgstr ""

#: ../nethsm/index.rst:626
msgid "oaep/sha256/decrypt"
msgstr ""

#: ../nethsm/index.rst:627
msgid "oaep/sha384/decrypt"
msgstr ""

#: ../nethsm/index.rst:628
msgid "oaep/sha512/decrypt"
msgstr ""

#: ../nethsm/index.rst:629
msgid "pkcs1/sign"
msgstr ""

#: ../nethsm/index.rst:630
msgid "pss/sha1/sign"
msgstr ""

#: ../nethsm/index.rst:631
msgid "pss/sha224/sign"
msgstr ""

#: ../nethsm/index.rst:632
msgid "pss/sha256/sign"
msgstr ""

#: ../nethsm/index.rst:633
msgid "pss/sha384/sign"
msgstr ""

#: ../nethsm/index.rst:634
msgid "pss/sha512/sign"
msgstr ""

