# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-12 17:26+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../nethsm/index.rst:2
msgid "NetHSM"
msgstr ""

#: ../nethsm/index.rst:4
msgid "NetHSM container requires nested virtualization for strong separation with other containers. Thus, to start a NetHSM container you need a Linux host with /dev/kvm available. Execute this command:"
msgstr ""

#: ../nethsm/index.rst:12
msgid "You can generate client libraries for the API in many programming languages using the `OpenAPI Generator <https://github.com/OpenAPITools/openapi-generator>`__, for example in Python:"
msgstr ""

#: ../nethsm/index.rst:21
msgid "API Tutorial"
msgstr ""

#: ../nethsm/index.rst:23
msgid "The interface specification is available as `RAML <https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.raml>`__ and as `OpenAPI (Swagger) <https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20.json>`__."
msgstr ""

#: ../nethsm/index.rst:28
msgid "First, let’s see what we have here:"
msgstr ""

#: ../nethsm/index.rst:43
msgid "See what the device’s status is:"
msgstr ""

#: ../nethsm/index.rst:59
msgid "Initialization"
msgstr ""

#: ../nethsm/index.rst:61
msgid "A new NetHSM needs to be provisioned first with passphrases and the current time. The *Admin Passphrase* is the *Administrator*’s passphrase, which is the super user of the NetHSM. The *Unlock Passphrase* is used to encrypt NetHSM’s confidential data store."
msgstr ""

#: ../nethsm/index.rst:76
msgid "NetHSM can be used in *Attended Boot* mode and *Unattended Boot* mode."
msgstr ""

#: ../nethsm/index.rst:78
msgid "In *Attended Boot* mode the *Unlock Passphrase* needs to be entered during each start which is used to encrypt the data store. For security reasons this mode is recommended."
msgstr ""

#: ../nethsm/index.rst:81
msgid "In *Unattended Boot* mode no Unlock Passphrase is required, therefore the NetHSM can start unattended and the data store is stored unencrypted. Use this mode if your availability requirements can’t be fulfilled with *Attended Boot* mode."
msgstr ""

#: ../nethsm/index.rst:86
msgid "Retrieve the current mode:"
msgstr ""

#: ../nethsm/index.rst:92
msgid "Switch to *Unattended Boot* mode:"
msgstr ""

#: ../nethsm/index.rst:98
msgid "Switch to *Attended Boot* mode:"
msgstr ""

#: ../nethsm/index.rst:105
msgid "Roles"
msgstr ""

#: ../nethsm/index.rst:107
msgid "Separation of duties can be implemented by using the available Roles. Each user account configured on the NetHSM has one of the following Roles assigned to it. Following is a high-level description of the operations allowed by individual Roles, for endpoint-specific details please refer to the REST API documentation."
msgstr ""

#: ../nethsm/index.rst:113
msgid "*R-Administrator* A user account with this Role has access to all operations provided by the REST API, with the exception of key usage operations, i.e. message signing and decryption."
msgstr ""

#: ../nethsm/index.rst:116
msgid "*R-Operator* A user account with this Role has access to all key usage op- erations, a read-only subset of key management operations and user management operations allowing changes to their own account only."
msgstr ""

#: ../nethsm/index.rst:120
msgid "*R-Metrics* A user account with this Role has access to read-only metrics operations only."
msgstr ""

#: ../nethsm/index.rst:122
msgid "*R-Backup* A user account with this Role has access to the operations required to initiate a system backup only."
msgstr ""

#: ../nethsm/index.rst:124
msgid "Note: Another Role will be implemented which is allowed to /keys/ POST, /keys/generate POST, /keys/{KeyID} PUT & DELETE, /keys/{KeyID}/cert PUT & DELETE in addition to what R-Operator is allowed to do."
msgstr ""

#: ../nethsm/index.rst:130
msgid "Create a User"
msgstr ""

#: ../nethsm/index.rst:140
msgid "Create Keys"
msgstr ""

#: ../nethsm/index.rst:155
msgid "List Keys"
msgstr ""

#: ../nethsm/index.rst:171
msgid "Show Key Details"
msgstr ""

#: ../nethsm/index.rst:180
msgid "API Documentation"
msgstr ""

#: ../nethsm/index.rst:182
msgid "The entire API is described `here <https://www.nitrokey.com/files/nethsmapi/>`__."
msgstr ""

#: ../nethsm/index.rst:186
msgid "PKCS#11"
msgstr ""

#: ../nethsm/index.rst:188
msgid "Download the PKCS#11 driver for NetHSM."
msgstr ""

#: ../nethsm/index.rst:189
msgid "Modify the configuration file ``p11nethsm-config.yaml`` according to your setup and store it in ``$HOME/.nitrokey``, ``/etc/nitrokey/``, or in the folder where your application is executed."
msgstr ""

#: ../nethsm/index.rst:194
msgid "Decrypting"
msgstr ""

#: ../nethsm/index.rst:196
#: ../nethsm/index.rst:216
msgid "Before, create the key with the according mechanism before, and configure NetHSM’s address and operator username in the p11nethsm config file."
msgstr ""

#: ../nethsm/index.rst:214
msgid "Signing"
msgstr ""

#: ../nethsm/index.rst:232
msgid "Integrating into own custom application"
msgstr ""

#: ../nethsm/index.rst:234
msgid "To integrate the NetHSM into own custom applications we recommend using NetHSM’s REST API. To generate a client library for many different languages, including JavaScript, C++ and Python, you can use the `openapi-generator <https://github.com/OpenAPITools/openapi-generator>`__. You can install it locally, or use a Docker container, which is very easy. To list all the available languages, you enter"
msgstr ""

#: ../nethsm/index.rst:245
msgid "Then you can generate the NetHSM client like this:"
msgstr ""

#: ../nethsm/index.rst:251
msgid "The generated client code, in this case JavaScript, will be created in the ``./out/`` directory. There is documentation inside as well, how to use it."
msgstr ""

#: ../nethsm/index.rst:256
msgid "Old description, needs to be converted to current API"
msgstr ""

#: ../nethsm/index.rst:258
msgid "Does it has some keys on it?"
msgstr ""

#: ../nethsm/index.rst:270
msgid "Ohh, NetHSM seems to have access control. In fact is has an Admin password and a User password. The Admin password is used to authenticate any kind of changes of the system, settings and keys. The User password is required to authenticate the usage of keyfender without any modification."
msgstr ""

#: ../nethsm/index.rst:276
msgid "Before you can do anything with the system, the Admin password needs to be defined first. It doesn’t has a default value."
msgstr ""

#: ../nethsm/index.rst:286
msgid "If you want to change the Admin password again, you need to authenticate:"
msgstr ""

#: ../nethsm/index.rst:296
msgid "Define a User password:"
msgstr ""

#: ../nethsm/index.rst:305
msgid "You can generate RSA keys:"
msgstr ""

#: ../nethsm/index.rst:319
msgid "Here you got the location of the newly generated key. The last part of the URL is the key ID: Im4bPvqXM8w4SZxEvxvi"
msgstr ""

#: ../nethsm/index.rst:322
msgid "Instead of dealing with generated key IDs, you can specify the key ID yourself:"
msgstr ""

#: ../nethsm/index.rst:337
msgid "You can also import existing keys:"
msgstr ""

#: ../nethsm/index.rst:351
msgid "You can overwrite an existing key with PUT or delete with DELETE."
msgstr ""

#: ../nethsm/index.rst:353
msgid "Now we are going to perform key operations. For this we don’t need the Admin password anymore but can use the User password instead. What we have got?"
msgstr ""

#: ../nethsm/index.rst:375
msgid "Here is how you get a public key:"
msgstr ""

#: ../nethsm/index.rst:399
msgid "You can get it also in PEM format:"
msgstr ""

#: ../nethsm/index.rst:420
msgid "With each key you can execute decrypt and signing operations (Technical restriction to the designated key purpose is not enforced yet.) Signing can invoke hashing, or you send a hash instead."
msgstr ""

#: ../nethsm/index.rst:428
msgid "Decrypting data is similarly easy:"
msgstr ""

#: ../nethsm/index.rst:434
msgid "Available key actions:"
msgstr ""

#: ../nethsm/index.rst:436
msgid "decrypt"
msgstr ""

#: ../nethsm/index.rst:437
msgid "pkcs1/decrypt"
msgstr ""

#: ../nethsm/index.rst:438
msgid "oaep/md5/decrypt"
msgstr ""

#: ../nethsm/index.rst:439
msgid "oaep/sha1/decrypt"
msgstr ""

#: ../nethsm/index.rst:440
msgid "oaep/sha224/decrypt"
msgstr ""

#: ../nethsm/index.rst:441
msgid "oaep/sha256/decrypt"
msgstr ""

#: ../nethsm/index.rst:442
msgid "oaep/sha384/decrypt"
msgstr ""

#: ../nethsm/index.rst:443
msgid "oaep/sha512/decrypt"
msgstr ""

#: ../nethsm/index.rst:444
msgid "pkcs1/sign"
msgstr ""

#: ../nethsm/index.rst:445
msgid "pss/sha1/sign"
msgstr ""

#: ../nethsm/index.rst:446
msgid "pss/sha224/sign"
msgstr ""

#: ../nethsm/index.rst:447
msgid "pss/sha256/sign"
msgstr ""

#: ../nethsm/index.rst:448
msgid "pss/sha384/sign"
msgstr ""

#: ../nethsm/index.rst:449
msgid "pss/sha512/sign"
msgstr ""

