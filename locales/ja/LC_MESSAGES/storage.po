# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-31 15:35+0100\n"
"PO-Revision-Date: 2022-01-26 11:44+0000\n"
"Last-Translator: Ben (Weblate Admin) <ben@dotplex.com>\n"
"Language: ja\n"
"Language-Team: Japanese <https://translate.nitrokey.com/projects"
"/nitrokey-documentation/documentation-storage/ja/>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../storage/factory-reset.rst:2
msgid "Factory Reset"
msgstr "ファクトリーリセット"

#: ../storage/factory-reset.rst:8
msgid "There are two types of factory resets for Nitrokey Storage devices:"
msgstr "Nitrokey Storageデバイスのファクトリーリセットには2種類あります。"

#: ../storage/factory-reset.rst:10
msgid ""
"a factory reset of the OpenPGP smart card, for example using ``gpg "
"--card-edit``, followed by ``admin`` and finally: ``factory-reset``"
msgstr ""
"例えば、``gpg --card-"
"edit``を使用して、OpenPGPスマートカードのファクトリーリセットを行い、その後、``admin``を使用し、最後に``factory-"
"reset``"

#: ../storage/factory-reset.rst:12
msgid "a factory reset of the entire Nitrokey device using the Nitrokey App."
msgstr "Nitrokey Appを使用して、Nitrokeyデバイス全体のファクトリーリセットを行う。"

#: ../storage/factory-reset.rst:14
msgid ""
"Also, it is possible to generate a new AES key that is used to encrypt "
"the Password Safe and the Encrypted Volume without performing a factory "
"reset."
msgstr "また、パスワードセーフと暗号化ボリュームの暗号化に使用するAESキーは、工場出荷時にリセットすることなく新たに生成することができます。"

#: ../storage/factory-reset.rst:19
msgid ""
"The Nitrokey App always generates a new AES key after performing a "
"factory reset."
msgstr "Nitrokey Appは、工場出荷時のリセットを行うと、常に新しいAESキーを生成します。"

#: ../storage/factory-reset.rst:22
msgid ""
"The following table describes the differences between these three "
"operations:"
msgstr "この3つの操作の違いを以下の表にまとめました。"

#: ../storage/factory-reset.rst:25
msgid "Property"
msgstr "プロパティ"

#: ../storage/factory-reset.rst:25
msgid "OpenPGP factory reset"
msgstr "OpenPGPのファクトリーリセット"

#: ../storage/factory-reset.rst:25
msgid "Nitrokey factory reset"
msgstr "Nitrokeyファクトリーリセット"

#: ../storage/factory-reset.rst:25
msgid "Generate AES key"
msgstr "AESキーの生成"

#: ../storage/factory-reset.rst:27
msgid "Requires admin PIN"
msgstr "管理用PINが必要"

#: ../storage/factory-reset.rst:27 ../storage/factory-reset.rst:28
#: ../storage/factory-reset.rst:30
msgid "no"
msgstr "ノー"

#: ../storage/factory-reset.rst:27 ../storage/factory-reset.rst:28
#: ../storage/factory-reset.rst:29 ../storage/factory-reset.rst:30
msgid "yes"
msgstr "そう"

#: ../storage/factory-reset.rst:28
msgid "Destroys OpenPGP keys"
msgstr "OpenPGPキーを破壊する"

#: ../storage/factory-reset.rst:29
msgid "Destroys Password Safe"
msgstr "パスワードセーフを破壊する"

#: ../storage/factory-reset.rst:29 ../storage/factory-reset.rst:31
msgid "yes [1]_"
msgstr "はい [1]_。"

#: ../storage/factory-reset.rst:30
msgid "Destroys One-Time Passwords"
msgstr "ワンタイムパスワードの破壊"

#: ../storage/factory-reset.rst:30
msgid "yes [2]_"
msgstr "はい [1]_。"

#: ../storage/factory-reset.rst:31
msgid "Destroys Encrypted Volume"
msgstr "暗号化されたボリュームを破壊する"

#: ../storage/factory-reset.rst:34
msgid "Clears the encryption key without overwriting the encrypted data."
msgstr "暗号化されたデータを上書きすることなく、暗号化キーを消去します。"

#: ../storage/factory-reset.rst:35
msgid "This is expected to change in new Nitrokey Storage firmware versions."
msgstr "これは、Nitrokey Storageの新しいファームウェアバージョンで変更される予定です。"

#: ../storage/faq.rst:2
msgid "Nitrokey Storage FAQ"
msgstr "Nitrokeyストレージに関するFAQ"

#: ../storage/faq.rst:4
msgid ""
"As the Nitrokey Storage 2 is essentially a Nitrokey Pro 2 including a "
"non-volatile (encrypted) storage, the :doc:`Nitrokey Pro 2 FAQ "
"<../pro/faq>` also partly applies."
msgstr ""
"Nitrokey Storage 2は基本的に不揮発性（暗号化）ストレージを含むNitrokey Pro 2であるため、 "
":doc:`Nitrokey Pro 2 FAQ <.../pro/faq>`も一部適用されます。"

#: ../shared-faqs/nitrokeys.rst:2
msgid "**Q:** Which Operating Systems are supported?"
msgstr "**Q:**どのようなOSに対応していますか？"

#: ../shared-faqs/nitrokeys.rst:2
msgid "Windows, Linux, and Mac OS X."
msgstr "Windows、Linux、Mac OS Xに対応しています。"

#: ../shared-faqs/nitrokeys.rst:5
msgid "**Q:** What can I use the Nitrokey for?"
msgstr "**Q:** Nitrokeyはどのような用途に使用できますか？"

#: ../shared-faqs/nitrokeys.rst:5
msgid "See the `frontpage`_ for an overview of supported use cases."
msgstr "サポートされているユースケースの概要については、`frontpage`_をご覧ください。"

#: ../storage/faq.rst:16
msgid "**Q:** What are the default PINs?"
msgstr "**Q:** デフォルトの暗証番号は何ですか？"

#: ../storage/faq.rst:10
msgid "**User PIN:** \"123456\""
msgstr "**ユーザーPIN:** \"123456\""

#: ../storage/faq.rst:11
msgid "**Administrator PIN:** \"12345678\""
msgstr "**管理者用暗証番号：** \"12345678\""

#: ../storage/faq.rst:12
msgid "**Firmware Password**: \"12345678\""
msgstr "**ファームウェアのパスワード**: \"12345678\""

#: ../storage/faq.rst:14
msgid ""
"We strongly recommend to change these PINs/password to user-chosen values"
" before using the Nitrokey."
msgstr "Nitrokeyを使用する前に、これらのPIN/パスワードをユーザーが選んだ値に変更することを強くお勧めします。"

#: ../storage/faq.rst:20
msgid "**Q:** How large is the storage capacity?"
msgstr "**Q：＊＊＊記憶容量はどのくらいですか？"

#: ../storage/faq.rst:19
msgid ""
"Nitrokey Storage can store and encrypt 8, 32, or 64 GB of data (depending"
" on particular model)."
msgstr "Nitrokey Storageは、8GB、32GB、64GBのデータを保存・暗号化することができます（モデルによって異なります）。"

#: ../shared-faqs/pins.rst:11
msgid "**Q:** What is the maximum length of the PIN?"
msgstr "**Q:** PINの長さはどのくらいですか？"

#: ../shared-faqs/pins.rst:3
msgid ""
"Nitrokey uses PINs instead of passwords. The main difference is that the "
"hardware limits the amount of tries to three while a limit doesn't exist "
"for passwords. Because of this, a short PIN is still secure and there is "
"not need to choose a long and complex PIN."
msgstr "Nitrokeyは、パスワードの代わりにPINを使用します。主な違いは、ハードウェアが試行回数を3回に制限しているのに対し、パスワードには制限がないことです。このため、短い暗証番号でも安全であり、長くて複雑な暗証番号を選択する必要はありません。"

#: ../shared-faqs/pins.rst:8
msgid ""
"Nitrokey Storage's PINs can be up to 20 digits long and can consist of "
"numbers, characters and special characters. Note: When using GnuPG or "
"OpenSC, 32 character long PINs can be used but aren't supported by "
"Nitrokey App."
msgstr ""
"Nitrokey "
"Storage'のPINは最大20桁の長さで、数字、文字、特殊文字で構成することができます。注：GnuPGまたはOpenSCを使用する場合、32文字の長さのPINを使用できますが、Nitrokey"
" Appではサポートされていません。"

#: ../shared-faqs/pins.rst:22
msgid "**Q:** What is the User PIN for?"
msgstr "**Q:** ユーザーPINは何のためのものですか？"

#: ../shared-faqs/pins.rst:14
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"contect of the Nitrokey. This is the PIN you will use a lot in every day "
"use e.g. for decrypting messages, for unlocking your encrypted storage "
"(NK Storage only) etc."
msgstr "ユーザーPINは少なくとも6桁の長さで、Nitrokeyの保護領域にアクセスするために使用されます。このPINは、メッセージの復号化や暗号化されたストレージ（NKストレージのみ）のロック解除など、日常的によく使用するものです。"

#: ../shared-faqs/pins.rst:19
msgid ""
"The user PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the user PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have a 6 digits PIN. The default PIN is 123456."
msgstr "ユーザーPINは、最大20桁の数字とその他の文字（アルファベットや特殊文字など）を使用することができます。しかし、暗証番号を3回間違えるとブロックされるため、6桁の暗証番号だけでも十分に安全です。デフォルトのPINは123456です。"

#: ../shared-faqs/pins.rst:34
msgid "**Q:** What is the Admin PIN for?"
msgstr "**Q:** Admin PINは何のためのものですか？"

#: ../shared-faqs/pins.rst:25
msgid ""
"The admin PIN is at least 8-digits long and is used to change "
"contents/settings of the Nitrokey. That is to say after initializing the "
"Nitrokey you probably won't need this PIN too often (e.g. if you want to "
"add another password to the password safe of the Nitrokey Pro or Nitrokey"
" Storage)."
msgstr ""
"管理者用PINは少なくとも8桁の長さで、Nitrokeyの内容や設定を変更する際に使用します。つまり、Nitrokeyを初期化した後は、このPINを頻繁に必要とすることはないでしょう（例えば、Nitrokey"
" ProやNitrokey Storageのパスワードセーフに別のパスワードを追加したい場合など）。"

#: ../shared-faqs/pins.rst:31
msgid ""
"The admin PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the admin PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have 8 digits PIN. The default PIN is 12345678."
msgstr "管理者用暗証番号は、最大20桁の数字とその他の文字（アルファベットや特殊文字など）を使用することができます。しかし、管理者用暗証番号は3回間違えるとブロックされるため、8桁の暗証番号だけでも十分に安全です。デフォルトのPINは12345678です。"

#: ../storage/faq.rst:28
msgid ""
"**Q:** Why does my Nitrokey Storage hang when switching between nitrokey-"
"app and GnuPG?"
msgstr "**Q:** nitrokey-appとGnuPGを切り替えると、Nitrokey Storageがハングアップするのはなぜですか？"

#: ../storage/faq.rst:26
msgid ""
"GnuPG and nitrokey-app sometimes tend to hand each other. This is a known"
" problem and it can be fixed by re-inserting the Nitrokey into the USB "
"slot."
msgstr ""
"GnuPGとnitrokey-"
"appは時々お互いに引き合う傾向があります。これは既知の問題で、NitrokeyをUSBスロットに再度挿入することで修正できます。"

#: ../storage/faq.rst:39
msgid "**Q:** What is the firmware PIN for?"
msgstr "**Q:** ファームウェアのPINは何のためのものですか？"

#: ../storage/faq.rst:31
msgid ""
"The firmware password should meet general password recommandations (e.g. "
"use alphabetic characters, digits and special characters or use a "
"usfficiently long password). The firmware password is needed to update "
"the firmware of the Nitrokey Storage. See further instructions for update"
" process here."
msgstr ""
"ファームウェアのパスワードは、一般的なパスワードの推奨事項を満たしている必要があります（例：アルファベット、数字、特殊文字の使用、または十分に長いパスワードの使用）。ファームウェアパスワードは、Nitrokey"
" Storageのファームウェアをアップデートするために必要です。アップデート方法については、こちらをご覧ください。"

#: ../storage/faq.rst:37
msgid ""
"The firmware password is never blocked. An attacker could try to guess "
"the password and would have unlimited attempts. Therefore you must choose"
" a strong password. The default password is 12345678."
msgstr "ファームウェアのパスワードは決してブロックされません。攻撃者がパスワードを推測しようとしても、その試行回数は無制限です。そのため、強力なパスワードを選択する必要があります。デフォルトのパスワードは12345678です。"

#: ../storage/faq.rst:44
msgid "**Q:** How many keys can I store?"
msgstr "**Q:** 鍵は何本まで保存できますか？"

#: ../storage/faq.rst:42
msgid ""
"The Nitrokey Storage can store three RSA key pairs. All keys use the same"
" identity but are used for different purposes: authentication, encryption"
" and signing."
msgstr ""
"Nitrokey "
"Storageは、3つのRSAキーペアを保存できます。すべての鍵は同じIDを使用していますが、認証、暗号化、署名という異なる目的で使用されます。"

#: ../storage/faq.rst:52
msgid "**Q:** How fast is encryption and signing?"
msgstr "**Q：**暗号化や署名の速度はどのくらいですか？"

#: ../storage/faq.rst:47
msgid "Encryption of 50kiB of data:"
msgstr "50kiBのデータを暗号化。"

#: ../storage/faq.rst:49
msgid "256 bit AES, 2048 bytes per command -> 880 bytes per second"
msgstr "256ビットAES、2048バイト/コマンド -> 880バイト/秒"

#: ../storage/faq.rst:50
msgid "128 bit AES, 2048 bytes per command -> 893 bytes per second"
msgstr "128ビットAES、2048バイト/コマンド -> 893バイト/秒"

#: ../storage/faq.rst:51
msgid "256 bit AES, 240 bytes per command -> 910 bytes per second"
msgstr "256ビットAES、240バイト/コマンド -> 910バイト/秒"

#: ../storage/faq.rst:52
msgid "128 bit AES, 240 bytes per command -> 930 bytes per second"
msgstr "128ビットAES、240バイト/コマンド -> 930バイト/秒"

#: ../shared-faqs/algos.rst:3
msgid "**Q:** Which algorithms and maximum key length are supported?"
msgstr "**Q:**どのようなアルゴリズムと最大鍵長に対応していますか？"

#: ../shared-faqs/algos.rst:3
msgid "See the following table:"
msgstr "次の表を参照してください。"

#: ../pro/openpgp-keygen-backup.rst:84 ../pro/openpgp-keygen-on-device.rst:193
#: ../shared-faqs/algos.rst:6
msgid "Start"
msgstr "スタート"

#: ../pro/openpgp-keygen-backup.rst:84 ../pro/openpgp-keygen-on-device.rst:193
#: ../shared-faqs/algos.rst:6
msgid "Pro + Storage"
msgstr "プロ＋ストレージ"

#: ../pro/openpgp-keygen-backup.rst:84 ../pro/openpgp-keygen-on-device.rst:193
#: ../shared-faqs/algos.rst:6
msgid "Pro 2 + Storage 2"
msgstr "Pro 2 + Storage 2"

#: ../shared-faqs/algos.rst:6
msgid "HSM"
msgstr "HSM"

#: ../shared-faqs/algos.rst:6
msgid "HSM2"
msgstr "HSM2"

#: ../pro/openpgp-keygen-backup.rst:86 ../pro/openpgp-keygen-on-device.rst:195
#: ../shared-faqs/algos.rst:8
msgid "rsa1024"
msgstr "rsa1024"

#: ../pro/openpgp-keygen-backup.rst:86 ../pro/openpgp-keygen-backup.rst:87
#: ../pro/openpgp-keygen-backup.rst:88 ../pro/openpgp-keygen-backup.rst:89
#: ../pro/openpgp-keygen-backup.rst:90 ../pro/openpgp-keygen-backup.rst:91
#: ../pro/openpgp-keygen-backup.rst:92 ../pro/openpgp-keygen-backup.rst:93
#: ../pro/openpgp-keygen-on-device.rst:195
#: ../pro/openpgp-keygen-on-device.rst:196
#: ../pro/openpgp-keygen-on-device.rst:197
#: ../pro/openpgp-keygen-on-device.rst:198
#: ../pro/openpgp-keygen-on-device.rst:199
#: ../pro/openpgp-keygen-on-device.rst:200
#: ../pro/openpgp-keygen-on-device.rst:201
#: ../pro/openpgp-keygen-on-device.rst:202 ../shared-faqs/algos.rst:8
#: ../shared-faqs/algos.rst:10 ../shared-faqs/algos.rst:12
#: ../shared-faqs/algos.rst:14 ../shared-faqs/algos.rst:16
#: ../shared-faqs/algos.rst:18 ../shared-faqs/algos.rst:20
#: ../shared-faqs/algos.rst:22 ../shared-faqs/algos.rst:24
#: ../shared-faqs/algos.rst:26 ../shared-faqs/algos.rst:28
#: ../shared-faqs/algos.rst:30 ../shared-faqs/algos.rst:32
#: ../shared-faqs/algos.rst:34
msgid "✓"
msgstr "✓"

#: ../pro/openpgp-keygen-backup.rst:87 ../pro/openpgp-keygen-on-device.rst:196
#: ../shared-faqs/algos.rst:10
msgid "rsa2048"
msgstr "rsa2048"

#: ../pro/openpgp-keygen-backup.rst:88 ../pro/openpgp-keygen-on-device.rst:197
#: ../shared-faqs/algos.rst:12
msgid "rsa3072"
msgstr "rsa3072"

#: ../pro/openpgp-keygen-backup.rst:89 ../pro/openpgp-keygen-on-device.rst:198
#: ../shared-faqs/algos.rst:14
msgid "rsa4096"
msgstr "rsa4096"

#: ../shared-faqs/algos.rst:16
msgid "curve25519"
msgstr "カーブ25519"

#: ../shared-faqs/algos.rst:18
msgid "NIST-P 192"
msgstr "NIST-P 192"

#: ../shared-faqs/algos.rst:20
msgid "NIST-P 256"
msgstr "NIST-P 256"

#: ../shared-faqs/algos.rst:22
msgid "NIST-P 384-521"
msgstr "NIST-P 384-521"

#: ../shared-faqs/algos.rst:24
msgid "Brainpool 192"
msgstr "ブレインプール 192"

#: ../shared-faqs/algos.rst:26
msgid "Brainpool 256-320"
msgstr "ブレインプール 256-320"

#: ../shared-faqs/algos.rst:28
msgid "Brainpool 384-521"
msgstr "ブレインプール 384-521"

#: ../shared-faqs/algos.rst:30
msgid "secp192"
msgstr "secp192"

#: ../shared-faqs/algos.rst:32
msgid "secp256"
msgstr "secp256"

#: ../shared-faqs/algos.rst:34
msgid "secp521"
msgstr "secp521"

#: ../storage/faq.rst:57
msgid ""
"**Q:** Does the Nitrokey Storage contain a secure chip or just a normal "
"microcontroller?"
msgstr "**Q:** Nitrokey Storageにはセキュアチップが搭載されていますか、それとも通常のマイクロコントローラーですか？"

#: ../storage/faq.rst:57
msgid "Nitrokey Storage contains a tamper resistant smart card."
msgstr "Nitrokey Storageは、耐タンパー性のあるスマートカードを内蔵しています。"

#: ../storage/faq.rst:65
msgid "**Q:** Is the Nitrokey Storage Common Criteria or FIPS certified?"
msgstr "**Q:** Nitrokey StorageはCommon CriteriaまたはFIPSの認証を受けていますか？"

#: ../storage/faq.rst:60
msgid ""
"`Cure53`_ has performed an `independent security audit`_ of the hardware,"
" firmware, and Nitrokey App. The security controler's hardware is Common "
"Criteria certified (`Report`_; See `here`_, click \"ICs, Smart Cards and "
"Smart Card-Related Devices and Systems\" and search for \"NXP Smart Card "
"Controller P5CD081V1A and its major configurations P5CC081V1A, "
"P5CN081V1A, P5CD041V1A, P5CD021V1A and P5CD016V1A each with IC dedicated "
"Software\")."
msgstr ""
"`Cure53`_は、ハードウェア、ファームウェア、およびNitrokeyアプリの`独立したセキュリティ監査`_を実施しました。セキュリティ・コントローラーのハードウェアはコモン・クライテリア認証を受けています（`レポート`_;"
" `こちら`_を参照、\"IC, Smart Card and Smart Card-Related Devices and "
"Systems\".をクリックし、\"NXP Smart Card and Smart Card-Related Devices and "
"Systems\".を検索してください）。をクリックして、\"NXP Smart Card Controller P5CD081V1A and "
"its major configuration P5CC081V1A, P5CN081V1A, P5CD041V1A, P5CD021V1A, "
"P5CD016V1A each with IC dedicated Software\"を検索してください。）"

#: ../storage/faq.rst:78
msgid "**Q:** How can I use the encrypted mobile Storage?"
msgstr "**Q:**暗号化されたモバイルストレージを利用するにはどうすればよいですか？"

#: ../storage/faq.rst:68
msgid ""
"Prior of using the encrypted mobile storage you need to install and "
"initialize the Nitrokey Storage and download the latest Nitrokey App."
msgstr ""
"暗号化されたモバイルストレージを使用する前に、Nitrokey "
"Storageをインストールして初期化し、最新のNitrokeyアプリをダウンロードする必要があります。"

#: ../storage/faq.rst:70
msgid "Start the Nitrokey App."
msgstr "Nitrokeyアプリを起動します。"

#: ../storage/faq.rst:71
msgid "Press its tray icon and select \"unlock encrypted volume\" in the menu."
msgstr "トレイのアイコンを押して、メニューから「暗号化されたボリュームのロック解除」を選択します。"

#: ../storage/faq.rst:72
msgid "Enter your User PIN in the appearing popup window."
msgstr "表示されたポップアップウィンドウにユーザーPINを入力してください。"

#: ../storage/faq.rst:73
msgid ""
"If this is the first time you may need to create a partition on the "
"encrypted volume. Windows will open an appropriate window and ask you to "
"do so. On Linux and Mac you may need to open a partition manager and "
"create a partition manually. You can create as many partitions as you "
"want. We recommend FAT(32) if you want to access the partition from "
"various operating systems."
msgstr ""
"これが初めての場合は、暗号化されたボリュームにパーティションを作成する必要があります。Windows "
"は適切なウィンドウを開き、そのように指示します。Linux と Mac "
"ではパーティションマネージャを開いて手動でパーティションを作成する必要があります。必要な数のパーティションを作成することができます。様々なOSからパーティションにアクセスしたい場合は、FAT(32)をお勧めします。"

#: ../storage/faq.rst:74
msgid ""
"Now you can use the encrypted volume as you would use any other ordinary "
"USB drive. But all data stored on it will be encrypted in the Nitrokey "
"hardware automatically."
msgstr "これで、暗号化されたボリュームを他の普通のUSBドライブと同じように使うことができます。しかし、そこに保存されたすべてのデータは、自動的にNitrokeyハードウェアで暗号化されます。"

#: ../storage/faq.rst:75
msgid "To remove or lock the encrypted volume you should unmount/eject it first."
msgstr "暗号化されたボリュームを削除またはロックするには、まずアンマウント/イジェクトする必要があります。"

#: ../storage/faq.rst:76
msgid ""
"Afterwards you can disconnect the Nitrokey or select \"lock encrypted "
"volume\" from the Nitrokey App menu."
msgstr "その後、Nitrokeyを切断するか、Nitrokeyアプリのメニューから\"lock encrypted volume\"を選択してください。"

#: ../storage/faq.rst:78
msgid ""
"The Nitrokey Storage is able to create hidden volumes as well. Please "
"have a look at the corresponding instructions for hidden volumes."
msgstr "Nitrokey Storageは、隠しボリュームを作成することもできます。隠しボリュームについては、対応する説明書をご覧ください。"

#: ../storage/faq.rst:101
msgid "**Q:** How can I use the hidden volume?"
msgstr "**Q:** 隠しボリュームの使い方を教えてください。"

#: ../storage/faq.rst:81
msgid ""
"Hidden volumes allow to hide data in the encrypted volume. The data is "
"protected with an additional password. Without the password the data "
"existence's can't be proven. Hidden volumes are not setup by default so "
"that their existence can be denied plausibly. The concept is similar to "
"VeraCrypt's/TrueCrypt's hidden volume but with Nitrokey Storage the "
"entire functionality of hidden volumes is implemented in hardware."
msgstr ""
"隠しボリュームでは、暗号化されたボリューム内のデータを隠すことができます。データは追加のパスワードで保護されます。パスワードがなければ、データの存在を証明することはできません。隠しボリュームはデフォルトでは設定されていないので、その存在をもっともらしく否定することができます。VeraCrypt's/TrueCrypt'sの隠しボリュームとコンセプトは似ていますが、Nitrokey"
" Storageでは、隠しボリュームの全機能がハードウェアで実装されています。"

#: ../storage/faq.rst:88 ../storage/hidden.rst:8
msgid ""
"You can configure up to four hidden volumes. Once unlocked, hidden "
"volumes behave like ordinary storage where you can create various "
"partitions, filesystems and store files as you like."
msgstr "最大4つの隠しボリュームを設定することができます。ロックを解除すると、隠しボリュームは通常のストレージのように動作し、さまざまなパーティションやファイルシステムを作成して、好きなようにファイルを保存することができます。"

#: ../storage/faq.rst:92
msgid ""
"If you decide to configure Hidden Volumes, you can not use the encrypted "
"storage anymore. Because the Hidden Volume is situated on the free space "
"of the encrypted storage, there is the potential of overwriting data in "
"the Hidden Volume. You can say, even the encrypted storage \"does not "
"know\" that there is a hidden volumes. The general structure is shown in "
"the diagram below. Therefore, please do not write anything in the "
"encrypted storage after creating a hidden volume (you have to unlock it "
"first though)."
msgstr ""
"隠しボリュームを設定した場合、暗号化されたストレージを使用することができなくなります。隠しボリュームは暗号化されたストレージの空き領域に存在するため、隠しボリュームのデータが上書きされる可能性があります。暗号化されたストレージでさえ、隠しボリュームがあることを"
" \"doesn't "
"know\"と言えるでしょう。一般的な構造は以下の図のようになっています。したがって、隠しボリュームを作成した後は、暗号化されたストレージに何も書き込まないようにしてください（ただし、最初にロックを解除する必要があります）。"

#: ../storage/faq.rst:100
msgid ""
"Hidden volumes are like containers inside of a container, the encrypted "
"volume."
msgstr "隠しボリュームは、暗号化ボリュームというコンテナの中にあるコンテナのようなものです。"

#: ../storage/faq.rst:112
msgid "**Q:** Do you have resources for development and integration?"
msgstr "**Q:**開発や統合のためのリソースはありますか？"

#: ../storage/faq.rst:104
msgid ""
"Use Nitrokey library to manage the encrypted mass store, one-time "
"passwords and password safe functionality."
msgstr "暗号化されたマス・ストア、ワンタイム・パスワード、パスワード・セーフ機能を管理するには、Nitrokeyライブラリを使用します。"

#: ../storage/faq.rst:105
msgid ""
"The project nitrokey-get-totp and nitrokey-get-password are nice examples"
" for using the python bindings of Nitrokey library to get a custom "
"interface."
msgstr ""
"プロジェクト nitrokey-get-totp と nitrokey-get-password は、Nitrokey ライブラリの python"
" バインディングを使用してカスタムインターフェースを得るための良い例です。"

#: ../storage/faq.rst:106
msgid ""
"In order to access the integrated smart card, you can use OpenSC's "
"command line tools."
msgstr "統合されたスマートカードにアクセスするためには、OpenSC'のコマンドラインツールを使用することができます。"

#: ../storage/faq.rst:107
msgid "If your application has a PKCS#11 interface, use OpenSC's PKCS#11 driver."
msgstr "アプリケーションにPKCS#11のインターフェースがある場合は、OpenSC'のPKCS#11ドライバーを使用してください。"

#: ../storage/faq.rst:108
msgid "To work with the smart card low level, see the OpenPGP Card specification."
msgstr "スマートカードを低レベルで扱うには、OpenPGP Card仕様を参照してください。"

#: ../storage/faq.rst:109
msgid "The source code of the firmware and the hardware layout are available too."
msgstr "ファームウェアのソースコードやハードウェアのレイアウトも公開されています。"

#: ../storage/faq.rst:110
msgid ""
"To develop special applications or for command line access one can use "
"the nitrocli created by d-e-s-o."
msgstr "特別なアプリケーションを開発したり、コマンドラインにアクセスするためには、d-e-oが作成したnitrocliを使用することができます。"

#: ../storage/faq.rst:111
msgid "A libnitrokey wrapper for Rust providing access to Nitrokey devices."
msgstr "Nitrokey デバイスへのアクセスを提供する Rust 用の libnitrokey ラッパーです。"

#: ../storage/firmware-update-manually.rst:2
msgid "Activate Update Mode Manually"
msgstr "アップデートモードを手動で起動する"

#: ../storage/firmware-update-manually.rst:10
msgid ""
"The following steps are only necessary if you are using Windows 10 Build "
"1809 (or higher) and Nitrokey Storage with firmware 0.52 or older. In all"
" other cases, or if you have access to another system, the regular update"
" as described `here <firmware-update.html>`_ is sufficient and easier."
msgstr ""
"以下の手順は、Windows 10 Build 1809（またはそれ以上）とNitrokey "
"Storageのファームウェア0.52以前を使用している場合にのみ必要です。それ以外の場合や、別のシステムにアクセスできる場合は、`こちら"
"<firmware-update.html>`_に記載されているような定期的なアップデートで十分かつ簡単です。"

#: ../storage/firmware-update-manually.rst:13
msgid "What is needed"
msgstr "必要なもの"

#: ../storage/firmware-update-manually.rst:15
msgid ""
"To put the Nitrokey Storage manually into Update Mode (without using the "
"Nitrokey App), the following is required:"
msgstr "Nitrokey Storageを手動で（Nitrokeyアプリを使わずに）アップデートモードにするには、以下のようにします。"

#: ../storage/firmware-update-manually.rst:17
msgid ""
"A USB stick (**All data on the USB stick will be lost! Please make a "
"backup of the creation before!**)"
msgstr "USBメモリ(**USBメモリ内のデータはすべて失われます!作成前にバックアップを取ってください！**)"

#: ../storage/firmware-update-manually.rst:20
msgid "The `Balena Etcher <https://www.balena.io/etcher/>`_ software"
msgstr "`Balena Etcher <https://www.balena.io/etcher/>`_のソフトウェア。"

#: ../storage/firmware-update-manually.rst:22
msgid ""
"The `USB Image <https://github.com/Nitrokey/nitrokey-storage-update-"
"boot/releases/latest>`_ we created for this purpose. Please download only"
" the file ending with “.img.zip”."
msgstr ""
"この目的のために作成した`USB Image <https://github.com/Nitrokey/nitrokey-storage-"
"update-boot/releases/latest>`_があります。.img.zip \"で終わるファイルのみをダウンロードしてください。"

#: ../storage/firmware-update-manually.rst:28
msgid "Install Balena Etcher"
msgstr "バレーナエッチャーの設置"

#: ../storage/firmware-update-manually.rst:30
msgid ""
"Balena Etcher helps us to install the USB image on the USB stick. Please "
"double click on the `previously downloaded installation file "
"<https://www.balena.io/etcher/>`_ and follow the instructions."
msgstr ""
"Balena Etcher は、USB イメージを USB "
"メモリにインストールするのに役立ちます。事前にダウンロードしたインストールファイル`をダブルクリックして、指示に従ってください。"

#: ../storage/firmware-update-manually.rst:43
msgid "Installing the USB image with Balena Etcher"
msgstr "Balena EtcherによるUSBイメージのインストール"

#: ../storage/firmware-update-manually.rst:45
msgid ""
"The program usually opens immediately after installation. If not, you "
"will find a shortcut on the desktop. Using the application, select the "
"`previously downloaded image file <https://github.com/Nitrokey/nitrokey-"
"storage-update-boot/releases>`_, which ends with “.img.zip”. Now insert "
"the USB stick. It should be recognized automatically. Press “Flash!” to "
"proceed."
msgstr ""
"プログラムは通常、インストール後すぐに開きます。開かない場合は、デスクトップにショートカットが表示されます。このアプリケーションを使って、`以前にダウンロードした画像ファイル<https://github.com/Nitrokey"
"/nitrokey-storage-update-"
"boot/releases>`_（末尾が「.img.zip」）を選択します。ここで、USBメモリを挿入します。自動的に認識されるはずです。Flash!\"を押して次に進みます。"

#: ../storage/firmware-update-manually.rst:55
msgid "You must allow the application to make changes."
msgstr "アプリケーションに変更を許可する必要があります。"

#: ../storage/firmware-update-manually.rst:67
msgid ""
"After the image has been successfully transferred, Windows may ask if the"
" device should be formatted. It is important that you click “Cancel”, "
"otherwise the USB stick will be overwritten by Windows."
msgstr "イメージが正常に転送された後、Windowsはデバイスをフォーマットするかどうか尋ねてきます。ここで「キャンセル」をクリックしないと、USBメモリーがWindowsによって上書きされてしまうからです。"

#: ../storage/firmware-update-manually.rst:75
msgid "Booting from the USB stick"
msgstr "USBメモリからの起動"

#: ../storage/firmware-update-manually.rst:77
msgid ""
"Now the system must be restarted. The USB stick must remain in the USB "
"port so that the system can be started on the USB stick. Some devices are"
" configured to start automatically from USB stick if it contains a "
"system. If Windows instead of the USB image is booting right after the "
"restart, you have to set your BIOS to boot from USB. On many systems this"
" can be done with the Escape key, the F10, F11 or F12 key. Often, when "
"starting the device there is also a hint which key to use the so-called "
"“boot menu”."
msgstr "ここで、システムを再起動する必要があります。USBスティックでシステムを起動できるように、USBポートにUSBスティックを差し込んだままにしておく必要があります。一部のデバイスでは、システムが含まれている場合、USBスティックから自動的に起動するように設定されています。再起動後、USBイメージではなくWindowsがすぐに起動する場合は、BIOSをUSBから起動するように設定する必要があります。多くのシステムでは、Escapeキー、F10キー、F11キー、F12キーで設定できます。多くの場合、デバイスの起動時に、いわゆる「ブートメニュー」にどのキーを使うかのヒントがあります。"

#: ../storage/firmware-update-manually.rst:79
msgid ""
"After the system has started, please choose the language by typing 1 "
"(English) and hit Enter."
msgstr "システムが起動したら、「1（English）」と入力してEnterキーを押し、言語を選択してください。"

#: ../storage/firmware-update-manually.rst:86
msgid "Please insert the Nitrokey Storage when asked to."
msgstr "求められたらNitrokey Storageを挿入してください。"

#: ../storage/firmware-update-manually.rst:93
msgid ""
"The Firmware Update Mode will be started automatically if the standard "
"password is set. Otherwise you need to input your password and hit enter."
msgstr "標準のパスワードが設定されている場合は、自動的にファームウェアアップデートモードが開始されます。それ以外の場合は、パスワードを入力してエンターキーを押す必要があります。"

#: ../storage/firmware-update-manually.rst:100
msgid ""
"After the system has activated the firmware update on the Nitrokey "
"Storage, a restart is issued after 60 seconds. Please remove the USB "
"Stick. Afterwards you can use the Nitrokey Update Tool in Windows as "
"described `here <firmware-update.html>`_."
msgstr ""
"システムがNitrokey "
"Storageのファームウェアアップデートを有効にした後、60秒後に再起動がかかります。USBスティックを取り外してください。その後、`こちらの"
"<firmware-"
"update.html>`_に記載されているように、WindowsのNitrokeyアップデートツールを使用することができます。"

#: ../storage/firmware-update-manually.rst:103
msgid "Restoring the USB Stick"
msgstr "USBメモリの復元"

#: ../storage/firmware-update-manually.rst:105
msgid ""
"Windows should automatically ask to format your USB Stick as soon as you "
"insert the USB Stick the first time again in Windows. Just accept the "
"request for being able to use the USB Stick as previously."
msgstr "Windowsで初めてUSBスティックを挿入すると、Windowsは自動的にUSBスティックのフォーマットを要求してきます。これまで通りお使いいただけますので、ご了承ください。"

#: ../storage/hidden.rst:2
msgid "Hidden Storage"
msgstr ""

#: ../storage/hidden.rst:4
msgid ""
"Hidden volumes allow hiding data inside of the encrypted volume. This "
"data is protected by an additional passphrase. Without the passphrase, it"
" is impossible to know whether hidden volumes are present. They are not "
"configured with a default password so that their existence can be `denied"
" plausibly <https://en.wikipedia.org/wiki/Plausible_deniability>`_. The "
"concept is similar to `VeraCrypt's/TrueCrypt's hidden volume "
"<https://veracrypt.eu/en/docs/hidden-volume/>`_ but with Nitrokey Storage"
" the entire functionality of hidden volumes is implemented in hardware."
msgstr ""

#: ../storage/hidden.rst:11
msgid ""
"If you chose to use hidden volumes, you must not write any data to the "
"encrypted storage, or you risk loosing data in the hidden volume."
msgstr ""

#: ../storage/hidden.rst:14
msgid ""
"Hidden volumes are hidden within the free space of the encrypted storage,"
" which will be overwritten when writing data to the encrypted volume. "
"There are no mechanisms to prevent accidental overwritting of hidden "
"data, as they would reveal the existence of hidden volumes. Data written "
"to the encrypted volume before the creation of the hidden volume can "
"still be read."
msgstr ""

#: ../storage/hidden.rst:23
msgid "Configuring hidden volumes"
msgstr ""

#: ../storage/hidden.rst:26
msgid ""
"Copy some files to the encrypted volume prior to creating the hidden "
"volume."
msgstr ""

#: ../storage/hidden.rst:29
msgid ""
"Using a journaling filesystem may risk overwriting the hidden data. The "
"encrypted filesystem is formated to FAT32 by default, and it is "
"recommended to leave it that way when using the hidden storage."
msgstr ""

#: ../storage/hidden.rst:32
msgid "Unlock the encrypted storage using the Nitrokey App."
msgstr ""

#: ../storage/hidden.rst:33
msgid "In the menu, select \"setup hidden volume\"."
msgstr ""

#: ../storage/hidden.rst:38
msgid ""
"Enter a strong passphrase twice. Unlike the encrypted storage PIN, there "
"are no limit to the number of attempts at opening hidden storage, so the "
"strength of the passphrase is extremely important."
msgstr ""

#: ../storage/hidden.rst:39
msgid ""
"Define the storage area to be used. Hidden volumes are stored in the free"
" areas of the encrypted volume. When creating multiple hidden volume, you"
" need to allocate a part of the free area for each volume, making sure "
"they do not overlap."
msgstr ""

#: ../storage/hidden.rst:45
msgid "Using hidden volumes"
msgstr ""

#: ../storage/hidden.rst:47
#, fuzzy
msgid "Unlock the encrypted volume."
msgstr "暗号化されたボリュームを破壊する"

#: ../storage/hidden.rst:48
msgid ""
"Select \"unlock hidden volume\" and enter any of the hidden volume's "
"passwords."
msgstr ""

#: ../storage/hidden.rst:52
msgid ""
"Make sure to unmount/eject all partitions on the hidden volumes before "
"locking or disconnecting the Nitrokey."
msgstr ""

#: ../storage/index.rst:2
msgid "Nitrokey Storage 2"
msgstr "Nitrokey Storage 2"

#: ../storage/index.rst:6
msgid "First check the:"
msgstr "をまず確認します。"

#: ../storage/index.rst:14
msgid "or choose your operating system:"
msgstr "をクリックするか、お使いのOSを選択してください。"

#: ../pro/2fa-google.rst:2
msgid "Two-factor Authentication for Google"
msgstr "Googleの2ファクタ認証"

#: ../storage/linux/product_platform_heading.rst:3
msgid "(Nitrokey Storage 2 - Linux)"
msgstr "(Nitrokey Storage 2 - Linux)"

#: ../pro/2fa-google.rst:8
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Google account:"
msgstr ""
"以上が、Nitrokey ProまたはNitrokey "
"StorageをGoogleアカウントのセカンドファクターとして登録するための基本的な手順です。"

#: ../pro/2fa-google.rst:10
msgid ""
"Go to `https://myaccount.google.com/security#signin "
"<https://myaccount.google.com/intro/security>`_"
msgstr ""
"`https://myaccount.google.com/security#signin "
"<https://myaccount.google.com/intro/security>`_に移動します。"

#: ../pro/2fa-google.rst:13
msgid "Click “2-Step Verification” on the right side"
msgstr "右側の「2ステップ認証」をクリックします。"

#: ../pro/2fa-google.rst:15
msgid ""
"You need to define a first 2-Step Verfication (e.g. your phone number) "
"method to have access to the alternative second step option (the first "
"2-Step Verification can’t be the security key)"
msgstr "2段階目のオプションにアクセスするには、最初の2段階認証（電話番号など）の方法を定義する必要があります（最初の2段階認証をセキュリティキーにすることはできません）。"

#: ../pro/2fa-google.rst:19
msgid ""
"Choose “Authenticator App” as second step (though you won’t actually need"
" the app)"
msgstr "2番目のステップとして「Authenticator App」を選択します（実際にはアプリは必要ありませんが）。"

#: ../pro/2fa-google.rst:22
msgid ""
"Choose Android -> press on “Can’t scan it” below the qrcode to see the "
"secret key"
msgstr "Androidを選択 -> qrcodeの下にある「Can't scan it」を押すとシークレットキーが表示されます。"

#: ../pro/2fa-google.rst:25
msgid ""
"Copy the key (you can ignore the whitespaces, they do not get copied "
"anyway!) and paste the key into the corresponding field in the Nitrokey "
"App"
msgstr "キーをコピーして（空白は無視して構いません、いずれにしてもコピーされません！）、Nitrokeyアプリの対応するフィールドにキーを貼り付けます。"

#: ../pro/2fa-google.rst:29
msgid ""
"Click “Next” and follow the instructions (but you use the Nitrokey App "
"instead of the Google Authenticator app to generate the keys)"
msgstr ""
"次へ」をクリックし、指示に従います（ただし、鍵の生成にはGoogle "
"Authenticatorアプリではなく、Nitrokeyアプリを使用します）。"

#: ../pro/2fa-google.rst:32
msgid ""
"It is possible to use the same secret key for the Google Autenticator app"
" and the Nitrokey App as well. Just make sure to follow the above "
"procedure and use the qrcode for the Authenticator app afterwards before "
"clicking “Next”. Now you can use either the Google Authenticator app or "
"the Nitrokey App."
msgstr ""
"Google "
"AutenticatorアプリとNitrokeyアプリで同じ秘密鍵を使用することも可能です。次へ」をクリックする前に、上記の手順とAuthenticatorアプリ用のqrcodeの使用を確認してください。これで、Google"
" AuthenticatorアプリとNitrokeyアプリのどちらも使用できるようになりました。"

#: ../pro/2fa-nextcloud.rst:2
msgid "Two-factor Authentication for Nextcloud accounts"
msgstr "Nextcloudアカウントの2ファクタ認証"

#: ../pro/2fa-nextcloud.rst:8
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Nextcloud account."
msgstr ""
"以上が、Nitrokey ProまたはNitrokey StorageをNextcloudアカウントのSecond "
"Factorとして登録するための基本的な手順です。"

#: ../pro/2fa-nextcloud.rst:10
msgid ""
"At first, log in to your Nextcloud account, click on the top right symbol"
" of your account and open the settings menu."
msgstr "まず、Nextcloudアカウントにログインし、アカウントの右上のシンボルをクリックして、設定メニューを開きます。"

#: ../pro/2fa-nextcloud.rst:17
msgid "Now choose “Security” on the left hand side."
msgstr "次に、左側の「セキュリティ」を選択します。"

#: ../pro/2fa-nextcloud.rst:24
msgid ""
"Now you can tick the box reading “Enable TOTP”. There is shown the TOTP "
"secret which we need to add to our Nitrokey via the Nitrokey App."
msgstr ""
"ここで、「Enable "
"TOTP」というボックスにチェックを入れます。すると、NitrokeyアプリでNitrokeyに追加する必要のあるTOTPシークレットが表示されます。"

#: ../pro/2fa-nextcloud.rst:31
msgid "Copy and save secret code into the Nitrokey App."
msgstr "シークレットコードをコピーして、Nitrokeyアプリに保存します。"

#: ../pro/2fa-nextcloud.rst:43
msgid ""
"Now we request a one-time password for the Nextcloud to verify the "
"process by inserting the password on the website and pressing “verify”."
msgstr "ここで、ネクストクラウドのワンタイムパスワードを要求し、ウェブサイト上でパスワードを挿入して「検証」を押すことでプロセスを検証します。"

#: ../pro/2fa-nextcloud.rst:55
msgid ""
"From now on, when signing in you need an OTP additionally to your "
"password. Get one by the Nitrokey App like before and insert it in when "
"logging in."
msgstr "今後、サインインする際には、パスワードに加えてワンタイムパスワードが必要となります。これまで同様、Nitrokeyアプリで取得し、ログイン時に挿入してください。"

#: ../pro/2fa-nextcloud.rst:62
msgid ""
"Nextcloud provides you with backup codes, in case you lost your Nitrokey."
" It is recommended to print out these codes and store them somewhere save"
" otherwise you might not be able to log in to your account anymore!"
msgstr "ネクストクラウドでは、Nitrokeyを紛失した場合に備えて、バックアップコードを提供しています。これらのコードは印刷して保存しておくことをお勧めします。そうしないと、アカウントにログインできなくなる可能性があります。"

#: ../pro/2fa-odoo.rst:2
msgid "Two-factor Authentication for ERP Software Odoo"
msgstr "ERPソフト「Odoo」の二要素認証について"

#: ../pro/2fa-odoo.rst:8
msgid ""
"`Odoo <https://www.odoo.com/>`_ is a powerful ERP (Enterprise Resource "
"Planning) software for companies of all sizes. Odoo is available as open "
"source and contains modules for CRM, website, e-commerce, accounting, "
"financial accounting, production, warehouse management, project "
"management, document management, among others."
msgstr ""
"`Odoo <https://www.odoo.com/>`_は、あらゆる規模の企業向けの強力なERP（Enterprise Resource "
"Planning）ソフトウェアです。Odooはオープンソースで提供されており、CRM、Webサイト、Eコマース、会計、財務会計、生産、倉庫管理、プロジェクト管理、文書管理などのモジュールが含まれています。"

#: ../pro/2fa-odoo.rst:10
msgid ""
"The secure access to such a central software is especially important and "
"can be realized with the Nitrokey. In this case the Nitrokey will be "
"checked during user login in addition to the user password. Phishing "
"attacks are thus foiled and your critical company data is protected."
msgstr "このような中央ソフトウェアへの安全なアクセスは特に重要であり、Nitrokeyを使って実現することができます。この場合、ユーザーのログイン時には、ユーザーパスワードに加えてNitrokeyもチェックされます。このようにして、フィッシング攻撃は阻止され、重要な企業データは保護されます。"

#: ../pro/2fa-odoo.rst:13
msgid ""
"Video: Zwei-Faktor-Authentifizierung mit dem Nitrokey Pro und Nitrokey "
"Storage in Odoo"
msgstr "動画を見るOdooでNitrokey ProとNitrokey Storageを使用して2つのファクタで認証を行う"

#: ../pro/linux/automatic-screen-lock.rst:2
msgid "Automatic Screen Lock at Removal"
msgstr "スクリーンロックの自動解除"

#: ../pro/linux/automatic-screen-lock.rst:8
msgid ""
"This guide will walk you through the configuration of your computer, to "
"automatically lock your session when you remove the Nitrokey."
msgstr "このガイドでは、Nitrokeyを取り外すと自動的にセッションがロックされるように、コンピュータの設定を説明します。"

#: ../pro/linux/automatic-screen-lock.rst:10
msgid ""
"The configuration requires the creation of two files under two different "
"directories."
msgstr "この設定では、2つの異なるディレクトリに2つのファイルを作成する必要があります。"

#: ../pro/linux/automatic-screen-lock.rst:13
#: ../pro/linux/disk-encryption-luks.rst:26
msgid "Requirements"
msgstr "要求事項"

#: ../pro/linux/automatic-screen-lock.rst:15
msgid ""
"Ubuntu 20.04 or Debian 10 (Buster), both with `Gnome Display Manager "
"<https://wiki.gnome.org/Projects/GDM>`_ installed."
msgstr ""
"Ubuntu 20.04またはDebian 10 (Buster)で、どちらも`Gnome Display Manager "
"<https://wiki.gnome.org/Projects/GDM>`_がインストールされています。"

#: ../pro/linux/automatic-screen-lock.rst:18
msgid "Nitrokey Pro 2, Nitrokey Storage 2, or Nitrokey HSM 2"
msgstr "Nitrokey Pro 2、Nitrokey Storage 2、またはNitrokey HSM 2"

#: ../pro/linux/automatic-screen-lock.rst:21
msgid "Configuration"
msgstr "構成"

#: ../pro/linux/automatic-screen-lock.rst:24
msgid "Create the ``.rules`` file"
msgstr "``.rules``のファイルを作成する。"

#: ../pro/linux/automatic-screen-lock.rst:26
msgid "With your favorite text editor create a file called ``85-nitrokey.rules``"
msgstr "お好きなテキストエディターで、``85-nitrokey.rules``というファイルを作成してください。"

#: ../pro/linux/automatic-screen-lock.rst:32
msgid "Add the following line to the file"
msgstr "ファイルに以下の行を追加します。"

#: ../pro/linux/automatic-screen-lock.rst:38
msgid "Save the file and quit the editor."
msgstr "ファイルを保存し、エディタを終了します。"

#: ../pro/linux/automatic-screen-lock.rst:40
msgid ""
"This file sets up a new hardware rule that executes the ``gnome-"
"screensaver-lock`` at removal of the Nitrokey device."
msgstr ""
"このファイルでは、Nitrokeyデバイスの取り外し時に``gnome-screensaver-"
"lock``を実行する新しいハードウェアルールを設定します。"

#: ../pro/linux/automatic-screen-lock.rst:42
msgid ""
"You should change the configuration according to the device you are using"
" as following:"
msgstr "お使いの機器に合わせて、以下のように設定を変更してください。"

#: ../pro/linux/automatic-screen-lock.rst:44
msgid "Nitrokey Pro: ``ENV{PRODUCT}==\"20a0/4108/101\"``"
msgstr "Nitrokeyプロ。``ENV{PRODUCT}==\"20a0/4108/101\"``"

#: ../pro/linux/automatic-screen-lock.rst:45
msgid "Nitrokey HSM: ``ENV{PRODUCT}==\"20a0/4230/101\"``"
msgstr "NitrokeyHSM：``ENV{PRODUCT}==\"20a0/4230/101\"``"

#: ../pro/linux/automatic-screen-lock.rst:46
msgid "Nitrokey Storage: ``ENV{PRODUCT}==\"20a0/4109/101\"``"
msgstr "Nitrokey Storage``ENV{PRODUCT}==\"20a0/4109/101\"``"

#: ../pro/linux/automatic-screen-lock.rst:49
msgid "Create the ``gnome-screensaver-lock`` script"
msgstr "``gnome-screensaver-lock``のスクリプトを作成します。"

#: ../pro/linux/automatic-screen-lock.rst:51
msgid ""
"With your favorite text editor create a file called ``gnome-screensaver-"
"lock``"
msgstr "お好きなテキストエディターで、``gnome-screensaver-lock``というファイルを作成してください。"

#: ../pro/linux/automatic-screen-lock.rst:57
msgid "Add the following text"
msgstr "以下のテキストを追加します。"

#: ../pro/linux/automatic-screen-lock.rst:67
msgid ""
"In the first step, this script looks for the user-name of the gnome "
"session, i.e. ``user``."
msgstr "最初のステップでは、このスクリプトはgnomeセッションのユーザ名を探します。すなわち、``user``です。"

#: ../pro/linux/automatic-screen-lock.rst:69
msgid ""
"When it is called at Nitrokey removal, the script queries ``user``, "
"switches to its session, and locks the screen by prompting the screen-"
"saver screen."
msgstr "Nitrokeyの取り外し時に呼び出されると、スクリプトは``user``を問い合わせ、そのセッションに切り替え、スクリーンセーバーの画面を促して画面をロックします。"

#: ../pro/linux/automatic-screen-lock.rst:72
msgid "Execute the script"
msgstr "スクリプトの実行"

#: ../pro/linux/automatic-screen-lock.rst:74
msgid ""
"Once all set up, execute the script once, and it will lock the screen. It"
" does not matter if the Nitrokey is plugged or not for this first "
"execution."
msgstr "設定が完了したら、スクリプトを一度実行すると、画面がロックされます。この最初の実行では、Nitrokeyが接続されているかどうかは関係ありません。"

#: ../pro/linux/automatic-screen-lock.rst:77
#: ../pro/linux/disk-encryption-luks.rst:140
#: ../pro/linux/hard-disk-encryption.rst:116 ../pro/openpgp-outlook.rst:26
#: ../pro/openpgp.rst:49 ../pro/smime-outlook.rst:36
#: ../pro/smime-thunderbird.rst:45 ../pro/smime.rst:57
msgid "Usage"
msgstr "使用方法"

#: ../pro/linux/automatic-screen-lock.rst:79
msgid ""
"By now you can log back to your session by entering your password, and "
"(re)plug you Nitrokey if you did not do it before."
msgstr "これで、パスワードを入力してセッションにログインし、Nitrokeyを（再）挿入することができました。"

#: ../pro/linux/automatic-screen-lock.rst:81
msgid ""
"The next time(s) you unplug your Nitrokey from the computer, it will "
"automatically lock the screen."
msgstr "次回、Nitrokeyをコンピュータから外すと、自動的に画面がロックされます。"

#: ../pro/change-pins.rst:2
msgid "Change User and Admin PIN"
msgstr "ユーザーおよび管理者用PINの変更"

#: ../pro/change-pins.rst:9
msgid "User PIN"
msgstr "ユーザーPIN"

#: ../pro/change-pins.rst:11
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"content of the Nitrokey. This is the PIN you will use a lot in every day "
"use e.g. for decrypting messages, for unlocking your encrypted storage "
"(NK Storage only) etc."
msgstr "ユーザーPINは最低でも6桁の長さで、Nitrokeyのコンテンツにアクセスするために使用します。このPINは、メッセージの復号化、暗号化されたストレージのロック解除（NKストレージのみ）など、日常的に頻繁に使用するものです。"

#: ../pro/change-pins.rst:13
msgid ""
"You can change the user PIN with the Nitrokey App if using a Nitrokey Pro"
" or Nitrokey Storage. In the `Nitrokey "
"<https://www.nitrokey.com/download>`_ App open ‘Menu -> Configure -> "
"Change User PIN’ to open the dialog to change the PIN."
msgstr ""
"Nitrokey ProまたはNitrokey "
"Storageを使用している場合は、NitrokeyアプリでユーザーPINを変更することができます。`Nitrokey "
"<https://www.nitrokey.com/download>`_アプリで「Menu -> Configure -> Change "
"User PIN」を開くと、PINを変更するダイアログが表示されます。"

#: ../pro/change-pins.rst:21
msgid "You can change the User PIN in the dialog window now."
msgstr "現在、ダイアログウィンドウでユーザーPINの変更が可能です。"

#: ../pro/change-pins.rst:23
msgid ""
"The user PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the user PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have a 6 digits PIN. The default PIN is 123456."
msgstr "ユーザーPINは、最大20桁の数字とその他の文字（アルファベットや特殊文字など）を使用することができます。しかし、暗証番号を3回間違えるとブロックされるため、6桁の暗証番号だけでも十分に安全です。デフォルトのPINは123456です。"

#: ../pro/change-pins.rst:31
msgid "Admin PIN"
msgstr "管理者パスワード"

#: ../pro/change-pins.rst:33
msgid ""
"The admin PIN is at least 8-digits long and is used to change "
"contents/settings of the Nitrokey. That is to say after initializing the "
"Nitrokey you probably won’t need this PIN too often (e.g. if you want to "
"add another password to the password safe of the Nitrokey Pro or Nitrokey"
" Storage)."
msgstr ""
"管理者用PINは少なくとも8桁の長さで、Nitrokeyのコンテンツや設定を変更する際に使用します。つまり、Nitrokeyを初期化した後は、このPINを頻繁に必要とすることはないでしょう（例えば、Nitrokey"
" ProやNitrokey Storageのパスワード金庫に別のパスワードを追加したい場合など）。"

#: ../pro/change-pins.rst:35
msgid ""
"You can change the admin PIN with the Nitrokey App if using a Nitrokey "
"Pro or Nitrokey Storage. In the `Nitrokey App "
"<https://www.nitrokey.com/download>`_ open ‘Menu -> Configure -> Change "
"Admin PIN’ to open the dialog to change the PIN."
msgstr ""
"Nitrokey ProまたはNitrokey Storageを使用している場合は、Nitrokey "
"Appで管理者用PINを変更することができます。`Nitrokey App "
"<https://www.nitrokey.com/download>`_で「Menu -> Configure -> Change Admin "
"PIN」を開くと、PINを変更するダイアログが表示されます。"

#: ../pro/change-pins.rst:43
msgid "You can change the admin PIN in the dialog window now."
msgstr "管理者用の暗証番号をダイアログウィンドウで変更できるようになりました。"

#: ../pro/change-pins.rst:45
msgid ""
"The admin PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the admin PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have 8 digits PIN. The default PIN is 12345678."
msgstr "管理者用暗証番号は、最大20桁の数字とその他の文字（アルファベットや特殊文字など）を使用することができます。しかし、管理者用暗証番号は3回間違えるとブロックされるため、8桁の暗証番号だけでも十分に安全です。デフォルトのPINは12345678です。"

#: ../pro/linux/disk-encryption-luks.rst:2
msgid "Full-Disk Encryption With cryptsetup/LUKS"
msgstr "cryptsetup/LUKSによるフルディスク暗号化"

#: ../pro/linux/disk-encryption-luks.rst:8
msgid ""
"This guide shows how to configure LUKS-encrypted volumes, to authenticate"
" at boot with `Nitrokey Pro <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`_ or `Nitrokey Storage "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`_."
msgstr ""
"このガイドでは、`Nitrokey Pro <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`_または`Nitrokey Storage "
"<https://shop.nitrokey.com/shop/product/nitrokey-"
"storage-2-56>`_でブート時に認証するために、LUKSで暗号化されたボリュームを設定する方法を説明します。"

#: ../pro/linux/disk-encryption-luks.rst:10
msgid ""
"To provide some background, cryptsetup-initramfs now has support for "
"using OpenPGP smart cards like the Nitrokey Pro and Nitrokey Storage to "
"unlock LUKS-encrypted volumes. Once you finish the setup, you will just "
"need to insert your Nitrokey at boot and enter your User PIN, instead of "
"typing in your regular disk encryption passphrase."
msgstr ""
"背景を説明すると、cryptsetup-initramfsは、Nitrokey ProやNitrokey "
"StorageのようなOpenPGPスマートカードを使用して、LUKSで暗号化されたボリュームを解除することをサポートしています。セットアップが完了すると、通常のディスク暗号化パスフレーズを入力する代わりに、起動時にNitrokeyを挿入してユーザーPINを入力するだけで済むようになります。"

#: ../pro/linux/disk-encryption-luks.rst:16
msgid "These instructions have been tested on Ubuntu 20.04 and Debian 10."
msgstr "この手順は、Ubuntu 20.04とDebian 10でテストされています。"

#: ../pro/linux/disk-encryption-luks.rst:20
msgid ""
"The following guide can potentially lock you out of your computer. You "
"should be aware of these risks, and we recommend you use the script below"
" on a secondary computer, or after a full backup as you might lose your "
"data."
msgstr "以下のガイドは、あなたのコンピュータをロックアウトする可能性があります。このようなリスクを認識し、データを失う可能性があるため、以下のスクリプトはセカンダリのコンピュータで使用するか、完全にバックアップを取った後に使用することをお勧めします。"

#: ../pro/linux/disk-encryption-luks.rst:28
msgid "An Ubuntu or Debian computer with at least one LUKS-encrypted volume."
msgstr "LUKSで暗号化されたボリュームが1つ以上あるUbuntuまたはDebianのコンピュータ。"

#: ../pro/linux/disk-encryption-luks.rst:30
msgid ""
"See the section below to determine which method is compatible with this "
"guide."
msgstr "どの方法が本ガイドに対応しているかは、以下の項目を参照してください。"

#: ../pro/linux/disk-encryption-luks.rst:32
msgid ""
"A Nitrokey Pro 2 or Nitrokey Storage 2 `initialized <openpgp.html>`_ with"
" keys."
msgstr "Nitrokey Pro 2またはNitrokey Storage 2の`キーで初期化された<openpgp.html>`_。"

#: ../pro/linux/disk-encryption-luks.rst:37
msgid "Known Issues"
msgstr "既知の問題"

#: ../pro/linux/disk-encryption-luks.rst:39
msgid ""
"So far, the script works only with manually-partitioned volumes, that are"
" composed of an unencrypted ``/boot`` partition, and an encrypted root "
"``/`` partition."
msgstr "今のところ、このスクリプトは、暗号化されていない``/boot``パーティションと、暗号化されたルート``/``パーティションで構成された、手動で分割されたボリュームでのみ動作します。"

#: ../pro/linux/disk-encryption-luks.rst:43
msgid ""
"Please do not select the automatic full-disk encryption provided by the "
"operating system you are using for this guide. You will face recurrent "
"errors when the partitioning is done automatically, using the "
"installation interface on Ubuntu and Debian."
msgstr "このガイドでは、お使いのOSが提供する自動フルディスク暗号化を選択しないでください。UbuntuやDebianのインストールインターフェースを使用して、パーティション分割が自動的に行われると、繰り返しエラーが発生します。"

#: ../pro/linux/disk-encryption-luks.rst:49
msgid "Instructions"
msgstr "使い方"

#: ../pro/linux/disk-encryption-luks.rst:51
msgid "Install dependencies"
msgstr "依存関係のインストール"

#: ../pro/linux/disk-encryption-luks.rst:58
msgid "Create smartcard-luks directory"
msgstr "smartcard-luksディレクトリの作成"

#: ../pro/linux/disk-encryption-luks.rst:65
msgid "Download the smartcard-luks-script"
msgstr "smartcard-luks-scriptのダウンロード"

#: ../pro/linux/disk-encryption-luks.rst:73
msgid "Export the public key"
msgstr "公開鍵のエクスポート"

#: ../pro/linux/disk-encryption-luks.rst:75
msgid "To export your public key from GnuPG’s keyring:"
msgstr "GnuPGのキーリングから自分の公開鍵をエクスポートする。"

#: ../pro/linux/disk-encryption-luks.rst:82
msgid ""
"If you already have uploaded a public key to a keyserver (or have it "
"stored somewhere else), you should retrieve it in the way you are most "
"comfortable with, and proceed to step 5."
msgstr "すでに公開鍵を鍵サーバにアップロードしている（またはどこかに保存している）場合は、自分の使いやすい方法で公開鍵を取得し、手順5に進んでください。"

#: ../pro/linux/disk-encryption-luks.rst:86
msgid "Determine and verify the correct LUKS device name for your root-partition:"
msgstr "ルートパーティションの正しいLUKSデバイス名を決定し、確認します。"

#: ../pro/linux/disk-encryption-luks.rst:94
msgid ""
"Usually this should be something like `nvme0n1p3_crypt` (for NitroPC) or "
"`sda3_crypt` (for NitroPads).  You can and should crosscheck that the "
"UUID referred inside `/etc/crypttab` is the designated partition by "
"checking the symbolic link inside `/dev/disks/by-uuid/`."
msgstr ""
"通常、これは `nvme0n1p3_crypt` (NitroPC の場合) または `sda3_crypt` (NitroPads の場合) "
"のようなものになります。  /etc/crypttab` の中で参照されている UUID "
"が指定されたパーティションであることは、`/dev/disks/by-uuid/` "
"の中のシンボリックリンクをチェックすることで確認できますし、そうすべきです。"

#: ../pro/linux/disk-encryption-luks.rst:99
msgid ""
"Execute the script with the luks device name (e.g., `nvme0n1p3_crypt`) "
"and `pubkey.asc` as arguments."
msgstr "luksのデバイス名（例：`nvme0n1p3_crypt`）と`pubkey.asc`を引数にして、スクリプトを実行します。"

#: ../pro/linux/disk-encryption-luks.rst:107
msgid ""
"Once, you run the script with the OpenPGP public key as argument, it "
"automatically sets up a new LUKS secret, encrypts it against that public "
"key, and sets up crypttab, LUKS, initramfs, and GRUB."
msgstr "OpenPGPの公開鍵を引数にスクリプトを実行すると、自動的に新しいLUKSの秘密が設定され、その公開鍵で暗号化され、crypttab、LUKS、initramfs、GRUBが設定されます。"

#: ../pro/linux/disk-encryption-luks.rst:111
msgid "First you will be prompted for the ``User PIN``"
msgstr "最初に``User PIN``のプロンプトが表示されます。"

#: ../pro/linux/disk-encryption-luks.rst:116
msgid ""
"Once you unlock the Nitrokey, you will be prompted for your ``OLD "
"passphrase``. It is the passphrase you entered to encrypt your volume at "
"installation."
msgstr ""
"Nitrokeyのロックを解除すると、``OLD "
"passphrase``の入力を求められます。これは、インストール時にボリュームを暗号化するために入力したパスフレーズです。"

#: ../pro/linux/disk-encryption-luks.rst:122
msgid ""
"This is a fall-back alternative in case you lose your Nitrokey, or if "
"it’s unavailable. So far, it was not tested, and users must be aware of "
"the risk of getting locked out of their computer, if the fall-back method"
" does not work."
msgstr "これは、Nitrokeyを紛失した場合や、Nitrokeyが利用できない場合のフォールバックの代替手段です。今のところテストされていないので、ユーザーは、フォールバック方法が機能しない場合、コンピュータからロックアウトされるリスクに注意する必要があります。"

#: ../pro/linux/disk-encryption-luks.rst:127
msgid ""
"Once you enter the passphrase, the script finishes the setup in about one"
" minute. Do not interrupt the script, or you might get locked out of your"
" computer after reboot."
msgstr "パスフレーズを入力すると、スクリプトは約1分で設定を終了します。スクリプトを中断すると、再起動後にコンピュータからロックアウトされる可能性がありますのでご注意ください。"

#: ../pro/linux/disk-encryption-luks.rst:134
msgid "Done!"
msgstr "できました。"

#: ../pro/linux/disk-encryption-luks.rst:136
msgid ""
"By now you must reboot, and you should be able to use your Nitrokey to "
"unlock your encrypted drive."
msgstr "これで再起動すると、Nitrokeyを使って暗号化されたドライブのロックを解除できるはずです。"

#: ../pro/linux/disk-encryption-luks.rst:142
msgid "After reboot you should be prompted for your User PIN"
msgstr "再起動すると、ユーザーPINの入力を求められます。"

#: ../pro/linux/disk-encryption-luks.rst:147
msgid "Enter your User PIN to unlock the drive"
msgstr "ユーザーPINを入力してドライブのロックを解除する"

#: ../pro/linux/disk-encryption-luks.rst:154
msgid "Further Hints"
msgstr "さらなるヒント"

#: ../pro/linux/disk-encryption-luks.rst:157
msgid "Change Passphrase"
msgstr "パスフレーズの変更"

#: ../pro/linux/disk-encryption-luks.rst:159
msgid ""
"Once this setup is done, you should not use the (gnome) *disks* utility "
"anymore to change the (fallback) passphrase. The proper way to do this is"
" to call *cryptsetup* directly like this:"
msgstr ""
"この設定が完了したら、(gnome) *disks* "
"ユーティリティーを使って(予備の)パスフレーズを変更する必要はありません。適切な方法は、次のように *cryptsetup* "
"を直接呼び出すことです。"

#: ../pro/linux/disk-encryption-luks.rst:167
msgid "With `nvme0n1p3` being the partition you set up the keys for."
msgstr "ただし、`nvme0n1p3`はキーを設定したパーティションです。"

#: ../pro/linux/disk-encryption-luks.rst:170
msgid "Use Multiple Keys"
msgstr "複数のキーを使う"

#: ../pro/linux/disk-encryption-luks.rst:172
msgid ""
"It is easy to use multiple (hardware) security keys so that each of them "
"is able to unlock the LUKS drive independently. Just export multiple "
"public keys and also *pass multiple keys* to the setup script like this:"
msgstr "複数の（ハードウェア）セキュリティキーを使用して、それぞれが独立してLUKSドライブのロックを解除できるようにするのは簡単です。複数の公開鍵をエクスポートし、以下のようにセットアップスクリプトに複数の鍵を*パス*するだけです。"

#: ../pro/linux/disk-encryption-luks.rst:182
msgid "Set Cardholder Name"
msgstr "カードホルダー名の設定"

#: ../pro/linux/disk-encryption-luks.rst:184
msgid ""
"During the PIN entry on boot for decryption of the LUKS root partition a "
"cardholder is presented to the user, to set this please use ``$ gpg "
"--edit-card`` and inside the prompt type ``admin`` and ``name`` to set "
"the cardholder for the OpenPGP Card (Nitrokey Storage 2 or Nitrokey Pro "
"2)."
msgstr ""
"LUKSルートパーティションの復号化のためのブート時のPIN入力の際に、カードホルダーがユーザーに提示されます。これを設定するには、``$ gpg"
" --edit-card`` を使用し、プロンプトの中で "
"``admin<xid=\"189\"></x>`と``name``を入力して、OpenPGPカード（Nitrokey Storage "
"2またはNitrokey Pro 2）のカードホルダーを設定します。"

#: ../pro/linux/disk-encryption-luks.rst:190
msgid "Replace/Delete Keys"
msgstr "キーの交換/削除"

#: ../pro/linux/disk-encryption-luks.rst:192
msgid ""
"It is not possible to add/remove keys directly. Therefore you need to "
"delete/remove the old setup and re-run the setup with the designated "
"key(s):"
msgstr "キーを直接追加/削除することはできません。そのため、一度古い設定を削除し、指定したキーで設定をやり直す必要があります。"

#: ../pro/linux/disk-encryption-luks.rst:196
msgid ""
"Remove the keyfile (path, if you used the script above) from luks-device "
"(*nvme0n1p3*):"
msgstr "luks-device (*nvme0n1p3*)からキーファイル(パス、上記スクリプトを使用した場合)を削除する。"

#: ../pro/linux/disk-encryption-luks.rst:202
msgid "Remove the keyfile itself:"
msgstr "キーファイル自体を削除します。"

#: ../pro/linux/disk-encryption-luks.rst:208
msgid "Re-run setup above."
msgstr "上記のセットアップを再実行します。"

#: ../pro/linux/disk-encryption-luks.rst:211
msgid "Unlocking LUKS2 with X509 certificate"
msgstr "X509証明書によるLUKS2のロック解除"

#: ../pro/linux/disk-encryption-luks.rst:213
msgid ""
"SystemD supports unlocking a LUKS2 partition using a X509 certificate, "
"find a great blog entry on how to realize this at the `Personal blog of "
"Vladimir Timofeenko`_"
msgstr ""
"SystemD は X509 証明書を使用した LUKS2 "
"パーティションのロック解除をサポートしていますが、これを実現する方法については、`Personal blog of Vladimir "
"Timofeenko`_ で紹介されています。"

#: ../pro/ecc.rst:2
msgid "Elliptic Curves (ECC) Support"
msgstr "エリプティックカーブ（ECC）のサポート"

#: ../pro/ecc.rst:9
msgid "RSA-2048 Becomes Increasingly Insecure"
msgstr "RSA-2048はますます安全ではなくなっていく"

#: ../pro/ecc.rst:11
msgid ""
"For security reasons, the German Federal Office for Information Security "
"(Bundesamt für Sicherheit in der Informationstechnik, BSI) no longer "
"recommends RSA keys with a length of 2048 bit `to be used after 2022 "
"<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102"
"/BSI-TR-02102-1.pdf?_blob=publicationFile&v=10>`_. This means that longer"
" keys will need to come into use in the foreseeable future. Assuming a "
"usage period of five years, is is already necessary to generate longer "
"keys. However, longer RSA keys with 3072 bit or 4096 bit are "
"significantly slower. For this reason the new Nitrokey Storage 2 and Pro "
"2 (resp. the integrated OpenPGP Card version 3.3) supports encryption by "
"means of `elliptic-curve cryptography (ECC) "
"<https://en.wikipedia.org/wiki/Elliptic-curve_cryptography>`_. This "
"method is considered to be just as secure with smaller ECC keys as longer"
" RSA keys and is also considerably faster."
msgstr ""
"ドイツ連邦情報セキュリティ局（Bundesamt für Sicherheit in der "
"Informationstechnik、BSI）は、セキュリティ上の理由から、2048ビットの長さのRSA鍵を2022年以降`に使用することを推奨しなくなりました<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102"
"/BSI-"
"TR-02102-1.pdf?_blob=publicationFile&v=10>`_。つまり、近い将来、より長い鍵が使われるようになることが予想されます。使用期間を5年と仮定すると、すでに長い鍵を生成する必要があります。しかし、3072ビットや4096ビットの長いRSA鍵では速度が著しく低下します。このため、新しいNitrokey"
" Storage 2およびPro 2（および統合されたOpenPGP "
"Cardバージョン3.3）では、`楕円曲線暗号（ECC）<https://en.wikipedia.org/wiki/Elliptic-"
"curve_cryptography>`_による暗号化をサポートしています。この方法は、小さいECCキーでも長いRSAキーと同様に安全で、しかもかなり高速であると考えられています。"

#: ../pro/ecc.rst:16
msgid "Basics of Elliptic-Curve Cryptography"
msgstr "楕円曲線暗号の基礎知識"

#: ../pro/ecc.rst:18
msgid ""
"In contrast to RSA, there are many different forms (so-called curves) of "
"elliptic-curve cryptography. Notably, the `NSA was involved "
"<https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html>`_"
" in the development of the NIST curves. Even if there is no evidence of "
"back doors in the curves, using a certain curve can pose a question of "
"trust. Fortunately the new Nitrokey Storage 2 and Pro 2 support two kind "
"of curves, namely NIST and Brainpool. In what follows we will use "
"Brainpool curves. `This article <https://arstechnica.com/information-"
"technology/2013/10/a-relatively-easy-to-understand-primer-on-elliptic-"
"curve-cryptography/>`_ provides a good entry point for gaining a general "
"understanding of elliptic-curve cryptography."
msgstr ""
"RSA とは対照的に、楕円曲線暗号にはさまざまな形式 (いわゆる曲線) "
"があります。特に、NISTの曲線の開発には、`NSAが<https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html>`_関与しています。曲線にバックドアの証拠がなくても、特定の曲線を使用すると信頼性に疑問が生じます。幸い、新しいNitrokey"
" Storage 2とPro "
"2は、NISTとBrainpoolという2種類の曲線をサポートしています。以下では、Brainpool曲線を使用します。`この記事<https://arstechnica.com"
"/information-technology/2013/10/a-relatively-easy-to-understand-primer-"
"on-elliptic-curve-cryptography/>`_は、楕円曲線暗号の一般的な理解を得るための良い入口となります。"

#: ../pro/ecc.rst:21
msgid "System Requirements"
msgstr "システム要件"

#: ../pro/ecc.rst:23
msgid ""
"In order to create keys based on elliptic curves a Nitrokey Storage 2 / "
"Pro 2 and GnuPG version 2.1.17 or higher are required."
msgstr "楕円曲線に基づく鍵を作成するには、Nitrokey Storage 2 / Pro 2とGnuPGバージョン2.1.17以上が必要です。"

#: ../pro/ecc.rst:26
msgid "You can read Nitrokey’s OpenPGP Card version via ``gpg2 —card-status``:"
msgstr "NitrokeyのOpenPGP Cardバージョンは、``gpg2 —card-status``で読むことができます。"

#: ../pro/ecc.rst:36
msgid ""
"The ‘Version’ field represents the version of the OpenPGP Card integrated"
" in the Nitrokey — in this case it is 3.3 as needed for Elliptic-curve "
"cryptography. OpenPGP Card version 2.2 doesn’t support ECC."
msgstr ""
"Version」フィールドは、Nitrokeyに内蔵されているOpenPGP "
"Cardのバージョンを表しています。ここでは、楕円曲線暗号に必要な3.3を使用しています。OpenPGPカードのバージョン2.2はECCをサポートしていません。"

#: ../pro/ecc.rst:38
msgid ""
"You can learn about the installed version of GnuPG via ``gpg2  "
"--version``. At least version 2.1.16 is required. The newest GnuPG "
"version for Windows can be found `here <https://www.gpg4win.org/>`_ and "
"the newest version for MacOS can be found `here "
"<https://gpgtools.org/>`_. A suitable version of GnuPG is included in the"
" GNU/Linux distributions Ubuntu (since 18.04), Debian (from Stretch "
"onwards), Arch Linux, Fedora (from Release 26 onwards) and openSUSE "
"Tumbleweed. At the end of this articles are instructions how to manually "
"update GnuPG on older Ubuntu versions."
msgstr ""
"インストールされているGnuPGのバージョンについては、``gpg2  "
"--version``で知ることができます。最低でもバージョン2.1.16が必要です。Windows用のGnuPGの最新版は`こちら<https://www.gpg4win.org/>`_、MacOS用の最新版は`こちら<https://gpgtools.org/>`_にあります。GNU/Linux"
" ディストリビューションの Ubuntu (18.04 以降)、Debian (Stretch 以降)、Arch Linux、Fedora "
"(Release 26 以降)、openSUSE Tumbleweed には、GnuPG "
"の適切なバージョンが含まれています。この記事の最後に、古いバージョンのUbuntuでGnuPGを手動でアップデートする方法を紹介しています。"

#: ../pro/ecc.rst:42
msgid ""
"GnuPG 2.0 is still being used, but support for it has been discontinuied "
"in 2017. All communication partners must use GnuPG 2.1 or newer for email"
" encryption by means of ECC, otherwise incompatibility issues might "
"arise. Therefore you should only use ECC if you are sure you will be able"
" to circumvent this problem."
msgstr ""
"GnuPG 2.0は現在も使用されていますが、2017年にサポートが終了しています。すべての通信相手は、ECCによるメールの暗号化にGnuPG "
"2.1以降を使用する必要があり、そうしないと非互換性の問題が発生する可能性があります。したがって、この問題を回避できることが確実な場合にのみECCを使用する必要があります。"

#: ../pro/ecc.rst:49
msgid "Key Generation on the Nitrokey Storage 2 / Pro 2"
msgstr "Nitrokey Storage 2 / Pro 2の鍵生成について"

#: ../pro/ecc.rst:51
msgid ""
"Once these requirements are fulfilled, you can get started. (Warning: "
"existing keys will be overwritten in the process!) You now have two "
"options. The first option is to create the key directly on the Nitrokey "
"Storage 2 / Pro 2. The benefit here is that the key will never be outside"
" the device and as such can never be read out. The second option is to "
"import a previously locally generated key. The advantage in this case is "
"that you can securely store a backup of the key, which can then be "
"restored in case the Nitrokey is lost. Only the first option is described"
" below. In order to create a key with backup, you can access `the "
"following instructions "
"<https://www.gniibe.org/memo/software/gpg/keygen-25519.html>`_ and use "
"this `general information "
"<https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups>`_"
" to transfer the key to the Nitrokey."
msgstr ""
"これらの条件が満たされると、すぐに始められます。(警告：既存のキーはプロセス中に上書きされます！）ここでは2つのオプションがあります。1つ目は、Nitrokey"
" Storage 2 / Pro "
"2上で直接キーを作成する方法です。ここでの利点は、キーがデバイスの外に出ることがないため、決して読み出すことができないということです。2つ目の方法は、以前にローカルで生成した鍵をインポートすることです。この場合の利点は、鍵のバックアップを安全に保管できることで、Nitrokeyを紛失した場合に復元することができます。以下では、1つ目の方法についてのみ説明します。バックアップ付きの鍵を作成するには、`以下の説明書<https://www.gniibe.org/memo/software/gpg/keygen-25519.html>`_にアクセスし、この`一般情報<https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups>`_を使用して、鍵をNitrokeyに転送します。"

#: ../pro/ecc.rst:53
msgid ""
"Within GnuPG there is already a “generate” command, which can be used to "
"easily create keys on the device. However it is not as yet possible to "
"select the type of key directly, so the key must first be prepared. We "
"use the following commands for this:"
msgstr "GnuPGにはすでに「generate」コマンドがあり、これを使ってデバイス上で簡単に鍵を作成することができます。しかし、鍵の種類を直接選択することはまだできませんので、まず鍵を準備する必要があります。これには以下のコマンドを使用します。"

#: ../pro/ecc.rst:61
msgid ""
"Alternatively, other curves could be selected, as described in the next "
"section."
msgstr "また、次のセクションで説明するように、他の曲線を選択することもできます。"

#: ../pro/ecc.rst:63
msgid ""
"Now we enter ``gpg2 --card-edit`` and see that brainpoolP256r1 is under "
"“key attributes” instead of rsa2048."
msgstr ""
"ここで、``gpg2 --card-"
"edit``と入力すると、「鍵の属性」のところに、rsa2048ではなく、brainpoolP256r1があることがわかります。"

#: ../pro/ecc.rst:89
msgid "Then we create the key."
msgstr "そして、キーを作成します。"

#: ../pro/ecc.rst:121
msgid ""
"The Nitrokey now incorporates elliptic-curve cryptography instead of RSA "
"keys and can be used as usual."
msgstr "Nitrokeyは、RSA鍵の代わりに楕円曲線暗号を採用したので、通常通り使用することができます。"

#: ../pro/ecc.rst:124
msgid "Available Curves"
msgstr "カーブ"

#: ../pro/ecc.rst:126
msgid ""
"In the above procedure we chose the Brainpool curves. Alternatively, NIST"
" curves can be used. The configuration is carried out as follows:"
msgstr "上記の手順では、Brainpool曲線を選択しました。また、NISTの曲線を使用することもできます。設定は以下のようにして行います。"

#: ../pro/ecc.rst:135
msgid "Update of GnuPG on Ubuntu"
msgstr "UbuntuにおけるGnuPGのアップデート"

#: ../pro/ecc.rst:137
msgid ""
"The following steps are needed only if you are running a Ubuntu version "
"older than 18.04. You can install GnuPG 2.1.18 on such system with the "
"commands below. This involves newer Debian packages, which is the easiest"
" option. This approach has been tested successfully on Ubuntu 17.10 and "
"propbably works on 16.04 as well. However, the occurence of problems "
"during usage can‘t be excluded."
msgstr ""
"以下の手順は、18.04よりも古いバージョンのUbuntuを使用している場合にのみ必要です。このようなシステムには、以下のコマンドでGnuPG "
"2.1.18をインストールできます。これにはより新しいDebianパッケージが必要ですが、これが最も簡単な方法です。この方法は、Ubuntu "
"17.10で正常にテストされており、おそらく16.04でも動作するでしょう。ただし、使用中に問題が発生する可能性は排除できません。"

#: ../pro/ecc.rst:152
msgid ""
"In case you want to undo the installation, you have to execute the "
"following commands:"
msgstr "インストールを元に戻したい場合は、以下のコマンドを実行する必要があります。"

#: ../storage/linux/firmware-update.rst:2
#: ../storage/windows/firmware-update.rst:2
msgid "Firmware Update"
msgstr "ファームウェアの更新"

#: ../storage/linux/firmware-update.rst:10
#: ../storage/windows/firmware-update.rst:10
msgid ""
"You should backup all data from the device before upgrading, as firmware "
"upgrades may destroy all data on the device (especially coming from "
"firmware version <0.45)!"
msgstr "ファームウェアをアップグレードすると、デバイス上のすべてのデータが破壊される可能性があるため、アップグレードする前にデバイスからすべてのデータをバックアップする必要があります（特にファームウェアのバージョンが<0.45の場合）。"

#: ../storage/linux/firmware-update.rst:14
msgid ""
"Download the `Nitrokey App <https://www.nitrokey.com/download>`_ and the "
"program “dfu-programmer” which should be available through your package-"
"manager, e.g. ``apt-get update && apt-get install dfu-programmer`` on "
"Debian-based systems."
msgstr ""
"`Nitrokey App <https://www.nitrokey.com/download>`_とプログラム \"dfu-"
"programmer \"をダウンロードしてください。"

#: ../storage/linux/firmware-update.rst:16
msgid ""
"Download the latest firmware \".hex\" file from `here "
"<https://github.com/Nitrokey/nitrokey-storage-firmware/releases/latest>`_"
" and store it as \"firmware.hex\" in your home folder. Older releases are"
" `here <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases>`_."
msgstr ""
"` こちら <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`_ から最新のファームウェア \".hex\" ファイルをダウンロードし、ホームフォルダに "
"\"firmware.hex\" として保存します。古いリリースは、`ここ<https://github.com/Nitrokey"
"/nitrokey-storage-firmware/releases>`_です。"

#: ../storage/linux/firmware-update.rst:18
#: ../storage/windows/firmware-update.rst:18
msgid ""
"Right click on the icon of the Nitrokey App and go to “Configure” -> "
"“Enable Firmware Update”. The default firmware password is ‘12345678’."
msgstr ""
"Nitrokey Appのアイコンを右クリックし、「Configure」-> 「Enable Firmware "
"Update」を選択してください。デフォルトのファームウェアパスワードは「12345678」です。"

#: ../storage/linux/firmware-update.rst:25
#: ../storage/windows/firmware-update.rst:25
msgid ""
"The Nitrokey Storage is not detected by Nitrokey App anymore once update "
"mode got activated. You have to proceed with the instructions described "
"below to make it work again."
msgstr ""
"アップデートモードが有効になると、Nitrokey StorageがNitrokey "
"Appで検出されなくなります。この場合、以下の手順で再び動作させる必要があります。"

#: ../storage/linux/firmware-update.rst:30
msgid "Open a terminal and execute:"
msgstr "ターミナルを開き、実行してください。"

#: ../storage/linux/firmware-update.rst:39
msgid ""
"whereas “firmware.hex” needs to be the path and file name of the firmware"
" which you downloaded in step 2."
msgstr "一方、\"firmware.hex \"には、ステップ2でダウンロードしたファームウェアのパスとファイル名を入力してください。"

#: ../pro/gpa.rst:2
msgid "Setup with Gnu Privacy Assistant (GPA)"
msgstr "Gnu Privacy Assistant（GPA）によるセットアップ"

#: ../pro/gpa.rst:4
msgid ""
"This document describes how to use Gnu Privacy Assistant (GPA) to set up "
"the Nitrokey for its first usage."
msgstr "このドキュメントでは、Gnu Privacy Assistant（GPA）を使用して、Nitrokeyを初めて使用する際の設定方法を説明します。"

#: ../pro/gpa.rst:6
msgid ""
"First you need to install Gnu Privacy Assistant (GPA). For Windows you "
"should download and install the `GPG4Win <https://www.gpg4win.org/>`_ "
"package which contains GPA. For Linux you should install the GPA package "
"of your distribution (e.g. on Ubuntu: sudo apt-get install gpa )."
msgstr ""
"まず、Gnu Privacy Assistant (GPA)をインストールする必要があります。Windowsの場合は、GPAを含む`GPG4Win"
" "
"<https://www.gpg4win.org/>`_パッケージをダウンロードしてインストールしてください。Linuxの場合は、お使いのディストリビューションのGPAパッケージをインストールしてください（例：Ubuntuの場合：sudo"
" apt-get install gpa ）。"

#: ../pro/gpa.rst:8
msgid ""
"Start GPA and select the Card Manager; either by pressing the icon at the"
" top or by choosing Card Manager in the Windows menu."
msgstr "GPAを起動し、上部のアイコンを押すか、Windowsのメニューから「カードマネージャー」を選択してください。"

#: ../pro/gpa.rst:13
msgid ""
"The window of the Card Manager will appear. Enter your salutation, name "
"and optional other information. While doing so you might be asked to "
"enter the admin PIN."
msgstr ""
"Card "
"Managerのウィンドウが表示されます。挨拶文、名前、その他の情報を入力してください。その際、管理用PINの入力を求められる場合があります。"

#: ../pro/gpa.rst:18
msgid "Confirm this window and enter the admin PIN in the next window."
msgstr "この画面を確認し、次の画面で管理者用暗証番号を入力します。"

#: ../pro/gpa.rst:23
msgid ""
"In the Card Manager window you might need to scroll down until you see "
"the buttons to change the PINs. The term PIN is used interchangeable with"
" \"password\". Press the first button \"Change PIN\" in order to change "
"the user password. Read and confirm the following information window."
msgstr ""
"Card "
"Managerウィンドウでは、PINを変更するためのボタンが表示されるまで下にスクロールする必要があります。暗証番号は、パスワードと同じ意味で使われています。ユーザーパスワードを変更するには、最初のボタン"
" \"Change PIN\"を押してください。以下の情報ウィンドウを読み、確認してください。"

#: ../pro/gpa.rst:28
msgid ""
"Choose and enter your own PIN with a minimum length of six characters. "
"This PIN is required for the daily usage of the Nitrokey."
msgstr "6文字以上の暗証番号を選んで入力してください。このPINは、Nitrokeyを日常的に使用する際に必要です。"

#: ../pro/gpa.rst:33
msgid ""
"Go back to the Card Manager window in step three. This time you choose "
"the third button Change PIN in order to change the admin PIN. The admin "
"PIN is required to change the information on the Nitrokey and to change "
"the cryptographic keys. Proceed as described in steps four and five."
msgstr ""
"ステップ3のCard Managerウィンドウに戻ります。今回は、管理者用PINを変更するために、3番目のボタン「Change "
"PIN」を選択します。管理者PINは、Nitrokeyの情報を変更したり、暗号鍵を変更したりする際に必要となります。ステップ4と5で説明した通りに進めてください。"

#: ../pro/gpa.rst:35
msgid ""
"After changing both the user and the admin PIN, you are back in the Card "
"Manager window. Select \"Generate key\" in the \"Card\" menu."
msgstr ""
"ユーザーPINと管理者PINの両方を変更すると、Card Managerの画面に戻ります。Card\" メニューの \"Generate "
"key\" を選択します。"

#: ../pro/gpa.rst:40
msgid ""
"Enter your name and e-mail address. You should keep \"backup\" enabled in"
" order to create a backup file of your cryptographic keys. Optionally you"
" might select an expiration date for your cryptographic keys."
msgstr "お名前とメールアドレスを入力してください。暗号鍵のバックアップファイルを作成するために、\"backup\"を有効にしておく必要があります。また、暗号鍵の有効期限を設定することもできます。"

#: ../pro/gpa.rst:45
msgid "Wait until the keys are generated successfully."
msgstr "キーが正常に生成されるまで待ちます。"

#: ../pro/gpa.rst:50
msgid ""
"Enter a strong passphrase for your backup keys. We strongly recommend to "
"store the backup file on a separate storage(e.g. CD-ROM) and on a safe "
"location."
msgstr ""
"バックアップキーには、強力なパスフレーズを入力してください。バックアップファイルは、CD-"
"ROMなどの別のストレージに保存し、安全な場所に保管することを強くお勧めします。"

#: ../pro/gpa.rst:55
msgid ""
"Congratulations, your Nitrokey is now ready to use. Please see the "
"`applications <https://www.nitrokey.com/documentation/applications>`_ "
"section for further information of its usage."
msgstr "おめでとうございます！これでNitrokeyを使用することができます。使い方の詳細については、`応用編<https://www.nitrokey.com/documentation/applications>`_のセクションをご覧ください。"

#: ../pro/linux/hard-disk-encryption.rst:2
msgid "Hard Disk Encryption"
msgstr "ハードディスクの暗号化"

#: ../pro/linux/hard-disk-encryption.rst:9
msgid "VeraCrypt (formerly TrueCrypt)"
msgstr "VeraCrypt (旧TrueCrypt)"

#: ../pro/linux/hard-disk-encryption.rst:11
msgid ""
"`VeraCrypt <https://www.veracrypt.fr/en/Home.html>`_ is a free and Open "
"Source disk encryption software for Windows, macOS, and GNU/Linux. It is "
"the successor of TrueCrypt and thus recommended, although the following "
"instructions should apply to TrueCrypt as well."
msgstr ""
"`VeraCrypt "
"<https://www.veracrypt.fr/en/Home.html>`_は、Windows、macOS、GNU/Linuxに対応したフリーでオープンソースのディスク暗号化ソフトウェアです。TrueCryptの後継であるため推奨されていますが、以下の説明はTrueCryptにも当てはまります。"

#: ../pro/linux/hard-disk-encryption.rst:13
msgid ""
"Follow these steps to use the program with `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`_ or "
"`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`_:"
msgstr ""
"`Nitrokey Storage 2 <https://shop.nitrokey.com/shop/product/nitrokey-"
"storage-2-56>`_または`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product"
"/nk-pro-2-nitrokey-pro-2-3>`_でプログラムを使用するには、以下の手順に従ってください。"

#: ../pro/linux/hard-disk-encryption.rst:17
msgid ""
"Install the latest release of `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_, or download the `PKCS#11 "
"library <http://smartcard-auth.de/download-en.html>`_."
msgstr ""
"最新リリースの`OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_をインストールするか、`PKCS#11ライブラリ <http"
"://smartcard-auth.de/download-en.html>`_をダウンロードします。"

#: ../pro/linux/hard-disk-encryption.rst:20
msgid ""
"Choose the library in VeraCrypt under Settings>Preferences>Security Token"
" (location depends on system, e.g. ``/usr/lib/opensc``)."
msgstr ""
"VeraCryptの「Settings>Preferences>Security "
"Token」でライブラリを選択します（場所はシステムによって異なります、例：``/usr/lib/opensc``）。"

#: ../pro/linux/hard-disk-encryption.rst:22
msgid "Generate a 64 Byte key file via Tools>Keyfile Generator."
msgstr "Tools>Keyfile Generatorで64バイトのキーファイルを生成します。"

#: ../pro/linux/hard-disk-encryption.rst:23
msgid ""
"Now you should be able to import the generated key file via Tools>Manage "
"Security Token Keyfiles. You should choose the first Slot (``[0] User "
"PIN``). The keyfile is then stored on the Nitrokey as ‘Private Data "
"Object 1’ (``PrivDO1``)."
msgstr ""
"Tools>Manage Security Token "
"Keyfilesから生成されたキーファイルをインポートできるようになります。最初のSlot(``[0] User "
"PIN``)を選択してください。このキーファイルは、Nitrokeyに「Private Data Object "
"1」(``PrivDO1``)として保存されます。"

#: ../pro/linux/hard-disk-encryption.rst:27
msgid "After this you should wipe the original keyfile on your Computer securely!"
msgstr "その後、オリジナルのキーファイルをあなたのコンピュータ上で安全に消去してください。"

#: ../pro/linux/hard-disk-encryption.rst:29
msgid ""
"Now you can use VeraCrypt with the Nitrokey: Create a container, choose "
"the keyfile on the device as an alternative to a password."
msgstr "VeraCryptをNitrokeyで使えるようになりました。コンテナを作成し、パスワードの代わりにデバイス上のキーファイルを選択します。"

#: ../pro/linux/hard-disk-encryption.rst:34
msgid "Security Consideration"
msgstr "セキュリティへの配慮"

#: ../pro/linux/hard-disk-encryption.rst:36
msgid ""
"Please note that VeraCrypt doesn’t make use of the full security which "
"Nitrokey (and smart cards in general) offer. Instead it stores a keyfile "
"on the Nitrokey which theoretically could be stolen by a computer virus "
"after the user enters the PIN."
msgstr "VeraCryptは、Nitrokey(および一般的なスマートカード)が提供する完全なセキュリティを利用していないことに注意してください。その代わりに、ユーザーがPINを入力した後に、理論的にはコンピュータウイルスによって盗まれる可能性のあるキーファイルをNitrokeyに保存します。"

#: ../pro/linux/hard-disk-encryption.rst:41
msgid ""
"Note: `Aloaha Crypt <http://www.aloaha.com/aloaha-crypt-disk/>`_ is based"
" on TrueCrypt/VeraCrypt but without the described security limitation."
msgstr ""
"注：`Aloaha Crypt <http://www.aloaha.com/aloaha-crypt-"
"disk/>`_は、TrueCrypt/VeraCryptをベースにしていますが、記載されているセキュリティ制限はありません。"

#: ../pro/linux/hard-disk-encryption.rst:44
msgid "Hard Disk Encryption on Linux with LUKS/dm-crypt"
msgstr "LinuxにおけるLUKS/dm-cryptを用いたハードディスクの暗号化"

#: ../pro/linux/hard-disk-encryption.rst:46
msgid ""
"Here are `excellent instructions <http://blog.kumina.nl/2010/07/two-"
"factor-luks-using-ubuntu/>`_ how to use Nitrokey to encrypt your hard "
"disk under Linux with LUKS/dm-crypt. `Other instructions "
"<https://wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`_."
msgstr ""
"ここでは、`優れたインストラクション<http://blog.kumina.nl/2010/07/two-factor-luks-using-"
"ubuntu/>`_を紹介します。Nitrokeyを使って、LinuxでハードディスクをLUKS/dm-"
"cryptで暗号化する方法です。`その他の説明書 "
"<https://wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`_。"

#: ../pro/linux/hard-disk-encryption.rst:48
msgid ""
"Purism has created a `simple script "
"<https://docs.puri.sm/PureBoot/LibremKeyLUKS.html>`_ to add the "
"Nitrokey/LibremKey as a way to unlock LUKS partitions (not tested by "
"Nitrokey yet)."
msgstr ""
"Purism は、LUKS パーティションのロックを解除する方法として Nitrokey/LibremKey を追加するための "
"`シンプルなスクリプト <https://docs.puri.sm/PureBoot/LibremKeyLUKS.html>`_ を作成しました "
"(Nitrokey ではまだテストされていません)。"

#: ../pro/linux/hard-disk-encryption.rst:50
msgid ""
"`This project <https://github.com/artosan/nitroluks/>`_ aims to ease the "
"use of LUKS with the Nitrokey Pro or Storage based on the Password Safe "
"(not tested by Nitrokey yet). A description on how to use it on Gentoo "
"can be found `here <https://amedeos.github.io/gentoo/nitrokey/2019/01/21"
"/gentoo-nitrokey-luks.html>`_."
msgstr ""
"`このプロジェクトは <https://github.com/artosan/nitroluks/>`_ Nitrokey Pro や "
"Password Safe (Nitrokey ではまだテストされていません)をベースにした Storage で LUKS "
"の使用を容易にすることを目的としています。Gentoo での使用方法の説明は、`こちら "
"<https://amedeos.github.io/gentoo/nitrokey/2019/01/21/gentoo-nitrokey-"
"luks.html>`_にあります。"

#: ../pro/linux/hard-disk-encryption.rst:52
msgid ""
"For Arch Linux, see `initramfs-scencrypt <https://github.com/fuhry"
"/initramfs-scencrypt>`_."
msgstr ""
"Arch Linux では、`initramfs-scencrypt <https://github.com/fuhry/initramfs-"
"scencrypt>`_ を参照してください。"

#: ../pro/linux/hard-disk-encryption.rst:55
msgid "Storage Encryption on Linux with EncFS"
msgstr "LinuxにおけるEncFSによるストレージの暗号化"

#: ../pro/linux/hard-disk-encryption.rst:59
msgid "Prerequisite"
msgstr "前提条件"

#: ../pro/linux/hard-disk-encryption.rst:61
msgid ""
"Please ensure that you `installed the device driver, changed the default "
"PINs and generated or imported keys with GnuPG "
"<https://www.nitrokey.com/start>`_."
msgstr "`デバイスドライバーのインストール、デフォルトのPINの変更、GnuPG<https://www.nitrokey.com/start>`_での鍵の生成またはインポートが行われていることを確認してください。"

#: ../pro/linux/hard-disk-encryption.rst:65
msgid ""
"`EncFS <http://www.arg0.net/encfs>`_ is an easy to utlity for encrypted "
"file systems and it is based on `FUSE "
"<http://de.wikipedia.org/wiki/Filesystem_in_Userspace>`_. You may follow "
"these steps to use it with very long passwords and Nitrokey Pro 2:"
msgstr ""
"`EncFS <http://www.arg0.net/encfs>`_は、暗号化されたファイルシステムを簡単に使えるようにしたもので、`FUSE"
" "
"<http://de.wikipedia.org/wiki/Filesystem_in_Userspace>`_をベースにしています。非常に長いパスワードとNitrokey"
" Pro 2を使用するには、以下の手順に従ってください。"

#: ../pro/linux/hard-disk-encryption.rst:69
msgid "Initialization"
msgstr "初期化"

#: ../pro/linux/hard-disk-encryption.rst:71
msgid "Create a key file with random data:"
msgstr "ランダムなデータを持つキーファイルを作成します。"

#: ../pro/linux/hard-disk-encryption.rst:78
msgid "Encrypt the key file and use the User-ID of your Nitrokey"
msgstr "キーファイルを暗号化し、NitrokeyのUser-IDを使用してください。"

#: ../pro/linux/hard-disk-encryption.rst:85
msgid "Remove the key file in clear text:"
msgstr "キーファイルを平文で削除します。"

#: ../pro/linux/hard-disk-encryption.rst:92
msgid "Create mount point:"
msgstr "マウントポイントの作成"

#: ../pro/linux/hard-disk-encryption.rst:99
msgid "Create the actual encryption folder"
msgstr "実際の暗号化フォルダの作成"

#: ../pro/linux/hard-disk-encryption.rst:108
msgid "Unmount the new file system:"
msgstr "新しいファイルシステムをアンマウントします。"

#: ../pro/linux/hard-disk-encryption.rst:118
msgid "Mount encrypted file system and enter PIN of Nitrokey:"
msgstr "暗号化されたファイルシステムをマウントし、NitrokeyのPINを入力する。"

#: ../pro/linux/hard-disk-encryption.rst:125
msgid "After usage, unmount the file system:"
msgstr "使用後は、ファイルシステムをアンマウントしてください。"

#: ../pro/linux/hard-disk-encryption.rst:133
msgid "Storage Encryption on Linux with ECryptFS"
msgstr "ECryptFSによるLinuxでのストレージ暗号化"

#: ../pro/linux/hard-disk-encryption.rst:135
msgid ""
"`eCryptfs <https://www.ecryptfs.org/>`_ is a file based transparent "
"encryption file system for Linux which can be used with Nitrokey through "
"a PKCS#11 driver."
msgstr ""
"`eCryptfs "
"<https://www.ecryptfs.org/>`_は、Linux用のファイルベースの透過型暗号化ファイルシステムで、PKCS#11ドライバを介してNitrokeyと一緒に使用することができます。"

#: ../pro/linux/hard-disk-encryption.rst:137
msgid "See `these <http://tkxuyen.com/blog/?p=293>`_ instructions:"
msgstr "`説明書 <http://tkxuyen.com/blog/?p=293>`_をご覧ください。"

#: ../pro/linux/hard-disk-encryption.rst:139
msgid "Import the certificate and key to the Nitrokey"
msgstr "証明書と鍵をNitrokeyにインポートします。"

#: ../pro/linux/hard-disk-encryption.rst:147
msgid "Create the file ~/.ecryptfsrc.pkcs11:"
msgstr "ファイル ~/.ecryptfsrc.pkcs11 を作成します。"

#: ../pro/linux/hard-disk-encryption.rst:154
msgid "Enter this content:"
msgstr "この内容を入力してください。"

#: ../pro/linux/hard-disk-encryption.rst:166
msgid "Copy the serialized id for later usage:"
msgstr "シリアル化されたIDを後で使用するためにコピーします。"

#: ../pro/linux/hard-disk-encryption.rst:176
msgid ""
"Alternatively, try `ESOSI <http://sourceforge.net/projects/esosi/>`_ or "
"follow these steps using OpenSC and OpenVPN."
msgstr ""
"または、`ESOSI "
"<http://sourceforge.net/projects/esosi/>`_を試すか、OpenSCとOpenVPNを使って以下の手順を実行してください。"

#: ../pro/linux/hard-disk-encryption.rst:178
msgid ""
"Source of the guide: "
"https://www.nitrokey.com/documentation/applications#a:hard-disk-"
"encryption"
msgstr ""
"ガイドのソース： https://www.nitrokey.com/documentation/applications#a:hard-disk-"
"encryption"

#: ../storage/linux/hidden-os-specific-partitioning.rst:1
msgid ""
"*If this is the first time you unlock the hidden storage, you may need to"
" create a partition on the hidden volume. You will need to open a "
"partition manager such as* `GParted <https://gparted.org/>`_ *and create "
"one or more partitions manually. Make sure to create the partitions on "
"the device that appeared when unlocking the hidden volume.*"
msgstr ""

#: ../storage/linux/index.rst:2
msgid "Nitrokey Storage, Linux"
msgstr "Nitrokey Storage、Linux"

#: ../storage/linux/index.rst:13
msgid ""
"To access the OpenPGP smart card of the Nitrokey, install the package "
"libccid. On Debian/Ubuntu based Distributions type in terminal: *sudo "
"apt-get update && sudo apt-get install libccid*"
msgstr ""
"NitrokeyのOpenPGPスマートカードにアクセスするには、libccidパッケージをインストールします。Debian/Ubuntuベースのディストリビューションでは、ターミナルで次のように入力します。*sudo"
" apt-get update && sudo apt-get install libccid*."

#: ../storage/linux/index.rst:17
msgid ""
"If your distribution has a rather old version of libccid (<1.4.21) you "
"have to add the device information by yourself (for example if you are "
"using Ubuntu 14.04 or older). In this case please follow these "
"`instructions <https://www.nitrokey.com/documentation/frequently-asked-"
"questions-faq#latest-device-driver-missing-on-older-linux-"
"distribution>`_."
msgstr ""
"ディストリビューションにかなり古いバージョンのlibccid(<1.4.21)が含まれている場合は、自分でデバイス情報を追加する必要があります(例えば、Ubuntu"
" 14.04以降を使用している場合)。この場合、以下の`の手順に従ってください "
"<https://www.nitrokey.com/documentation/frequently-asked-questions-faq"
"#latest-device-driver-missing-on-older-linux-distribution>`_。"

#: ../storage/linux/index.rst:23
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`_."
msgstr "`Nitrokey App <https://www.nitrokey.com/download>`_をダウンロードして起動します。"

#: ../storage/linux/index.rst:26 ../storage/mac/index.rst:19
#: ../storage/windows/index.rst:25
msgid ""
"Open the About window from Nitrokey App’s menu and check if you have the "
"`latest firmware <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases>`_ installed. If it’s not the latest, please `update "
"<firmware-update.html>`_."
msgstr ""
"Nitrokey "
"Appのメニューから「バージョン情報」ウィンドウを開き、`最新のファームウェア<https://github.com/Nitrokey"
"/nitrokey-storage-"
"firmware/releases>`_がインストールされているかどうかを確認します。最新でない場合は、`アップデート<firmware-"
"update.html>`_を行ってください。"

#: ../storage/linux/index.rst:32 ../storage/mac/index.rst:24
#: ../storage/windows/index.rst:28
msgid ""
"Use the Nitrokey App to change the default User PIN (default: 123456) and"
" Admin PIN (default: 12345678) to your own choices."
msgstr ""
"Nitrokeyアプリを使って、デフォルトのUser PIN（デフォルト：123456）とAdmin "
"PIN（デフォルト：12345678）を自分の好きなものに変更してください。"

#: ../storage/linux/index.rst:35 ../storage/mac/index.rst:27
#: ../storage/windows/index.rst:31
msgid ""
"Your Nitrokey is now ready to use. `Checkout "
"<https://www.nitrokey.com/documentation/applications>`_ the various use "
"cases and supported applications."
msgstr ""
"これであなたのNitrokeyは使用可能になりました。`チェックアウト "
"<https://www.nitrokey.com/documentation/applications>`_様々な使用例やサポートされているアプリケーションをご紹介します。"

#: ../storage/linux/index.rst:41 ../storage/mac/index.rst:39
#: ../storage/windows/index.rst:35
msgid ""
"For many use cases described, it is necessary to have either OpenPGP or "
"S/MIME keys installed on the device (see below)."
msgstr "多くの使用例では、デバイスにOpenPGPまたはS/MIMEの鍵をインストールする必要があります（下記参照）。"

#: ../storage/linux/index.rst:45 ../storage/mac/index.rst:43
#: ../storage/windows/index.rst:38
msgid "Key Creation with OpenPGP or S/MIME"
msgstr "OpenPGPまたはS/MIMEによる鍵の作成"

#: ../storage/linux/index.rst:47 ../storage/mac/index.rst:45
#: ../storage/windows/index.rst:40
msgid ""
"There are two widely used standards for email encryption. While "
"OpenPGP/GnuPG is popular among individuals, S/MIME/x.509 is mostly used "
"by enterprises. If you are in doubt which one to choose, you should use "
"OpenPGP."
msgstr "電子メールの暗号化には、広く使われている2つの規格があります。OpenPGP/GnuPGは個人に人気がありますが、S/MIME/x.509は主に企業で使用されています。どちらを選ぶか迷った場合は、OpenPGPを使うとよいでしょう。"

#: ../storage/linux/index.rst:52 ../storage/mac/index.rst:50
msgid ""
"`instructions <openpgp.html>`_ for using the OpenPGP standard with the "
"Nitrokey"
msgstr "` NitrokeyでOpenPGP規格を使用するための説明書 <openpgp.html><x id=\"28\"></x"

#: ../storage/linux/index.rst:55 ../storage/mac/index.rst:53
msgid "`instructions <smime.html>`_ for using S/MIME with the Nitrokey"
msgstr "` NitrokeyでS/MIMEを使用するための説明書 <smime.html>`_。"

#: ../pro/openpgp.rst:2
msgid "OpenPGP Email Encryption"
msgstr "OpenPGPメール暗号化"

#: ../pro/openpgp.rst:8 ../pro/smime.rst:11
msgid "There are two widely used standards for email encryption."
msgstr "電子メールの暗号化には、広く使われている2つの規格があります。"

#: ../pro/openpgp.rst:10 ../pro/smime.rst:13
msgid "OpenPGP/GnuPG is popular among individuals,"
msgstr "個人ではOpenPGP/GnuPGが人気です。"

#: ../pro/openpgp.rst:12 ../pro/smime.rst:15
msgid "S/MIME/X.509 is mostly used by enterprises."
msgstr "S/MIME/X.509は主に企業で使用されています。"

#: ../pro/openpgp.rst:14
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP. While "
"this page describes the usage of OpenPGP, S/MIME is described `here "
"<smime.html>`_."
msgstr "どちらを選ぶべきか迷ったら、OpenPGPを使うべきです。このページではOpenPGPの使い方を説明していますが、S/MIMEについては`こちら<smime.html>`_で説明しています。"

#: ../pro/openpgp.rst:16
msgid ""
"Please familiarize yourself with the general concept behind the OpenPGP "
"standard first, for example by reading `this info graphic "
"<https://emailselfdefense.fsf.org/en/infographic.html>`_ of the Free "
"Software Foundation."
msgstr ""
"例えば、Free Software "
"Foundationの`この情報のグラフィック<https://emailselfdefense.fsf.org/en/infographic.html>`_を読むなどして、OpenPGP規格の背後にある一般的な概念をまず理解してください。"

#: ../pro/openpgp-keygen-backup.rst:11 ../pro/openpgp-keygen-gpa.rst:13
#: ../pro/openpgp-keygen-on-device.rst:19 ../pro/openpgp.rst:19
msgid "Key Generation"
msgstr "キー・ジェネレーション"

#: ../pro/openpgp.rst:21
msgid "If you do not have OpenPGP keys yet, you need to generate them first."
msgstr "まだOpenPGPの鍵を持っていない場合は、まず鍵を生成する必要があります。"

#: ../pro/openpgp.rst:23
msgid ""
"`Generate keys on Nitrokey <openpgp-keygen-gpa.html>`_ - this is the best"
" option if you are unexperienced, but you won’t have a backup of your "
"keys and therefore won’t be able to mitigate the loss of the Nitrokey"
msgstr ""
"` Nitrokeyでキーを生成する <openpgp-keygen-gpa.html>`_ - "
"経験のない方には最適なオプションですが、キーのバックアップがないため、Nitrokeyの紛失を軽減することができません。"

#: ../pro/openpgp.rst:29
msgid ""
"`Generate keys on Nitrokey with different algorithm or key size <openpgp-"
"keygen-on-device.html>`_ - this is as secure as the previous option and "
"thus you won’t have a backup as well, but you can change the key "
"attributes (that is the algorithm and key size)"
msgstr ""
"`Nitrokeyで異なるアルゴリズムまたはキーサイズ<openpgp-keygen-on-device.html>`_でキーを生成する - "
"これは前のオプションと同様に安全で、したがってバックアップもありませんが、キーの属性（アルゴリズムとキーサイズ）を変更することができます。"

#: ../pro/openpgp.rst:35
msgid ""
"`Generate keys locally <openpgp-keygen-backup.html>`_ and copy them to "
"Nitrokey - this is the most flexible, expert option, but only secure if "
"your system is not compromised, because you can create a backup key "
"outside your Nitrokey A similar description in french can be found `here "
"<https://xieme-art.org/post/importer-des-clefs-gnupg-dans-sa-nitrokey-"
"pro/>`_."
msgstr ""
"`キーをローカルに生成し<openpgp-keygen-backup.html>`_、Nitrokeyにコピーする - "
"これは最も柔軟で専門的なオプションですが、Nitrokeyの外にバックアップ "
"キーを作成できるため、システムが危険にさらされていない場合にのみ安全です フレンチでの同様の説明は、`こちら<https://xieme-"
"art.org/post/importer-des-clefs-gnupg-dans-sa-nitrokey-pro/>`_にあります。"

#: ../pro/openpgp.rst:44
msgid "Importing Existing Keys"
msgstr "既存のキーのインポート"

#: ../pro/openpgp.rst:46
msgid ""
"If you already have OpenPGP keys you may want to use them with your "
"Nitrokey, instead of generating new ones. Importing exsiting keys works "
"basically the same as generating keys locally first and copy them to the "
"Nitrokey (see above). Therefore, please have a look at the `corresponding"
" instructions <openpgp-keygen-backup.html#key-import>`_. Note that you "
"probably want to generate another subkey for authentication to your "
"existing key. See at the same instructions for `subkey generation "
"<openpgp-keygen-backup.html#subkey-for-authentication>`_."
msgstr ""
"すでにOpenPGPキーをお持ちの方は、新しいキーを生成する代わりに、Nitrokeyでそのキーを使用することができます。既存の鍵をインポートする方法は、基本的にはローカルで鍵を生成し、それをNitrokeyにコピーする方法と同じです（上記参照）。したがって、`対応する説明書"
"<openpgp-keygen-backup.html#key-"
"import>`_を参照してください。なお、既存の鍵に認証用の別のサブキーを生成したい場合もあるでしょう。`サブキーの生成 <openpgp-"
"keygen-backup.html#subkey-for-authentication>`_については、同じ指示を参照してください。"

#: ../pro/openpgp.rst:51 ../pro/smime.rst:59
msgid "You can find further information about the usage on these pages:"
msgstr "このページでは、使用方法についての詳しい情報をご覧いただけます。"

#: ../pro/openpgp.rst:53
msgid ""
"for using `OpenPGP encryption with Thunderbird <openpgp-"
"thunderbird.html>`_"
msgstr "Thunderbirdで`OpenPGPの暗号化を使用する場合 <openpgp-thunderbird.html>`_。"

#: ../pro/openpgp.rst:56
msgid "for using `OpenPGP encryption with Outlook <openpgp-outlook.html>`_"
msgstr "Outlookで`OpenPGPの暗号化を使用する場合 <openpgp-outlook.html>`_。"

#: ../pro/openpgp.rst:59
msgid ""
"for using `Claws Mail <https://www.claws-"
"mail.org/plugin.php?plugin=gpg>`_, an email client (and news reader) for "
"Linux and Windows"
msgstr ""
"`Claws Mail <https://www.claws-"
"mail.org/plugin.php?plugin=gpg>`_というLinuxおよびWindows用のメールクライアント（およびニュースリーダー）を使用しているため。"

#: ../pro/openpgp.rst:63 ../pro/smime.rst:67
msgid ""
"for using `Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`_, an email client for the Gnome Desktop on Linux "
"systems"
msgstr ""
"LinuxシステムのGnomeデスクトップ用メールクライアントである`Evolution "
"<https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`_の使用について"

#: ../pro/openpgp.rst:67
msgid "for using `GPGTools <https://gpgtools.org/>`_ on macOS."
msgstr "macOSで`GPGTools <https://gpgtools.org/>`_を使用するためのものです。"

#: ../pro/openpgp-keygen-backup.rst:2
msgid "OpenPGP Key Generation With Backup"
msgstr "バックアップ付きOpenPGP鍵生成"

#: ../pro/openpgp-keygen-backup.rst:8
msgid ""
"The following instructions explain the generation of OpenPGP keys and how"
" to copy them to the Nitrokey. This method has the advantage of providing"
" a backup of the keys in case of losing or breaking the Nitrokey. The "
"instructions are based on the command line interface of GnuPG. Thus, you "
"need to have GnuPG installed on your system. The newest GnuPG version for"
" Windows can be found `here <https://www.gpg4win.org/>`_ and the newest "
"version for MacOS can be found `here <https://gpgtools.org/>`_. Users of "
"Linux systems please install GnuPG with help of the package manager."
msgstr "以下の説明では、OpenPGPキーの生成とNitrokeyへのコピー方法を説明します。この方法は、Nitrokeyを紛失したり壊したりした場合に、鍵のバックアップが取れるという利点があります。説明は、GnuPGのコマンドライン・インターフェースに基づいています。そのため、お使いのシステムにGnuPGがインストールされている必要があります。Windows用の最新のGnuPGバージョンは`こちら<https://www.gpg4win.org/>`_、MacOS用の最新バージョンは`こちら<https://gpgtools.org/>`_でご覧いただけます。Linuxシステムのユーザは、パッケージマネージャの助けを借りてGnuPGをインストールしてください。"

#: ../pro/openpgp-keygen-backup.rst:13
msgid ""
"At first, you need to generate a key locally. You can decide, which key "
"attributes to use and - most importantly - you can export the key and "
"keep it somewhere save in case you need to restore the key."
msgstr "まず最初に、ローカルで鍵を生成する必要があります。どのような鍵の属性を使用するかを決めることができ、最も重要なことは、鍵をエクスポートしてどこかに保存し、鍵を復元する必要がある場合に備えることができることです。"

#: ../pro/openpgp-keygen-backup.rst:16
msgid "Main Key and Encryption Subkey"
msgstr "メインキーと暗号化サブキー"

#: ../pro/openpgp-keygen-backup.rst:18
msgid ""
"We can use the command ``gpg --full-generate-key --expert`` to start a "
"guided key generation with all possible options. You can choose the key "
"type (usually RSA (1) or ECC (9)), the length of the key and other "
"attributes. The following output is just a simple example, you may choose"
" other values."
msgstr ""
"コマンド ``gpg --full-generate-key --expert`` "
"を使用すると、可能なすべてのオプションを使ってガイド付きの鍵生成を開始することができます。鍵の種類（通常はRSA（1）またはECC（9））、鍵の長さ、その他の属性を選択することができます。以下の出力は簡単な例であり、他の値を選択することもできます。"

#: ../pro/openpgp-keygen-backup.rst:81
msgid ""
"The following table illustrates which algorithm can be used on which "
"device, in case you want to use different key attributes."
msgstr "次の表は、異なるキー属性を使用したい場合に、どのアルゴリズムをどのデバイスで使用できるかを示しています。"

#: ../pro/openpgp-keygen-backup.rst:84 ../pro/openpgp-keygen-on-device.rst:193
msgid "\\"
msgstr "\\"

#: ../pro/openpgp-keygen-backup.rst:90 ../pro/openpgp-keygen-on-device.rst:199
msgid "curve25519 (ECC)"
msgstr "カーブ25519（ECC）"

#: ../pro/openpgp-keygen-backup.rst:91 ../pro/openpgp-keygen-on-device.rst:200
msgid "NIST (ECC)"
msgstr "NIST（ECC）"

#: ../pro/openpgp-keygen-backup.rst:92 ../pro/openpgp-keygen-on-device.rst:201
msgid "Brainpool (ECC)"
msgstr "ブレインプール（ECC）"

#: ../pro/openpgp-keygen-backup.rst:93 ../pro/openpgp-keygen-on-device.rst:202
msgid "secp256k1"
msgstr "secp256k1"

#: ../pro/openpgp-keygen-backup.rst:97
msgid "Subkey for Authentication"
msgstr "認証用サブキー"

#: ../pro/openpgp-keygen-backup.rst:99
msgid ""
"You now have a main key with the capability to sign and certify (marked "
"as [SC]) and a subkey for encryption (marked as [E]). It is necessary to "
"have another subkey for use cases in which authentication is needed. This"
" subkey is generated in the next step. Type in ``gpg --edit-key --expert "
"keyID`` to start the process, whereas “keyID” is either the id of the key"
" or the email address used during key generation."
msgstr ""
"これで、署名と認証の機能を持つメインキー（[SC]と表示）と、暗号化のためのサブキー（[E]と表示）ができました。認証が必要なユースケースでは、別のサブキーが必要になります。このサブキーは次のステップで生成します。``gpg"
" --edit-key --expert keyID``と入力して処理を開始します。\"keyID "
"\"には、鍵のIDまたは鍵生成時に使用したメールアドレスを指定します。"

#: ../pro/openpgp-keygen-backup.rst:120
msgid ""
"Now you are in the interactive mode of GnuPG and you can add a key by "
"simply typing ``addkey``. You need to choose the key you want to use. It "
"is crucial to choose “set your own capabilities”, because we want to have"
" the “authenticate” capability which is not available otherwise. We "
"toggle sign and encrypt by typing ``s`` and ``e`` and we activate "
"authenticate by typing ``a``."
msgstr ""
"これでGnuPGのインタラクティブモードになり、``addkey``と入力するだけで、キーを追加することができます。使用するキーを選択する必要があります。set"
" your own capabilities \"を選択することは非常に重要です。なぜなら、他の方法では利用できない \"authenticate"
" \"機能を利用したいからです。``s``と``<xid=\"330\"></x>``、``a``と入力して、認証を有効にします。"

#: ../pro/openpgp-keygen-backup.rst:178
msgid ""
"We quit with ``q``. Afterwards we need to answer the same questions as "
"before. Finally, we have a ready-to-go key set which we can import to our"
" device."
msgstr "``q``で終了しました。その後、以前と同じ質問に答える必要があります。最後に、すぐに使えるキーセットができあがりましたので、これをデバイスにインポートします。"

#: ../pro/openpgp-keygen-backup.rst:212
msgid ""
"Now is good time to backup your key. Please keep this backup very secure."
" It is best practice to never have this key on a regular computer which "
"has connection to the internet, so that the key never gets compromised. "
"You can create a backup with something like:"
msgstr "今こそ、あなたのキーをバックアップする良い機会です。このバックアップは非常に安全に保管してください。インターネットに接続されている通常のコンピュータでは、このキーを決して使用しないことをお勧めします。以下のような方法でバックアップを作成することができます。"

#: ../pro/openpgp-keygen-backup.rst:219
msgid "Key Import"
msgstr "キーインポート"

#: ../pro/openpgp-keygen-backup.rst:221
msgid ""
"You have a main key and two subkeys which can be imported to your "
"Nitrokey. Before proceeding please make sure that you really have a "
"backup of the key, if you need one. The ``keytocard`` command used in the"
" next steps will **delete** your key from your disk!"
msgstr ""
"メインキーと2つのサブキーがありますが、これらはNitrokeyにインポートすることができます。先に進む前に、必要に応じてキーのバックアップが本当にあるかどうか確認してください。次のステップで使用する``keytocard``コマンドは、ディスクからキーを"
" **削除** します!"

#: ../pro/openpgp-keygen-backup.rst:223
msgid ""
"We start the process by accessing the interactive interface of GnuPG "
"again with ``gpg --edit-key --expert keyID``, whereas ``keyID`` is either"
" the id of the key or the email address used during key generation."
msgstr ""
"まず、``gpg --edit-key --expert "
"keyID``で再びGnuPGの対話型インターフェースにアクセスし、``keyID``には、鍵のIDか、鍵の生成時に使用したメールアドレスを指定します。"

#: ../pro/openpgp-keygen-backup.rst:259
msgid ""
"We just imported the main key to the card. Now we proceed with the two "
"subkeys. We type ``key 1`` to select the encryption subkey and type in "
"``keytocard`` again and select the slot to use."
msgstr ""
"メインキーをカードに取り込んだところです。次に、2つのサブキーを入力します。``key "
"1``と入力して暗号化サブキーを選択し、``keytocard``と再度入力して使用するスロットを選択します。"

#: ../pro/openpgp-keygen-backup.rst:288
msgid ""
"Now we deselect the first key with ``key 1`` and select the second subkey"
" with ``key 2`` and move it as well with ``keytocard``. Afterwards we "
"quit and save the changes."
msgstr ""
"ここで、``key 1``で最初のキーを選択解除し、<xid=\"79\"></x>`key "
"2``で2つ目のサブキーを選択し、``keytocard``で同様に移動します。その後、終了して変更を保存します。"

#: ../pro/openpgp-keygen-backup.rst:331
msgid ""
"Your keys are now moved to the Nitrokey and thus secured in hardware. "
"Congratulations!"
msgstr "あなたの鍵はNitrokeyに移され、こうしてハードウェアで固定されました。おめでとうございます。"

#: ../pro/openpgp-keygen-backup.rst:334 ../pro/openpgp-keygen-gpa.rst:53
#: ../pro/openpgp-keygen-on-device.rst:206
msgid "Exporting Public Key and Keyserver Usage"
msgstr "公開鍵のエクスポートと鍵サーバの利用"

#: ../pro/openpgp-keygen-backup.rst:336 ../pro/openpgp-keygen-gpa.rst:55
#: ../pro/openpgp-keygen-on-device.rst:208
msgid ""
"Although you can start to use your Nitrokey right away after generating "
"the keys on your system, you need to import your public key on every "
"system, you want to use the Nitrokey on. So to be prepared you have two "
"options: You either save the public key anywhere you like and use it on "
"another system or you save the public key on a webpage/keyserver."
msgstr "お使いのシステムで鍵を生成した後、すぐにNitrokeyを使い始めることができますが、Nitrokeyを使用したいすべてのシステムで公開鍵をインポートする必要があります。そのための準備として、2つの選択肢があります。公開鍵を好きな場所に保存して別のシステムで使用するか、Webページ/鍵サーバに公開鍵を保存するかです。"

#: ../pro/openpgp-keygen-backup.rst:339 ../pro/openpgp-keygen-on-device.rst:211
msgid "Generating a Public Key File"
msgstr "公開鍵ファイルの生成"

#: ../pro/openpgp-keygen-backup.rst:341
msgid ""
"To get a simple file of your public key, you can just use ``gpg --armor "
"--export keyID > pubkey.asc``. Use either the fingerprint as “keyID” "
"(look at ``gpg -K`` to get it) or just use your email address as an "
"identifier."
msgstr ""
"公開鍵のシンプルなファイルを取得するには、``gpg --armor --export keyID > "
"pubkey.asc``を使用すればよいでしょう。フィンガープリントを \"keyID \"として使用するか（``gpg "
"-K``を参照してください）、メールアドレスを識別子として使用してください。"

#: ../pro/openpgp-keygen-backup.rst:343
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg --import pubkey.asc`` "
"and then types ``gpg --card-status`` so that the system knows where to "
"look for this key. That’s all."
msgstr ""
"このファイルを持ち歩いたり、好きな人に送ったりすることができます。このファイルは全く秘密ではありません。別のシステムでNitrokeyを使いたい場合は、まず``gpg"
" --import pubkey.asc``を介してこの公開鍵をインポートし、次に``gpg --card-"
"status``をタイプして、システムがこの鍵をどこで探すかを知るようにします。以上です。"

#: ../pro/openpgp-keygen-backup.rst:347 ../pro/openpgp-keygen-on-device.rst:218
msgid "Uploading the Public Key"
msgstr "公開鍵のアップロード"

#: ../pro/openpgp-keygen-backup.rst:349 ../pro/openpgp-keygen-on-device.rst:220
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. You can do this by typing ``gpg --keyserver "
"search.keyserver.net --send-key keyID``. If you are using another machine"
" you can just import it by using ``gpg --keyserver search.keyserver.net "
"--recv-key keyID``."
msgstr ""
"公開鍵ファイルを持ち歩きたくない場合は、keyserverにアップロードすることができます。これは、``gpg --keyserver "
"search.keyserver.net --send-key "
"keyID``と入力することで行うことができます。別のマシンを使っている場合は、``gpg --keyserver "
"search.keyserver.net --recv-key keyID``を使ってインポートすることができます。"

#: ../pro/openpgp-keygen-backup.rst:351
msgid ""
"Another possibility is to change the URL setting on your card. Start "
"``gpg --card-edit`` again and first set the URL where the key is situated"
" (e.g. on the keyserver or on your webpage etc.) via the ``url`` command."
" From now on you can import the key on another system by just using the "
"``fetch`` command within the ``gpg --card-edit environment``."
msgstr ""
"もう一つの可能性は、カードのURL設定を変更することです。``gpg --card-"
"edit``を再度起動し、最初に``url``コマンドを使用して、キーが置かれているURLを設定します（例：キーサーバーや自分のウェブページなど）。今後は、``gpg"
" --card-edit "
"environment``コマンドの中で``fetch``コマンドを使用するだけで、別のシステムにキーをインポートすることができます。"

#: ../pro/openpgp-keygen-gpa.rst:2
msgid "OpenPGP Key Generation Using GPA"
msgstr "GPAによるOpenPGPの鍵生成"

#: ../pro/openpgp-keygen-gpa.rst:8
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey with help of the GNU Privacy Assistant (GPA). "
"You won’t be able to create a backup of these keys. Thus, if you lose the"
" Nitrokey or it breaks you can not decrypt mails or use these keys "
"anymore. Please see `here <openpgp-outlook.html>`_ for a comparison of "
"the different methods to generate OpenPGP keys."
msgstr ""
"ここでは、GNU Privacy Assistant "
"(GPA)を使って、Nitrokey上で直接OpenPGP鍵を生成する方法を説明します。この鍵のバックアップを作成することはできません。そのため、Nitrokeyを紛失したり壊れたりした場合、メールの解読やこれらの鍵の使用はできなくなります。OpenPGPの鍵を生成するさまざまな方法の比較については、`こちら"
"<openpgp-outlook.html>`_をご覧ください。"

#: ../pro/openpgp-keygen-gpa.rst:10
msgid ""
"You need to have GnuPG and GPA installed on your system. The newest "
"version for Windows can be found `here <https://www.gpg4win.org/>`_ (make"
" sure to check “GPA” during the installation!). Users of Linux systems "
"please install GnuPG and GPA with help of the package manager (e.g. using"
" ``sudo apt install gnupg gpa`` on Ubuntu)."
msgstr ""
"お使いのシステムにGnuPGとGPAがインストールされている必要があります。Windows用の最新版は、`こちら "
"<https://www.gpg4win.org/>`_にあります（インストールの際には、必ず「GPA」をチェックしてください！）。Linuxシステムのユーザは、パッケージマネージャを使ってGnuPGとGPAをインストールしてください（例：Ubuntuでは``sudo"
" apt install gnupg gpa``を使う）。"

#: ../pro/openpgp-keygen-gpa.rst:15
msgid ""
"At first, open the GNU Privacy Assistant (GPA). You may are asked to "
"generate a key, you can skip this step for now by clicking “Do it later”."
" In the main window, please click on “Card” or “Card Manager”."
msgstr ""
"まず、GNU Privacy Assistant "
"(GPA)を開きます。鍵の生成を求められることがありますが、「後で行う」をクリックすることで、このステップを省略することができます。メインウィンドウで、「カード」または「カードマネージャー」をクリックしてください。"

#: ../pro/openpgp-keygen-gpa.rst:22
msgid ""
"Another windows opens. Please go to “Card” -> “Generate key” to start the"
" key generation process."
msgstr "別のウィンドウが開きます。カード」-> 「キーの生成」でキーの生成処理を開始してください。"

#: ../pro/openpgp-keygen-gpa.rst:29
msgid ""
"Now you can put in your name and the email address you want to use for "
"the key that will be generated next. You may choose an expiration date "
"for your key, but you don’t have to."
msgstr "ここで、あなたの名前と、次に生成されるキーに使用する電子メールアドレスを入力します。キーの有効期限を選択することもできますが、その必要はありません。"

#: ../pro/openpgp-keygen-gpa.rst:31
msgid ""
"**Please do not use the backup checkbox**. This “backup” does only save "
"the encryption key. In case of a loss of the device, you will not be able"
" to restore the whole key set. So on the one hand it is no full backup "
"(use `these instructions <openpgp-keygen-backup.html>`_ instead, if you "
"need one) and on the other hand you risk that someone else can get in "
"possession of your encryption key. The advantage of generating keys on-"
"device is to make sure that keys are stored securely. Therefore, we "
"recommend to skip this half-backup."
msgstr ""
"**バックアップのチェックボックスは使用しないでください**。この「バックアップ」は、暗号化キーのみを保存します。デバイスを紛失した場合は、キーセット全体を復元することはできません。つまり、一方では完全なバックアップではなく"
" (必要であれば、`この説明書 <openpgp-keygen-backup.html>`_ "
"を代わりに使用してください)、他方では、他の人があなたの暗号化キーを手に入れることができるというリスクがあります。デバイス上で鍵を生成する利点は、鍵が安全に保管されていることを確認できることです。そのため、このハーフバックアップは省略することをお勧めします。"

#: ../pro/openpgp-keygen-gpa.rst:38
msgid ""
"You will be asked for the admin PIN (default: 12345678) and the user PIN "
"(default: 123456). When the key generation is finished, you can see the "
"fingerprints of the keys on the bottom of the window. You may fill up the"
" fields shown above, which are saved on your Nitrokey as well."
msgstr "管理者用暗証番号（デフォルト：12345678）とユーザー用暗証番号（デフォルト：123456）の入力を求められます。鍵の生成が終了すると、ウィンドウの下部に鍵のフィンガープリントが表示されます。上に表示されているフィールドに記入することができ、Nitrokeyにも保存されます。"

#: ../pro/openpgp-keygen-gpa.rst:45
msgid ""
"Now you can close the window and go back to the main window. Your key "
"will be visible in the key manager after refreshing. Every application "
"which makes use of GnuPG will work with your Nitrokey as well, because "
"GnuPG is fully aware of the fact, that the keys are stored on your "
"Nitrokey."
msgstr "これで、ウィンドウを閉じて、メインウィンドウに戻ることができます。あなたの鍵は、更新後にキーマネージャに表示されます。GnuPGを使用するすべてのアプリケーションは、あなたのNitrokeyでも動作します。なぜなら、GnuPGは鍵があなたのNitrokeyに保存されているという事実を完全に認識しているからです。"

#: ../pro/openpgp-keygen-gpa.rst:62
msgid ""
"Right-click on your key entry in the key manager and click “Export Keys…”"
" to export the public key to a file and/or “Send Keys…” to upload the key"
" to a keyserver."
msgstr ""
"鍵マネージャの鍵エントリを右クリックして、「Export Keys...」をクリックすると、公開鍵がファイルにエクスポートされ、「Send "
"Keys...」をクリックすると、鍵が鍵サーバにアップロードされます。"

#: ../pro/openpgp-keygen-gpa.rst:64
msgid ""
"You can carry the keyfile with you or send it to anyone who you like. "
"This file is not secret at all. If you want to use the Nitrokey on "
"another system, you first import this public key via clicking on “Keys” "
"-> “Importing Keys…” and choosing the file."
msgstr ""
"このキーファイルを持ち歩いたり、好きな人に送ったりすることができます。このファイルには一切の秘密はありません。別のシステムでNitrokeyを使用したい場合は、まず「鍵」->"
" 「鍵のインポート...」をクリックしてファイルを選択し、この公開鍵をインポートします。"

#: ../pro/openpgp-keygen-gpa.rst:67
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. If you are using another machine you can just import it by "
"using “Server” -> “Retrieve Keys…” and entering your name or key id."
msgstr ""
"公開鍵ファイルを持ち歩きたくない場合は、keyserverにアップロードすることができます。他のマシンを使用している場合は、\"Server\" "
"-> \"Retrieve Keys... \"で名前やキーIDを入力してインポートすることができます。"

#: ../pro/openpgp-keygen-gpa.rst:69
msgid ""
"Another possibility is to change the URL setting on your card. Open the "
"card manager again and fill in the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.). From now on you can import the "
"key on another system by right-clicking on the URL and click on “Fetch "
"Key”."
msgstr ""
"また、カードのURL設定を変更することもできます。カードマネージャーを再度開き、キーが置かれているURLを記入してください（例：キーサーバーやあなたのウェブページなど）。今後は、URLを右クリックして"
" \"Fetch Key \"をクリックすることで、他のシステムにキーをインポートすることができます。"

#: ../pro/openpgp-keygen-on-device.rst:2
msgid "OpenPGP Key Generation On-Device"
msgstr "デバイス上でのOpenPGP鍵生成"

#: ../pro/openpgp-keygen-on-device.rst:8
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey. This is done by using the command line "
"interface of GnuPG. Thus, you need to have GnuPG installed on your "
"system. The newest GnuPG version for Windows can be found `here "
"<https://www.gpg4win.org/>`_ and the newest version for MacOS can be "
"found `here <https://gpgtools.org/>`_. Users of Linux systems please "
"install GnuPG with help of the package manager."
msgstr "以下の説明では、Nitrokey上で直接OpenPGPキーを生成する方法を説明します。これは、GnuPGのコマンドラインインターフェイスを使用して行われます。そのため、お使いのシステムにGnuPGがインストールされている必要があります。Windows用の最新のGnuPGバージョンは`こちら<https://www.gpg4win.org/>`_、MacOS用の最新バージョンは`こちら<https://gpgtools.org/>`_で見つけることができます。Linuxシステムのユーザは、パッケージマネージャの助けを借りてGnuPGをインストールしてください。"

#: ../pro/openpgp-keygen-on-device.rst:12
msgid ""
"These instructions are based on GnuPG version 2.2.6 or higher. Some Linux"
" Distributions have an older version installed. In this case please "
"choose a different method as listed `here <openpgp.html>`_ or install a "
"newer version if possible."
msgstr "これらの説明は、GnuPGのバージョン2.2.6以降に基づいています。一部のLinuxディストリビューションでは、古いバージョンがインストールされている場合があります。この場合、`こちらの<openpgp.html>`_に記載されている別の方法を選択するか、可能であればより新しいバージョンをインストールしてください。"

#: ../pro/openpgp-keygen-on-device.rst:21
msgid ""
"The following descriptions explain the basic key generation on-device via"
" GnuPG’s command line interface. The default behaviour is to generate RSA"
" keys of 2048 bit size. If you want to change the key algorithm and "
"length, have a look at the next section first."
msgstr "以下の説明では、GnuPGのコマンドラインインターフェイスを使ったデバイス上での基本的な鍵生成について説明します。デフォルトの動作は、2048ビットサイズのRSA鍵を生成することです。鍵のアルゴリズムや長さを変更したい場合は、まず次のセクションを見てください。"

#: ../pro/openpgp-keygen-on-device.rst:23
msgid "Open a command line and type ``gpg2 --card-edit``."
msgstr "コマンドラインを開き、``gpg2 --card-edit``と入力します。"

#: ../pro/openpgp-keygen-on-device.rst:25 ../pro/smime.rst:29
msgid ""
"To open the Windows command line please push the Windows-key and R-key. "
"Now type ‘cmd.exe’ in the text field and hit enter. To open a Terminal on"
" macOS or GNU/Linux please use the application search (e.g. spotlight on "
"macOS)."
msgstr "Windowsのコマンドラインを開くには、WindowsキーとRキーを押してください。テキストフィールドに「cmd.exe」と入力してエンターキーを押します。macOSまたはGNU/Linuxでターミナルを開くには、アプリケーション検索を使用してください（例：macOSのspotlight）。"

#: ../pro/openpgp-keygen-on-device.rst:53
msgid ""
"Now you are in the interactive interface of GnuPG. Activate the admin "
"commands with ``admin`` and use ``generate`` afterwards to start the "
"generation of keys."
msgstr "これであなたはGnuPGの対話型インターフェースに入りました。``admin``で管理コマンドを有効にし、その後``generate``で鍵の生成を開始してください。"

#: ../pro/openpgp-keygen-on-device.rst:95
msgid ""
"**Please do not create the suggested off-card backup.** This “backup” "
"does only save the encryption key, but not the signature and "
"authentication keys. In case of a loss of the device, you will not be "
"able to restore the whole key set. So on the one hand it is no full "
"backup (use `these instructions <openpgp-keygen-backup.html>`_ instead, "
"if you need one) and on the other hand you risk that someone else can get"
" in possession of your encryption key. The advantage of generating keys "
"on-device is to make sure that keys are stored securely. Therefore, we "
"recommend to skip this half-backup."
msgstr ""
"**この「バックアップ」では、暗号化キーのみが保存され、署名キーや認証キーは保存されません。この「バックアップ」は、暗号化キーのみを保存し、署名キーや認証キーは保存しません。デバイスを紛失した場合、キーセット全体を復元することはできません。つまり、一方では完全なバックアップではなく"
" (必要であれば、`この説明書 <openpgp-keygen-"
"backup.html>`_を使用してください)、他方では、誰か他の人があなたの暗号化キーを手に入れることができるというリスクがあります。デバイス上で鍵を生成する利点は、鍵が安全に保管されていることを確認できることです。そのため、このハーフバックアップは省略することをお勧めします。"

#: ../pro/openpgp-keygen-on-device.rst:98
msgid ""
"Now you have a complete key set on your device which can be used for the "
"`various applications "
"<https://www.nitrokey.com/documentation/applications>`_ listed on our "
"site. Type ``quit`` and hit enter to exit."
msgstr "これで、当サイトに掲載されている`さまざまなアプリケーション<https://www.nitrokey.com/documentation/applications>`_に使用できる完全なキーセットがデバイスに備わったことになります。``quit``と入力してエンターキーを押すと終了します。"

#: ../pro/openpgp-keygen-on-device.rst:101
msgid "Change Key Attributes"
msgstr "Change Key Attributes"

#: ../pro/openpgp-keygen-on-device.rst:103
msgid ""
"This section is about changing the key attributes. If you want to use the"
" default values, you can proceed with the next section."
msgstr "このセクションでは、キーアトリビュートの変更について説明します。デフォルトの値を使用したい場合は、次のセクションに進んでください。"

#: ../pro/openpgp-keygen-on-device.rst:105
msgid "Open a command line and type ``gpg2 --card-edit --expert``."
msgstr "コマンドラインを開き、``gpg2 --card-edit --expert``と入力します。"

#: ../pro/openpgp-keygen-on-device.rst:131
msgid ""
"Now you are in the interactive interface of GnuPG. As you can see in the "
"“Key attributes” field above, the default value rsa2048 is set. To change"
" them, activate the admin commands with ``admin`` and use ``key-attr`` "
"afterwards to change the attributes of the keys."
msgstr ""
"これであなたはGnuPGのインタラクティブなインターフェイスに入りました。上の「鍵の属性」欄を見ると、デフォルト値のrsa2048が設定されているのがわかります。これを変更するには、``admin``で管理コマンドを起動し、その後"
"``key-attr``で鍵の属性を変更してください。"

#: ../pro/openpgp-keygen-on-device.rst:162
msgid ""
"You can choose the attribute for each key (that is, signature, encryption"
" and authentication key). Most people will use the same attributes for "
"every key. Type ``list`` to see the results (have look at the “Key "
"attributes” field, which now reads rsa4096)."
msgstr ""
"各キー（つまり、署名キー、暗号化キー、認証キー）の属性を選択することができます。ほとんどの人は、すべてのキーに同じ属性を使うでしょう。``list``"
" と入力すると、結果が表示されます（「鍵の属性」フィールドに rsa4096 と表示されているのを見てください）。"

#: ../pro/openpgp-keygen-on-device.rst:188
msgid ""
"Type ``quit`` and hit enter to exit or proceed directly with the previous"
" section to actually generate the keys with the key attributes you just "
"set."
msgstr "``quit``と入力してエンターキーを押して終了するか、そのまま前のセクションに進み、先ほど設定したキー属性を持つキーを実際に生成します。"

#: ../pro/openpgp-keygen-on-device.rst:190
msgid ""
"The following table illustrates which algorithm can be used on which "
"device."
msgstr "次の表は、どのアルゴリズムがどのデバイスで使用できるかを示しています。"

#: ../pro/openpgp-keygen-on-device.rst:213
msgid ""
"To get a simple file of your public key, you can just use ``gpg2 --armor "
"--export keyID > pubkey.asc``. Use either the fingerprint as “keyID” "
"(look at ``gpg -K`` to get it) or just use your email address as an "
"identifier."
msgstr ""
"公開鍵のシンプルなファイルを取得するには、``gpg2 --armor --export keyID > "
"pubkey.asc``を使用すればよいでしょう。フィンガープリントを \"keyID \"として使用するか（``gpg "
"-K``を参照してください）、または単に識別子として電子メールアドレスを使用してください。"

#: ../pro/openpgp-keygen-on-device.rst:215
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg2 --import pubkey.asc``"
" and then types ``gpg2 --card-status`` so that the system knows where to "
"look for this key. That’s all."
msgstr ""
"このファイルを持ち歩いたり、好きな人に送ったりすることができます。このファイルは全く秘密ではありません。他のシステムでNitrokeyを使いたい場合は、まず``gpg2"
" --import pubkey.asc``を介してこの公開鍵をインポートし、次に``gpg2 --card-"
"status``をタイプして、システムがこの鍵をどこで探すかを知るようにします。以上です。"

#: ../pro/openpgp-keygen-on-device.rst:222
msgid ""
"Another possibility is to change the URL setting on your card. Start gpg "
"–card-edit again and first set the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.) via the ``url`` command. From now"
" on you can import the key on another system by just using the ``fetch`` "
"command within the ``gpg --card-edit`` environment."
msgstr ""
"もうひとつの方法は、カードのURL設定を変更することです。gpg -card-"
"editを再度起動し、まず``url``コマンドで、鍵が置かれているURLを設定します（鍵サーバや自分のウェブページなど）。今後は、``fetch``コマンドを``gpg"
" --card-edit``環境内で使用するだけで、別のシステムで鍵をインポートすることができます。"

#: ../pro/openpgp-outlook.rst:2
msgid "OpenPGP Email Encryption with Outlook"
msgstr "OutlookでのOpenPGP電子メール暗号化"

#: ../pro/openpgp-outlook.rst:10
msgid ""
"Unfortunately, there is no solution to use OpenPGP in Outlook for macOS "
"yet."
msgstr "残念ながら、Outlook for macOSでOpenPGPを使うためのソリューションはまだありません。"

#: ../pro/linux/openvpn-easyrsa.rst:24 ../pro/openpgp-outlook.rst:14
#: ../pro/smime-outlook.rst:9 ../pro/smime-thunderbird.rst:9 ../pro/smime.rst:9
#: ../pro/windows/openpgp-csp.rst:11
msgid "Prerequisites"
msgstr "前提条件"

#: ../pro/openpgp-outlook.rst:16
msgid ""
"If you do not have PGP-Keys on your Nitrokey yet, please look at `this "
"page <openpgp.html>`_ first."
msgstr "まだNitrokeyにPGP-Keyを入れていない方は、まずこのページの` <openpgp.html>`_をご覧ください。"

#: ../pro/openpgp-outlook.rst:18
msgid ""
"You need to have GnuPG installed on your System. The newest GnuPG version"
" for Windows can be found `here <https://www.gpg4win.org>`_. You need to "
"make sure to have “GpgOL” checked during installation process (see "
"below)."
msgstr ""
"あなたのシステムにはGnuPGがインストールされている必要があります。Windows用の最新のGnuPGバージョンは、`こちら "
"<https://www.gpg4win.org>`_にあります。なお、インストールの際には、「GpgOL」にチェックを入れておく必要があります（下記参照）。"

#: ../pro/openpgp-outlook.rst:28
msgid ""
"After installing GPG4Win along with GpgOL, you will see a new icon "
"labeled “Secure” in the composing window. To encrypt and sign a mail you "
"just click on the sign like seen below."
msgstr "GPG4WinとGpgOLをインストールすると、メール作成画面に「Secure」と書かれたアイコンが表示されるようになります。メールを暗号化して署名するには、以下のように署名をクリックします。"

#: ../pro/openpgp-outlook.rst:35
msgid ""
"GnuPG will start signing and encrypting the mail as soon as you click on "
"‘send’. You are requested to choose the identity you want to sign with "
"and encrypt for."
msgstr "送信」をクリックすると、GnuPGがメールの署名と暗号化を開始します。署名と暗号化を行うIDを選択するよう求められます。"

#: ../pro/openpgp-outlook.rst:42
msgid ""
"Furthermore, you are asked for typing in the User PIN of the Nitrokey for"
" signing the mail."
msgstr "さらに、メールに署名するためのNitrokeyのユーザーPINを入力するよう求められます。"

#: ../pro/openpgp-outlook.rst:49
msgid ""
"You will be asked automatically for your User PIN if you want to read an "
"encrypted mail."
msgstr "暗号化されたメールを読みたい場合は、自動的にユーザーPINを求められます。"

#: ../pro/openpgp-thunderbird.rst:2
msgid "OpenPGP Email Encryption With Thunderbird"
msgstr "ThunderbirdでのOpenPGPによるメール暗号化"

#: ../pro/openpgp-thunderbird.rst:9
msgid "Thunderbird 78.3 and newer"
msgstr "Thunderbird 78.3以降のバージョン"

#: ../pro/openpgp-thunderbird.rst:11
msgid ""
"At the moment Thunderbird’s 78 support for the OpenPGP emails is not easy"
" to set up. See `Thunderbird’s documentation "
"<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`_ for details. "
"Here is a `comprehensive German guide "
"<https://decatec.de/it/thunderbird-78-pgp-verschluesselung-mit-dem-"
"nitrokey-storage/>`_."
msgstr ""
"現時点では、Thunderbirdの78サポートのOpenPGPメールの設定は簡単ではありません。詳細については、`Thunderbirdのドキュメント<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`_を参照してください。ここには`包括的なドイツ語のガイド<https://decatec.de/it/thunderbird-78"
"-pgp-verschluesselung-mit-dem-nitrokey-storage/>`_があります。"

#: ../pro/openpgp-thunderbird.rst:14 ../pro/smime.rst:72
msgid "Troubleshooting"
msgstr "トラブルシューティング"

#: ../pro/openpgp-thunderbird.rst:16
msgid ""
"Error message: ``The configured key ID '4BA0183FCBA844A7' cannot be found"
" on your keyring``"
msgstr ""
"エラーメッセージを表示します。``The configured key ID '4BA0183FCBA844A7' cannot be found"
" on your keyring``"

#: ../pro/openpgp-thunderbird.rst:18
msgid "Make sure that the public key is imported to the Thunderbird’s manager and"
msgstr "公開鍵がサンダーバードのマネージャーにインポートされていることを確認して"

#: ../pro/openpgp-thunderbird.rst:19
msgid ""
"The key ID does not contain any whitespace, and consists of 16 characters"
" from range 0-9 A-F"
msgstr "キーIDは空白を含まず、0-9 A-Fの範囲の16文字で構成されています。"

#: ../pro/openpgp-thunderbird.rst:20
msgid "you have GPA or Kleopatra software installed."
msgstr "GPAまたはKleopatraソフトウェアがインストールされていること。"

#: ../pro/openpgp-thunderbird.rst:22
msgid ""
"Please use Kleopatra or `GPA <openpgp-keygen-gpa.html>`_ software to "
"handle the smart card."
msgstr "スマートカードの取り扱いには、Kleopatraまたは`GPA <openpgp-keygen-gpa.html>`_ソフトウェアをご利用ください。"

#: ../pro/openpgp-thunderbird.rst:25
msgid "Thunderbird 77 and older"
msgstr "サンダーバード77以上"

#: ../pro/openpgp-thunderbird.rst:28
msgid "Installation"
msgstr "インストール"

#: ../pro/openpgp-thunderbird.rst:30
msgid ""
"Install the device driver as described `here "
"<https://www.nitrokey.com/documentation/installation>`_."
msgstr "`こちらの<https://www.nitrokey.com/documentation/installation>`_の説明に従って、デバイスドライバーをインストールします。"

#: ../pro/openpgp-thunderbird.rst:33
msgid ""
"Install `Thunderbird <https://www.thunderbird.net/en-US/>`_ and the Add-"
"on `Enigmail <https://www.enigmail.net/index.php/en/>`_."
msgstr ""
"`Thunderbird <https://www.thunderbird.net/en-US/>`_とアドオンの`Enigmail "
"<https://www.enigmail.net/index.php/en/>`_をインストールします。"

#: ../pro/openpgp-thunderbird.rst:37
msgid "Changing PINs"
msgstr "暗証番号の変更"

#: ../pro/openpgp-thunderbird.rst:39
msgid "There are two PINs for the Nitrokey:"
msgstr "Nitrokeyには2つのPINがあります。"

#: ../pro/openpgp-thunderbird.rst:41
msgid "The User PIN required for daily work"
msgstr "日常業務に必要なユーザーPIN"

#: ../pro/openpgp-thunderbird.rst:43
msgid ""
"The Admin PIN is required to change keys or other settings of the device."
" In addition, the Nitrokey can be unlocked (for example, after 3 times "
"incorrect input of the User PIN) by means of the Admin PIN."
msgstr ""
"管理者PINは、デバイスのキーやその他の設定を変更するために必要です。また、NitrokeyはAdmin "
"PINでロックを解除することができます（例：ユーザーPINを3回誤入力した場合など）。"

#: ../pro/openpgp-thunderbird.rst:47
msgid ""
"After receiving the Nitrokey, you should immediately change the User PIN "
"= “123456” and Admin PIN = “12345678”."
msgstr ""
"Nitrokeyを受け取ったら、すぐにUser PIN = \"123456 \"とAdmin PIN = \"12345678 "
"\"に変更してください。"

#: ../pro/openpgp-thunderbird.rst:51
msgid "Procedure"
msgstr "手順"

#: ../pro/openpgp-thunderbird.rst:53
msgid "Insert the Nitrokey into a USB port on your computer."
msgstr "NitrokeyをパソコンのUSBポートに挿入する。"

#: ../pro/openpgp-thunderbird.rst:55
msgid "Start Thunderbird."
msgstr "Thunderbirdを起動します。"

#: ../pro/openpgp-thunderbird.rst:57
msgid ""
"In Thunderbird, select as shown in the following picture. “OpenPGP” → "
"“Manage smart card”"
msgstr "Thunderbirdで、以下の図のように選択します。\"OpenPGP\" → \"スマートカードの管理\""

#: ../pro/openpgp-thunderbird.rst:65
msgid "In the “SmartCard Details” window, select “SmartCard → Change PIN”"
msgstr "SmartCard Details \"ウィンドウで、\"SmartCard → Change PIN \"を選択します。"

#: ../pro/openpgp-thunderbird.rst:72
msgid ""
"Select “Change PIN”. This is your User PIN you need for daily work. Enter"
" the current PIN ( “123456” for delivery) and twice your new PIN. For "
"this PIN you can use the characters: a-z A-Z 0-9 / .;;:- !? () [] {}% +. "
"The PIN should be at least 6 characters long. Click “OK”."
msgstr ""
"Change PIN \"を選択します。この暗証番号は、日常業務で必要となるユーザー暗証番号です。現在の暗証番号（配送時は "
"\"123456\"）と新しい暗証番号を2回入力してください。この暗証番号には、以下の文字が使用できます。 a-z A-Z 0-9 / .;;:-"
" !?() [] {}% +.暗証番号は6文字以上で入力してください。OK \"をクリックします。"

#: ../pro/openpgp-thunderbird.rst:83
msgid "Repeat the procedure for the Admin PIN. “SmartCard → Change PIN”"
msgstr "Admin PINの手順を繰り返します。\"スマートカード → PINの変更\""

#: ../pro/openpgp-thunderbird.rst:90
msgid ""
"Select Change Admin PIN. This is your Admin PIN that you only rarely "
"need. Enter the current PIN ( “12345678” for delivery) and the new PIN "
"twice. For this PIN, you can use the characters: a-z A-Z 0-9 / .;;:- !? "
"() [] {}% +. The PIN should be at least 8 characters long. Click “OK”."
msgstr ""
"Change Admin "
"PIN」を選択します。これはまれにしか必要としない管理者用暗証番号です。現在の暗証番号（配送時は「12345678」）と新しい暗証番号を2回入力します。このPINには、以下の文字が使用できます。"
" a-z A-Z 0-9 / .;;:- !() [] {}% +.暗証番号は8文字以上で入力してください。OK \"をクリックします。"

#: ../pro/openpgp-thunderbird.rst:101
msgid ""
"You have now changed the PINs and should continue to generate your "
"personal keys."
msgstr "これでPINの変更が完了し、引き続き個人キーを生成する必要があります。"

#: ../pro/openpgp-thunderbird.rst:104
msgid "Generation of Keys"
msgstr "キーの生成"

#: ../pro/openpgp-thunderbird.rst:106
msgid ""
"To encrypt data and e-mails, a key pair consisting of a public key and a "
"private key, must first be generated. The so-called public key is used to"
" **en**\\ crypt the data or e-mails. You can distribute this to all those"
" with whom you want to communicate securely (for example, publish it "
"publicly on your site). The so-called private key is used to **de**\\ "
"crypt the data or messages. This key should **NEVER** be made known! "
"Usually, you also do not have direct access to it (see below), since this"
" is stored securely on the Nitrokey. Use the Nitrokey to create both keys"
" using the following procedure:"
msgstr ""
"データや電子メールを暗号化するためには、まず公開鍵と秘密鍵からなる鍵ペアを生成する必要があります。公開鍵は、データや電子メールを暗号化するために使用されます。これを安全に通信したい相手に配布することができます（例えば、サイトで公開するなど）。秘密鍵は、データやメッセージを暗号化するために使用されます。この鍵は絶対に"
" **知られてはいけません** "
"。通常、秘密鍵はNitrokeyに安全に保管されているので、あなたが直接アクセスすることはありません（下記参照）。Nitrokeyを使用して、以下の手順で両方の鍵を作成してください。"

#: ../pro/openpgp-thunderbird.rst:109
msgid "Insert the Nitrokey into a USB port on your computer. StartThunderbird"
msgstr "NitrokeyをコンピュータのUSBポートに挿入する。StartThunderbird"

#: ../pro/openpgp-thunderbird.rst:112
msgid ""
"In Thunderbird, select as shown in the following picture „OpenPGP“ → "
"„Manage Smart Card“"
msgstr "Thunderbirdで、以下の図のように「OpenPGP」→「Manage Smart Card」を選択します。"

#: ../pro/openpgp-thunderbird.rst:115
msgid "In the “SmartCard details” window, select “SmartCard” → “Generate key”"
msgstr "\"SmartCard details \"ウィンドウで、\"SmartCard\"→\"Generate key \"を選択します。"

#: ../pro/openpgp-thunderbird.rst:118
msgid ""
"In the following window, select your e-mail address for which you want to"
" generate keys. Verify that the e-mail address specified in “User ID” is "
"correct. You can also specify whether a private key backup copy should be"
" stored on your computer."
msgstr "次の画面で、鍵を生成するためのメールアドレスを選択します。ユーザーID」で指定したメールアドレスが正しいことを確認してください。また、秘密鍵のバックアップコピーをパソコンに保存するかどうかも指定できます。"

#: ../pro/openpgp-thunderbird.rst:128
msgid ""
"If you do not create a backup copy, you have no chance to get your "
"encrypted data if the Nitrokey is lost or damaged!"
msgstr "バックアップコピーを作成しないと、Nitrokeyを紛失したり破損したりした場合に、暗号化されたデータを入手するチャンスがありません"

#: ../pro/openpgp-thunderbird.rst:136
msgid ""
"It is recommended to store this safety device. Select “Save key copy of "
"the key outside the Smard Card”. Then enter your personal password for "
"the backup copy under “Passphrase”. This password should not be less than"
" 8 characters, and should contain both uppercase and lowercase letters "
"and numbers. You can also use a long sentence, but avoid known prose or "
"lyric. Also, no name or known term should be used."
msgstr ""
"この安全装置を保存することをお勧めします。Smard Cardの外にキーのコピーを保存する \"を選択します。次に、\"Passphrase "
"\"の下に、バックアップ・コピー用の個人的なパスワードを入力します。このパスワードは、8文字以上で、大文字と小文字、数字を含む必要があります。長い文章を使うこともできますが、既知の散文や歌詞は避けてください。また、名前や既知の用語も使用してはいけません。"

#: ../pro/openpgp-thunderbird.rst:144
msgid ""
"**Allowed characters**: a-z A-Z 0-9 /.,;:-!?( )%+ (no umlauts ä,ü,ö,Ä,Ü,Ö"
" or ß)"
msgstr "**許可される文字**: a-z A-Z 0-9 /.,;:-!?( )%+ (ウムラウト ä,ü,ö,Ä,Ü,Ö,ß は不可)"

#: ../pro/openpgp-thunderbird.rst:146
msgid ""
"**Poor Password**: qwerty123, ILoveSusi3, Password, If you can dream it, "
"you can do it."
msgstr ""
"**Poor Password**: qwerty123, ILoveSusi3, Password, If you can dream it, "
"you can do it."

#: ../pro/openpgp-thunderbird.rst:148
#, python-format
msgid ""
"**Strong Password**: g(Ak?2Pn7Yn or Ki.stg2bLqzp%d or A dog with greeen "
"Earz and fife legs (spelling errors increase security)"
msgstr ""
"**強力なパスワード**: g(Ak?2Pn7Yn or Ki.stg2bLqzp%d or A dog with greeen Earz and"
" fife legs (spelling error increases security)"

#: ../pro/openpgp-thunderbird.rst:150
msgid ""
"You do **not** need this password for daily work. It is only necessary "
"for the restoration of the secret key, e.g. if you have lost the "
"Nitrokey. Therefore, keep the password in a safe place."
msgstr ""
"このパスワードは日常業務では **必要ありません** "
"。このパスワードは、Nitrokeyを紛失した場合など、秘密鍵を復元するためにのみ必要です。したがって、パスワードは安全な場所に保管してください。"

#: ../pro/openpgp-thunderbird.rst:152
msgid ""
"You can also specify whether and when the key should be automatically "
"invalid. This means, from this point onwards, no more e-mails can be "
"encrypted with this key and you have to create a new key pair."
msgstr "また、この鍵を自動的に無効にするかどうか、いつ無効にするかを指定することもできます。これは、この時点から、この鍵で電子メールを暗号化することができなくなり、新しいキー・ペアを作成しなければならないことを意味しています。"

#: ../pro/openpgp-thunderbird.rst:154
msgid "Finally, click on “Generate key pair”."
msgstr "最後に「Generate key pair」をクリックします。"

#: ../pro/openpgp-thunderbird.rst:161
msgid "You are now asked if the key should be generated. Confirm with “Yes”."
msgstr "キーを生成するかどうかを聞かれます。Yes \"を選択してください。"

#: ../pro/openpgp-thunderbird.rst:168
msgid ""
"In order for the program to write your keys to the stick, you must enter "
"the admin PIN and the user PIN (changed above)."
msgstr "プログラムがあなたのキーをスティックに書き込むためには、管理者用暗証番号とユーザー用暗証番号（上記で変更）を入力する必要があります。"

#: ../pro/openpgp-thunderbird.rst:176
msgid ""
"The key generation can take a few minutes. Do not terminate the program "
"prematurely!"
msgstr "鍵の生成には数分かかることがあります。早期にプログラムを終了しないでください。"

#: ../pro/openpgp-thunderbird.rst:178
msgid ""
"When the key generation is complete, you receive the following message. A"
" certificate is now created that allows you to invalidate your key in an "
"emergency. This certificate is automatically saved with your private key."
" This should be printed out or backed up on at least one other external "
"medium so that you can revoke the validity of the keys if your keys and "
"backups are lost. Click “Yes”"
msgstr ""
"鍵の生成が完了すると、次のようなメッセージが表示されます。緊急時に鍵を無効にすることができる証明書が作成されました。この証明書は、あなたの秘密鍵とともに自動的に保存されます。これは、鍵やバックアップを紛失した場合に、鍵の有効性を無効にできるように、プリントアウトするか、少なくとも他の外部媒体にバックアップしてください。\"はい"
" \"をクリック"

#: ../pro/openpgp-thunderbird.rst:185
msgid ""
"You can now select the directory in which the backup copy is stored. This"
" copy is encrypted with your password entered above. This means that no "
"one can read or use the keys without your password. Do not give your "
"password to anyone. This file with the name of your e-mail address and "
"the suffix “.asc” should be backed up on another medium. After selecting "
"the directory, click “Save”."
msgstr "ここで、バックアップコピーを保存するディレクトリを選択できます。このコピーは、上記で入力したパスワードで暗号化されます。つまり、あなたのパスワードなしでは、誰もキーを読み取ったり使用したりすることはできません。パスワードは誰にも教えないでください。あなたのメールアドレスの名前と接尾辞「.asc」が付いたこのファイルは、別の媒体にバックアップしてください。ディレクトリを選択後、「保存」をクリックします。"

#: ../pro/openpgp-thunderbird.rst:192
msgid "Here you must again specify your user PIN or passphrase. Then click “OK”"
msgstr "ここで再度、ユーザーPINまたはパスフレーズを指定する必要があります。そして、\"OK \"をクリックします。"

#: ../pro/openpgp-thunderbird.rst:200
msgid ""
"You will now see the message that the certificate was created and saved. "
"Click “OK”"
msgstr "これで、証明書が作成され、保存されたというメッセージが表示されます。OK \"をクリックします。"

#: ../pro/openpgp-thunderbird.rst:208
msgid ""
"Key generation is now complete. You can now exit the program (File - "
"Close)."
msgstr "キーの生成が完了しました。これでプログラムを終了することができます（ファイル - 閉じる）。"

#: ../pro/openpgp-thunderbird.rst:216
msgid ""
"Your Nitrokey is personalized and ready to use. **Have fun with the "
"secure email encryption!**"
msgstr "あなたのNitrokeyはパーソナライズされ、すぐに使用できます。**安全なメールの暗号化で楽しみましょう！***。"

#: ../pro/linux/openvpn-easyrsa.rst:2
msgid "OpenVPN Configuration with Easy-RSA"
msgstr "Easy-RSAによるOpenVPNの設定"

#: ../pro/linux/openvpn-easyrsa.rst:11
msgid ""
"This guide is work-in-progress, and will be updated accordinlgy. Please "
"take this status into consideration."
msgstr "このガイドは進行中のものであり、随時更新されます。この点をご理解の上、ご利用ください。"

#: ../pro/linux/openvpn-easyrsa.rst:13
msgid ""
"This guide shows how to configure OpenVPN clients to login using a "
"`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`_ or a `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/de_DE/shop/product/nitrokey-storage-2-56>`_. "
"For software key management we will be using `Easy-RSA "
"<https://github.com/OpenVPN/easy-rsa>`_, a utility that has been evolving"
" alongside OpenVPN."
msgstr ""
"このガイドでは、`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`_または`Nitrokey Storage 2 "
"<https://shop.nitrokey.com/de_DE/shop/product/nitrokey-"
"storage-2-56>`_を使用してログインするようにOpenVPNクライアントを設定する方法を説明します。ソフトウェアの鍵管理には、OpenVPNとともに進化してきたユーティリティーである"
"`Easy-RSA <https://github.com/OpenVPN/easy-rsa>`_を使用します。"

#: ../pro/linux/openvpn-easyrsa.rst:17
msgid ""
"To sign the certificates, we will use a `Nitrokey HSM 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`_ set "
"up as `Certificate Authority <certificate-authority.html#creating-the-"
"intermediate-certificate-authority>`_, however this guide does not cover "
"the set up of the CA itself (it is clear and `well documented here "
"<certificate-authority.html#sign-a-server-certificate>`_)."
msgstr ""
"証明書に署名するために、`Nitrokey HSM 2 <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`_を`認証局 <certificate-authority.html#creating-the-"
"intermediate-certificate-"
"authority>`_としてセットアップして使用します。しかし、このガイドでは、CA自体のセットアップはカバーしていません（それは"
"、<certificate-authority.html#sign-a-server-"
"certificate>`_で明確に、そして`よく説明されています）。"

#: ../pro/linux/openvpn-easyrsa.rst:20
msgid ""
"We will use Easy-RSA, because it seems to provide some flexibility, and "
"allows key management via external PKIs. We will use it on the server to "
"issue the signing request, and repeat the same process on the client. The"
" Certificate Signing Requests will be signed by the CA on the Nitorkey "
"HSM, and re-transmitted to the server and the client."
msgstr ""
"ここでは、柔軟性があり、外部PKIによる鍵管理が可能なEasy-"
"RSAを使用します。これをサーバで使用して署名要求を発行し、クライアントでも同じプロセスを繰り返します。証明書署名要求は、Nitorkey "
"HSMのCAによって署名され、サーバとクライアントに再送信されます。"

#: ../pro/linux/openvpn-easyrsa.rst:26
msgid ""
"In the following documentation we will require 3 different machines as "
"following:"
msgstr "以下の資料では、以下の3台のマシンを必要とします。"

#: ../pro/linux/openvpn-easyrsa.rst:28
msgid "OpenVPN server (v. 2.5) on Debian 10 (EC2 virtual machine - AWS)"
msgstr "Debian 10上のOpenVPNサーバ（v.2.5）（EC2仮想マシン-AWS）"

#: ../pro/linux/openvpn-easyrsa.rst:30
msgid "OpenVPN client (v. 2.4.9) on Fedora 30 (local machine)"
msgstr "Fedora 30のOpenVPNクライアント（v.2.4.9）（ローカルマシン）"

#: ../pro/linux/openvpn-easyrsa.rst:32
msgid ""
"The Certificate Authority will be accessible from a standalone machine "
"with Fedora 30 (local machine)"
msgstr "認証局は、Fedora 30 を搭載したスタンドアロンのマシン（ローカルマシン）からアクセスします。"

#: ../pro/linux/openvpn-easyrsa.rst:35
msgid ""
"To interact with the devices we will require `OpenSC 0.20 "
"<https://github.com/OpenSC/OpenSC/wiki>`_ installed on the client and CA "
"machine (the local machines). You can follow the instructions to set it "
"up in `this link (*Unix) <https://github.com/OpenSC/OpenSC/wiki"
"/Compiling-and-Installing-on-Unix-flavors>`_."
msgstr ""
"デバイスと対話するためには、`OpenSC 0.20 "
"<https://github.com/OpenSC/OpenSC/wiki>`_をクライアントとCAマシン（ローカルマシン）にインストールする必要があります。`このリンク(*Unix)<https://github.com/OpenSC/OpenSC/wiki"
"/Compiling-and-Installing-on-Unix-flavors>`_の指示に従ってセットアップすることができます。"

#: ../pro/linux/openvpn-easyrsa.rst:38
msgid "To download the dependencies on Fedora machines we can this instruction:"
msgstr "Fedoraのマシンで依存ファイルをダウンロードするには、次の手順を実行します。"

#: ../pro/linux/openvpn-easyrsa.rst:44
msgid ""
"For Debian Linux, more recent OpenSC packages are available `here "
"<https://github.com/Nitrokey/opensc-build>`_."
msgstr ""
"Debian Linuxでは、より新しいOpenSCのパッケージが`こちら<https://github.com/Nitrokey/opensc-"
"build>`_に用意されています。"

#: ../pro/linux/openvpn-easyrsa.rst:46
msgid "We will use the following Nitrokeys for physical key management:"
msgstr "物理的な鍵の管理には、以下のNitrokeysを使用します。"

#: ../pro/linux/openvpn-easyrsa.rst:48
msgid ""
"An authentication key using the `Nitrokey Pro 2 (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_Pro_factsheet.pdf>`_"
msgstr ""
"`Nitrokey Pro 2 "
"(pdf)<https://www.nitrokey.com/files/doc/Nitrokey_Pro_factsheet.pdf>`_を使用した認証キーです。"

#: ../pro/linux/openvpn-easyrsa.rst:51
msgid ""
"A Certificate Authority (CA) using the `Nitrokey HSM 2 (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_HSM_factsheet.pdf>`_"
msgstr ""
"`Nitrokey HSM 2 "
"(pdf)<https://www.nitrokey.com/files/doc/Nitrokey_HSM_factsheet.pdf>`_を使用する認証局（CA）。"

#: ../pro/linux/openvpn-easyrsa.rst:54
msgid ""
"As a reminder, to build a Certificate Authority on Nitrokey HSM 2, you "
"may follow the instructions available `in the documentation <certificate-"
"authority.html#sign-a-server-certificate>`_."
msgstr ""
"なお、Nitrokey HSM 2で認証局を構築するには、ドキュメント`の<certificate-authority.html#sign-a"
"-server-certificate>`_に記載されている手順に従うことができます。"

#: ../pro/linux/openvpn-easyrsa.rst:56
msgid ""
"Alternatively you may set up your own CA on a `on a separate machine "
"<https://www.digitalocean.com/community/tutorials/how-to-set-up-and-"
"configure-a-certificate-authority-ca-on-ubuntu-20-04>`_, or use the "
"OpenVPN tutorial which also relies on `Easy-RSA <https://openvpn.net"
"/community-resources/setting-up-your-own-certificate-authority-ca/>`_. "
"The last 2 options rely on software solutions for key management."
msgstr ""
"あるいは、`別のマシン上で独自のCAをセットアップするか、<https://www.digitalocean.com/community/tutorials"
"/how-to-set-up-and-configure-a-certificate-authority-ca-on-"
"ubuntu-20-04>`_に依存するOpenVPNチュートリアルを使用するか、`Easy-RSA <https://openvpn.net"
"/community-resources/setting-up-your-own-certificate-authority-"
"ca/>`_に依存することもできます。最後の2つのオプションは、鍵管理のためのソフトウェアソリューションに依存しています。"

#: ../pro/linux/openvpn-easyrsa.rst:61
msgid "Server side"
msgstr "サーバー側"

#: ../pro/linux/openvpn-easyrsa.rst:64
msgid "1. Install OpenVPN"
msgstr "1.OpenVPNのインストール"

#: ../pro/linux/openvpn-easyrsa.rst:66
msgid "First we need to enable IP Forwarding by editing ``/etc/sysctl.conf`` file"
msgstr "まず、``/etc/sysctl.conf``ファイルを編集して、IPフォワーディングを有効にする必要があります。"

#: ../pro/linux/openvpn-easyrsa.rst:72
msgid "Uncomment or edit accordingly the following line"
msgstr "次の行のコメントを外すか、適宜編集してください。"

#: ../pro/linux/openvpn-easyrsa.rst:78
msgid "Close after saving it, and enter this command"
msgstr "保存した後に閉じて、次のコマンドを入力します。"

#: ../pro/linux/openvpn-easyrsa.rst:84
msgid ""
"Once IP forwarding is done, we will need to download the latest release "
"of OpenvPN for our Debian 10 server, according to `these instructions "
"<https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos>`_:"
msgstr ""
"IPフォワーディングが完了したら、`の指示に従って、Debian "
"10サーバ用にOpenvPNの最新リリースをダウンロードする必要があります<https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos>`_。"

#: ../pro/linux/openvpn-easyrsa.rst:86
msgid "Change to root and download the GPG key that signed the package"
msgstr "rootに変更し、パッケージに署名したGPGキーをダウンロードする"

#: ../pro/linux/openvpn-easyrsa.rst:93
msgid "Add the URL of the adequate OpenVPN packages to the ``sources.list`` file"
msgstr "適切なOpenVPNパッケージのURLを``sources.list``ファイルに追加します。"

#: ../pro/linux/openvpn-easyrsa.rst:100
msgid ""
"We downloaded OpenVPN 2.5 as “password prompt” requires at least OpenVPN "
"`version 2.4.8 <https://community.openvpn.net/openvpn/ticket/1215>`_ to "
"login."
msgstr ""
"パスワードプロンプト」では、ログインに最低でもOpenVPN `バージョン2.4.8 "
"<https://community.openvpn.net/openvpn/ticket/1215>`_が必要なので、OpenVPN "
"2.5をダウンロードしました。"

#: ../pro/linux/openvpn-easyrsa.rst:103
msgid "Next we download OpenVPN"
msgstr "次にOpenVPNをダウンロードします。"

#: ../pro/linux/openvpn-easyrsa.rst:109
msgid ""
"If you want to check the version, it possible by calling ``--version`` "
"and print the following:"
msgstr "バージョンを確認したい場合は、``--version``を呼び出して、次のように表示します。"

#: ../pro/linux/openvpn-easyrsa.rst:122
msgid "2. Install Easy-RSA"
msgstr "2.Easy-RSAのインストール"

#: ../pro/linux/openvpn-easyrsa.rst:124
msgid ""
"To build the PKI, we will download the latest version of Easy-RSA on the "
"server and client machines. To get the latest release, go to the "
"`Releases page on the official EasyRSA GitHub project "
"<https://github.com/OpenVPN/easy-rsa/releases>`_, copy the download link "
"for the file ending in ``.tgz``, and then paste it into the following "
"command:"
msgstr ""
"PKIを構築するために、サーバとクライアントのマシンにEasy-"
"RSAの最新バージョンをダウンロードします。最新のリリースを入手するには、EasyRSAの公式GitHubプロジェクトの`Releasesページ<https://github.com/OpenVPN"
"/easy-"
"rsa/releases>`_にアクセスし、``.tgz`で終わるファイルのダウンロードリンクをコピーして、以下のコマンドに貼り付けます。"

#: ../pro/linux/openvpn-easyrsa.rst:126
msgid "Download the latest release"
msgstr "最新版のダウンロード"

#: ../pro/linux/openvpn-easyrsa.rst:133
msgid "Extract the tarball"
msgstr "タールボールの解凍"

#: ../pro/linux/openvpn-easyrsa.rst:142
msgid "3. Create a PKI for OpenVPN server"
msgstr "3.OpenVPN サーバの PKI を作成する"

#: ../pro/linux/openvpn-easyrsa.rst:144
msgid ""
"Before you can create your OpenVPN server’s private key and certificate, "
"you need to create a local Public Key Infrastructure directory on your "
"OpenVPN server. You will use this directory to manage the server and "
"clients’ certificate requests, instead of making them directly on your CA"
" server."
msgstr ""
"OpenVPNサーバの秘密鍵と証明書を作成する前に、OpenVPNサーバにローカルのPublic Key "
"Infrastructureディレクトリを作成する必要があります。このディレクトリは、サーバやクライアントの証明書要求を、CAサーバに直接行うのではなく、管理するために使用します。"

#: ../pro/linux/openvpn-easyrsa.rst:146
msgid ""
"To build a PKI directory on your OpenVPN server, you’ll need to populate "
"a file called ``vars`` with some default values."
msgstr "OpenVPNサーバにPKIディレクトリを構築するには、``vars``というファイルに、いくつかのデフォルト値を入力する必要があります。"

#: ../pro/linux/openvpn-easyrsa.rst:148
msgid "Create a ``vars`` file"
msgstr "``vars``ファイルの作成"

#: ../pro/linux/openvpn-easyrsa.rst:156
msgid "Once the file is opened, paste in the following two lines"
msgstr "ファイルを開いたら、次の2行をペーストします。"

#: ../pro/linux/openvpn-easyrsa.rst:163
msgid ""
"These are the only two lines that you need in this ``vars`` file on your "
"OpenVPN server since it will not be used as a Certificate Authority. They"
" will ensure that your private keys and certificate requests are "
"configured to use Elliptic Curve Cryptography (ECC) to generate keys, and"
" secure signatures for your clients and OpenVPN server."
msgstr "OpenVPNサーバのこの``vars``ファイルで必要なのは、認証局として使用しないので、この2行だけです。これにより、秘密鍵や証明書要求が楕円曲線暗号（ECC）を使用して鍵を生成するように設定され、クライアントやOpenVPNサーバの署名が安全に行われるようになります。"

#: ../pro/linux/openvpn-easyrsa.rst:165
msgid ""
"In regards to the choice of the cryptographic algorithms, I follow the "
"model in `this tutorial <https://www.digitalocean.com/community/tutorials"
"/how-to-set-up-and-configure-an-openvpn-server-on-centos-8>`_, and you "
"can customize these according to your specific needs."
msgstr ""
"暗号アルゴリズムの選択に関しては、`このチュートリアルの<https://www.digitalocean.com/community/tutorials"
"/how-to-set-up-and-configure-an-openvpn-server-on-"
"centos-8>`_のモデルに従っていますが、あなたの特定のニーズに応じてこれらをカスタマイズすることができます。"

#: ../pro/linux/openvpn-easyrsa.rst:167
msgid "Initialize the PKI"
msgstr "PKIの初期化"

#: ../pro/linux/openvpn-easyrsa.rst:169
msgid ""
"Once you have populated the ``vars`` file you can proceed with creating "
"the PKI directory. To do so, run the easyrsa script with the init-pki "
"option:"
msgstr ""
"``vars``のファイルに入力したら、PKIディレクトリの作成に進むことができます。これを行うには、easyrsa スクリプトを init-"
"pki オプション付きで実行します。"

#: ../pro/linux/openvpn-easyrsa.rst:175
msgid ""
"After you’ve initialized your PKI on the OpenVPN server, you are ready to"
" move on to the next step, which is creating an OpenVPN server "
"certificate request and private key."
msgstr "OpenVPNサーバのPKIを初期化したら、次のステップである、OpenVPNサーバの証明書要求と秘密鍵の作成に移ることができます。"

#: ../pro/linux/openvpn-easyrsa.rst:178
msgid "4. Create ``server.req`` and ``server.key``"
msgstr "4.``server.req``と``server.key``を作成。"

#: ../pro/linux/openvpn-easyrsa.rst:180
msgid ""
"Now that your OpenVPN server has all the prerequisites installed, the "
"next step is to generate a key pair composed of a private key (to keep "
"secret), and a Certificate Signing Request (``.csr``) on your OpenVPN "
"server."
msgstr "OpenVPNサーバーにすべての前提条件がインストールされたので、次のステップでは、秘密鍵（秘密にしておきたい）と、OpenVPNサーバー上の証明書署名要求（``.csr``）からなる鍵ペアを生成します。"

#: ../pro/linux/openvpn-easyrsa.rst:182
msgid ""
"In general terms, on systems where we generate a key and request, these "
"files are left unencrypted by using the ``nopass`` argument, since "
"servers usually need to start up without any password input. This "
"generates an *unencrypted key*, so mind *protect its access and file "
"permissions* carefully."
msgstr "一般論として、鍵とリクエストを生成するシステムでは、通常サーバーはパスワードの入力なしで起動する必要があるため、これらのファイルは``nopass``の引数を使って暗号化されないままにしておきます。これは、*暗号化されていないキー*を生成するので、そのアクセスとファイルのパーミッション*を注意深く保護することを心掛けてください。"

#: ../pro/linux/openvpn-easyrsa.rst:186
msgid "Configuration notes from OpenVPN:"
msgstr "OpenVPNの設定メモです。"

#: ../pro/linux/openvpn-easyrsa.rst:188
msgid ""
"The server, and each client, must have their own cert and key file. The "
"server and all clients will use the same CA file."
msgstr "サーバーと各クライアントは、それぞれの証明書と鍵ファイルを持つ必要があります。サーバーとすべてのクライアントは、同じCAファイルを使用します。"

#: ../pro/linux/openvpn-easyrsa.rst:190
msgid "Server certificate should have the following:"
msgstr "サーバー証明書は以下のものが必要です。"

#: ../pro/linux/openvpn-easyrsa.rst:192
msgid "``keyUsage:  digitalSignature, keyEncipherment``"
msgstr "``keyUsage:  digitalSignature, keyEncipherment``"

#: ../pro/linux/openvpn-easyrsa.rst:194
msgid "``extendedKeyUsage: serverAuth``"
msgstr "``extendedKeyUsage: serverAuth``"

#: ../pro/linux/openvpn-easyrsa.rst:196
msgid "Create the signing request for the server"
msgstr "サーバーへの署名要求の作成"

#: ../pro/linux/openvpn-easyrsa.rst:198
msgid ""
"Navigate to the ``~/easyrsa`` directory on your OpenVPN Server as your "
"non-root user, and enter the following commands:"
msgstr "非rootユーザーでOpenVPNサーバーの``~/easyrsa``ディレクトリに移動し、以下のコマンドを入力します。"

#: ../pro/linux/openvpn-easyrsa.rst:205
msgid ""
"This will create a private key for the server and a certificate request "
"file called ``server.req``."
msgstr "これにより、サーバーの秘密鍵と、``server.req``という証明書要求ファイルが作成されます。"

#: ../pro/linux/openvpn-easyrsa.rst:207
msgid ""
"Once you have a signed certificate, you’ll transfer it back to the "
"OpenVPN server."
msgstr "署名済みの証明書ができたら、それをOpenVPNサーバーに転送します。"

#: ../pro/linux/openvpn-easyrsa.rst:209
msgid "Copy the key to the OpenVPN server directory"
msgstr "鍵をOpenVPNサーバのディレクトリにコピーする"

#: ../pro/linux/openvpn-easyrsa.rst:215
msgid ""
"After completing these steps, you have successfully created a private key"
" for your OpenVPN server. You have also generated a Certificate Signing "
"Request for the OpenVPN server."
msgstr ""
"これらの手順を完了すると、OpenVPN サーバーの秘密鍵の作成が完了します。また、OpenVPN サーバー用の Certificate "
"Signing Request も作成されています。"

#: ../pro/linux/openvpn-easyrsa.rst:219
msgid "File extensions for certificate signing requests"
msgstr "証明書署名要求のファイル拡張子"

#: ../pro/linux/openvpn-easyrsa.rst:221
msgid ""
"The file extension that is adopted by the CA and HSM tutorial indicates "
"the creation of a ``.csr`` file, however Easy-RSA creates certificate "
"signing requests with a ``.req`` extension."
msgstr ""
"CAやHSMのチュートリアルで採用されているファイル拡張子は、``.csr``のファイルを作成することを示していますが、Easy-"
"RSAでは``.req``の拡張子で証明書署名要求を作成します。"

#: ../pro/linux/openvpn-easyrsa.rst:225
msgid ""
"We will use interchangeably both extensions, while making sure that we "
"transfer the right files to the Certificate Authority, and generate a "
"final certificate with a ``.crt`` extension."
msgstr "ここでは、両方の拡張子を使い分けながら、正しいファイルを認証局に転送し、``.crt``の拡張子を持つ最終的な証明書を生成することを確認します。"

#: ../pro/linux/openvpn-easyrsa.rst:229
msgid ""
"In the next section of this guide, we will sign a ``.req`` file with our "
"CA on deployed on the HSM 2 device. For this purpose, I will use a "
"dedicated machine to sign the requests."
msgstr ""
"このガイドの次のセクションでは、``.req``のファイルに、HSM "
"2デバイス上にデプロイされたCAで署名します。この目的のために、専用のマシンを使ってリクエストに署名することにします。"

#: ../pro/linux/openvpn-easyrsa.rst:232
msgid "5. Sign and retrieve ``server.crt``"
msgstr "5.署名・回収 ``server.crt``"

#: ../pro/linux/openvpn-easyrsa.rst:234
msgid ""
"The following instructions require the transfer of the ``server.req`` (or"
" ``server.csr``) file to the CA system."
msgstr "以下の手順では、``server.req``（または``server.csr``）のファイルをCAシステムに転送する必要があります。"

#: ../pro/linux/openvpn-easyrsa.rst:237
msgid ""
"The transfer itself is not security sensitive, though it is wise to "
"verify if the received file matches the sender’s copy, if the transport "
"is untrusted."
msgstr "転送自体にはセキュリティ上の問題はありませんが、転送が信頼できない場合には、受信したファイルが送信者のコピーと一致するかどうかを確認するのが賢明です。"

#: ../pro/linux/openvpn-easyrsa.rst:239
msgid ""
"In order to go through these steps, I will extensively rely on `these "
"instructions <certificate-authority.html#creating-the-intermediate-"
"certificate-authority>`_, to sign the certificate signing requests, once "
"we generated them with Easy-RSA."
msgstr ""
"これらの手順を踏むために、Easy-RSAで証明書署名要求を生成した後に署名するために、`この説明書<certificate-"
"authority.html#creating-the-intermediate-certificate-"
"authority>`_に大きく依存することになります。"

#: ../pro/linux/openvpn-easyrsa.rst:242
msgid "5.1. Sign the ``server.req`` file"
msgstr "5.1.``server.req``のファイルに署名します。"

#: ../pro/linux/openvpn-easyrsa.rst:244
msgid ""
"On the local machine dedicated to access the HSM, we will use the tools "
"provided by Opensc 0.20 in order to sign the ``.req`` file, and send it "
"back to the OpenVPN server. We assume we have transferred the file from "
"the server machine to the CA machine."
msgstr ""
"HSMにアクセスする専用のローカルマシンで、Opensc "
"0.20が提供するツールを使用して、``.req``のファイルに署名し、OpenVPNサーバに送り返します。ここでは、サーバーマシンからCAマシンにファイルを転送したと仮定します。"

#: ../pro/linux/openvpn-easyrsa.rst:246
msgid ""
"First we start by plugging the HSM Nitrokey, and enter this instruction "
"for listing the keys available."
msgstr "まず、HSM Nitrokeyを接続して、使用可能なキーをリストアップするために、この指示を入力します。"

#: ../pro/linux/openvpn-easyrsa.rst:248
msgid "Query the list of available devices"
msgstr "利用可能なデバイスのリストを問い合わせる"

#: ../pro/linux/openvpn-easyrsa.rst:256
msgid "The key’s URI should be in this format:"
msgstr "キーのURIはこのフォーマットでなければなりません。"

#: ../pro/linux/openvpn-easyrsa.rst:262
msgid "Create ``openvpn/`` directory under ``certificate-authority/``"
msgstr "``openvpn/``のディレクトリを``certificate-authority/``の下に作成します。"

#: ../pro/linux/openvpn-easyrsa.rst:269
msgid "Sign the ``server.req``"
msgstr "サインは``server.req``。"

#: ../pro/linux/openvpn-easyrsa.rst:276
msgid "5.2. Retrieve the ``server.crt`` file to the server machine"
msgstr "5.2.``server.crt``のファイルをサーバー・マシンに取得する。"

#: ../pro/linux/openvpn-easyrsa.rst:278
msgid "Transfer the signed certificates to the server"
msgstr "署名済みの証明書をサーバーに転送する"

#: ../pro/linux/openvpn-easyrsa.rst:280
msgid ""
"From the CA machine, copy the files ``server.crt`` and ``chain.crt`` to "
"the OpenVPN server. In this example we will use the ``scp`` command as "
"following:"
msgstr "CAのマシンから、``server.crt``と``chain.crt``のファイルをOpenVPNサーバにコピーします。この例では、``scp``のコマンドを以下のように使用します。"

#: ../pro/linux/openvpn-easyrsa.rst:286
msgid "Place the certificates on the server’s directory"
msgstr "サーバーのディレクトリに証明書を置く"

#: ../pro/linux/openvpn-easyrsa.rst:294
msgid "CA Certificate and ``chain.crt``"
msgstr "CA証明書と``chain.crt``"

#: ../pro/linux/openvpn-easyrsa.rst:296
msgid ""
"In the above, the CA returns the signed sever certificate, and includes "
"the CA certificate ``CA.crt`` which is the ``chain.crt`` file. This can "
"be done over an insecure channel, though the client is encouraged to "
"confirm if the received ``chain.crt`` is valid, if the transport is "
"untrusted."
msgstr ""
"上の例では、CAは署名された sever "
"証明書を返し、``CA.crt``であるCA証明書``chain.crt``のファイルを含めます。これは安全でないチャンネルで行うことができますが、トランスポートが信頼されていない場合、クライアントは受信した``chain.crt``が有効であるかどうかを確認することが推奨されます。"

#: ../pro/linux/openvpn-easyrsa.rst:302
msgid ""
"It is possible to rename the file ``chain.crt`` file to ``CA.crt`` on the"
" target machine, however we will use ``chain.crt`` in the next "
"instructions."
msgstr "ターゲット・マシンでは、``chain.crt``のファイルを``CA.crt``にリネームすることが可能です。しかし、次の説明では、``chain.crt``を使用します。"

#: ../pro/linux/openvpn-easyrsa.rst:307
msgid "6. Configure the OpenVPN server"
msgstr "6.OpenVPNサーバーの設定"

#: ../pro/linux/openvpn-easyrsa.rst:309
msgid ""
"A connection that uses TLS requires multiple `certificates and keys for "
"authentication <https://wiki.teltonika-"
"networks.com/view/OpenVPN_configuration_examples>`_. Now that we issued "
"and signed those, we can place them in the right directories. The "
"breakdown of the certificates and keys that must be located at the root "
"directory are the following:"
msgstr ""
"TLSを使用する接続では、認証のために複数の`証明書と鍵が必要になります<https://wiki.teltonika-"
"networks.com/view/OpenVPN_configuration_examples>`_。これらの証明書を発行して署名したので、正しいディレクトリに配置します。ルートディレクトリに配置しなければならない証明書と鍵の内訳は以下の通りです。"

#: ../pro/linux/openvpn-easyrsa.rst:320
msgid ""
"On your OpenVPN server, now you can create the configuration file "
"``server.conf`` with your favorite text editor. The file can be "
"configured according to your needs, while we make sure to change the "
"server certificate and key sections according the names you chose for the"
" your the files we signed:"
msgstr "OpenVPNサーバーでは、お気に入りのテキストエディタで設定ファイル``server.conf``を作成します。このファイルは必要に応じて設定することができますが、署名したファイルに選択した名前に従って、サーバー証明書と鍵のセクションを変更するようにしています。"

#: ../pro/linux/openvpn-easyrsa.rst:329
msgid "Here is the configuration file we can use for testing these instructions:"
msgstr "以下は、これらの手順をテストするために使用できる設定ファイルです。"

#: ../pro/linux/openvpn-easyrsa.rst:359
msgid "To test if the configuration functions properly, we can use this command:"
msgstr "この設定が正しく機能するかどうかをテストするには、このコマンドを使用します。"

#: ../pro/linux/openvpn-easyrsa.rst:366
msgid "7. Start the OpenVPN service on the server"
msgstr "7.サーバーでOpenVPNサービスを開始する"

#: ../pro/linux/openvpn-easyrsa.rst:368
msgid ""
"Enable the OpenVPN service by adding it to systemctl, and start it using "
"these commands:"
msgstr "OpenVPNサービスをsystemctlに追加して有効にし、以下のコマンドで起動します。"

#: ../pro/linux/openvpn-easyrsa.rst:375
msgid "To Double check if the OpenVPN service is active use this command:"
msgstr "OpenVPNサービスがアクティブかどうかをダブルチェックするには、このコマンドを使います。"

#: ../pro/linux/openvpn-easyrsa.rst:381
msgid "The OpenVPN should be running at this point."
msgstr "この時点でOpenVPNが起動しているはずです。"

#: ../pro/linux/openvpn-easyrsa.rst:386
msgid "Client side configuration"
msgstr "クライアント側の設定"

#: ../pro/linux/openvpn-easyrsa.rst:400
msgid "1. Install OpenVPN and Easy-RSA"
msgstr "1.OpenVPNとEasy-RSAのインストール"

#: ../pro/linux/openvpn-easyrsa.rst:402
msgid "Install the software"
msgstr "ソフトウェアのインストール"

#: ../pro/linux/openvpn-easyrsa.rst:404
msgid ""
"We can use directly ``dnf install`` to install OpenVPN 2.4.9 and Easy-RSA"
" 3.0.7"
msgstr "OpenVPN 2.4.9とEasy-RSA 3.0.7をインストールするには、直接``dnf install``を使うことができます。"

#: ../pro/linux/openvpn-easyrsa.rst:410
msgid "Then we create as non-root a directory for Easy RSA called ``Easy-RSA``"
msgstr "そして、非rootで``Easy-RSA``というEasy RSA用のディレクトリを作成します。"

#: ../pro/linux/openvpn-easyrsa.rst:416
msgid "And link it to the Easy RSA package we just installed"
msgstr "そして、先ほどインストールしたEasy RSAパッケージにリンクさせます。"

#: ../pro/linux/openvpn-easyrsa.rst:423
msgid "2. Create a PKI for the OpenVPN client"
msgstr "2.OpenVPNクライアント用のPKIを作成する"

#: ../pro/linux/openvpn-easyrsa.rst:425
msgid ""
"In the same manner we created a PKI on the OpenVPN server, we will create"
" a PKI using Easy-RSA on the client side."
msgstr "OpenVPNサーバでPKIを作成したのと同じように、クライアント側でもEasy-RSAを使ったPKIを作成します。"

#: ../pro/linux/openvpn-easyrsa.rst:428
msgid "3. Create a ``client.req`` and ``client.key``"
msgstr "3.``client.req``と``client.key``を作成する。"

#: ../pro/linux/openvpn-easyrsa.rst:430
msgid ""
"In the same manner we issued the key pair on the sever, we generate a key"
" pair for the client which will be composed of the ``client.req`` file "
"and the ``client.key`` file. The latter must be kept secret on the client"
" machine."
msgstr ""
"サーバー上でキーペアを発行したのと同じ方法で、クライアント用のキーペアを生成します。これは ``client.req`` ファイルと "
"``client.key`` ファイルで構成されます。後者は、クライアントマシン上で秘密にしておく必要があります。"

#: ../pro/linux/openvpn-easyrsa.rst:434
msgid "4. Sign ``client.req`` and issue the ``client.crt`` file"
msgstr "4.``client.req``に署名し、``client.crt``のファイルを発行する。"

#: ../pro/linux/openvpn-easyrsa.rst:436
msgid ""
"To transfer the ``client.req`` file to the CA machine, we will use the "
"same method as we did for the ``server.req`` file."
msgstr "``client.req``のファイルをCA機に転送するには、``server.req``のファイルを転送したときと同じ方法で行います。"

#: ../pro/linux/openvpn-easyrsa.rst:438
msgid ""
"Once transferred, on the CA machine we sign the certificate signing "
"request file with this command"
msgstr "転送が完了したら、CAのマシンで次のコマンドを使って証明書署名要求ファイルに署名します。"

#: ../pro/linux/openvpn-easyrsa.rst:445
msgid "5. Import ``client.crt`` on the Nitrokey from the CA machine"
msgstr "5.CA機からNitrokeyに``client.crt``をインポートする。"

#: ../pro/linux/openvpn-easyrsa.rst:447
msgid ""
"After creating the ``client.crt`` file, we plug the Nitrokey Pro 2 device"
" in the CA machine, and import the ``.crt`` to the Pro 2 device using "
"this command:"
msgstr ""
"``client.crt``のファイルを作成した後、CAマシンにNitrokey Pro "
"2デバイスを接続し、``.crt``をこのコマンドでPro 2デバイスにインポートします。"

#: ../pro/linux/openvpn-easyrsa.rst:453
msgid ""
"You can see if the key is effectively stored on the Nitrokey using this "
"command:"
msgstr "キーがNitrokeyに有効に保存されているかどうかは、このコマンドで確認できます。"

#: ../pro/linux/openvpn-easyrsa.rst:459
msgid "Or alternatively"
msgstr "あるいは、代わりに"

#: ../pro/linux/openvpn-easyrsa.rst:465
msgid ""
"Fore more commands you can refer to the `OpenSC wiki "
"<https://github.com/OpenSC/OpenSC/wiki/OpenPGP-card>`_."
msgstr ""
"その他のコマンドについては、`OpenSC wiki <https://github.com/OpenSC/OpenSC/wiki"
"/OpenPGP-card>`_を参照してください。"

#: ../pro/linux/openvpn-easyrsa.rst:468
msgid "6. Retrieve the ``chain.crt`` file from the CA machine"
msgstr "6.CA機から``chain.crt``のファイルを取得します。"

#: ../pro/linux/openvpn-easyrsa.rst:470
msgid ""
"While we keep the ``client.crt``\\ stored on the nitrokey Pro 2 device, "
"we must retrieve the ``chain.crt`` file on the client machine, and store "
"it in the adequate directory. We may use ``scp`` as in the method "
"explained in the server section of this guide."
msgstr ""
"``client.crt``\\ stored on the nitrokey Pro 2 device, we must retrieve "
"the "
"``chain.crt``のファイルをクライアントマシンに置いて、適切なディレクトリに保存していますが。このガイドのサーバーのセクションで説明されている方法のように、``scp``を使用することもあります。"

#: ../pro/linux/openvpn-easyrsa.rst:473
msgid "7. Configure the client to interact with the Nitrokey"
msgstr "7.クライアントがNitrokeyと対話できるように設定します。"

#: ../pro/linux/openvpn-easyrsa.rst:475
msgid ""
"Now back on the client machine, we will plug the Nitrokey Pro and use it "
"to establish the VPN connection with the server. In general terms, a "
"connection that uses TLS requires multiple certificates and keys for "
"authentication:"
msgstr ""
"さて、クライアントマシンに戻って、Nitrokey "
"Proを接続し、それを使ってサーバーとのVPN接続を確立します。一般的に、TLSを使用した接続では、認証のために複数の証明書と鍵が必要になります。"

#: ../pro/linux/openvpn-easyrsa.rst:484
msgid ""
"For this guide we can the following ``client.conf`` file, and add the "
"required options to it accordingly:"
msgstr "このガイドでは、以下の``client.conf``ファイルを作成し、必要なオプションを適宜追加しています。"

#: ../pro/linux/openvpn-easyrsa.rst:506
msgid "Determine the correct object"
msgstr "正しいオブジェクトの決定"

#: ../pro/linux/openvpn-easyrsa.rst:508
msgid ""
"Each PKCS#11 provider can support multiple devices. In order to view the "
"available object list you can use the following command:"
msgstr ""
"各 PKCS#11 "
"プロバイダーは、複数のデバイスをサポートすることができます。利用可能なオブジェクトのリストを表示するには、次のコマンドを使用できます。"

#: ../pro/linux/openvpn-easyrsa.rst:524
msgid ""
"Each certificate/private key pair have unique ``Serialized id`` string. "
"The serialized id string of the requested certificate should be "
"specified, in the configuration file. We can do this by adding the "
"``pkcs11-id`` option using single quote marks."
msgstr ""
"各証明書と秘密鍵のペアは、ユニークな``Serialized "
"id``の文字列を持っています。要求された証明書のシリアル化されたid文字列は、設定ファイルで指定する必要があります。これを行うには、シングルクォートマークを使用して、``pkcs11-id``オプションを追加します。"

#: ../pro/linux/openvpn-easyrsa.rst:530
msgid "Add retrieved Serialized ID to the configuration file"
msgstr "取得したシリアライズドIDを設定ファイルに追加する"

#: ../pro/linux/openvpn-easyrsa.rst:532
msgid ""
"Using your favorite text editor, open the server.conf file, and add the "
"following lines, while taking care to insert your own ``Serialized id``:"
msgstr "お好きなテキストエディターでserver.confファイルを開き、``Serialized id``に注意しながら、以下の行を追加します。"

#: ../pro/linux/openvpn-easyrsa.rst:539
msgid ""
"For additional `settings related to OpenVPN <https://openvpn.net"
"/community-resources/how-to/>`_ authentication, you may also add few "
"lines to handle key maganagement, although it is optional."
msgstr ""
"OpenVPNの<https://openvpn.net/community-resources/how-"
"to/>`_認証に関連する`設定を追加する場合は、オプションですが、鍵の管理を処理するために数行を追加することもできます。"

#: ../pro/linux/openvpn-easyrsa.rst:543 ../pro/linux/openvpn-easyrsa.rst:567
msgid "Click to view the code"
msgstr "クリックするとコードが表示されます"

#: ../pro/linux/openvpn-easyrsa.rst:560
msgid "Optional step"
msgstr "オプションステップ"

#: ../pro/linux/openvpn-easyrsa.rst:563
msgid ""
"If you need to test the configuration, with and without the token on the "
"Nitrokey, you may add lines to the same ``client.conf`` and "
"comment/uncomment the relevant lines according to your needs:"
msgstr "Nitrokeyにトークンがある場合とない場合の構成をテストする必要がある場合は、同じ``client.conf``に行を追加し、必要に応じて関連する行をコメント/アンコメントすることができます。"

#: ../pro/linux/openvpn-easyrsa.rst:577
msgid "Configure the OpenVPN client"
msgstr "OpenVPNクライアントの設定"

#: ../pro/linux/openvpn-easyrsa.rst:579
msgid "The final configuration file ``client.conf`` should look like this one:"
msgstr "最終的な設定ファイル ``client.conf`` は、以下のようになります。"

#: ../pro/linux/openvpn-easyrsa.rst:622
msgid "Known issues"
msgstr "既知の問題"

#: ../pro/linux/openvpn-easyrsa.rst:624
msgid ""
"There are some known issues related to OpenVPN login with OpenSC. Please "
"consult these issues `here <https://github.com/Nitrokey/wiki/wiki/3rd-"
"Party-Issues>`_."
msgstr ""
"OpenSCでのOpenVPNログインには、いくつかの既知の問題があります。これらの問題については ` こちら "
"<https://github.com/Nitrokey/wiki/wiki/3rd-Party-Issues>`_ を参照してください。"

#: ../pro/linux/openvpn-easyrsa.rst:627
msgid "8. Start the OpenVPN client"
msgstr "8.OpenVPNクライアントの起動"

#: ../pro/linux/openvpn-easyrsa.rst:629
msgid "Start the OpenVPN service on the client"
msgstr "クライアントでOpenVPNサービスを開始する"

#: ../pro/linux/openvpn-easyrsa.rst:631
msgid "Enable the OpenVPN service, and start it using these commands:"
msgstr "OpenVPNサービスを有効にし、以下のコマンドで起動してください。"

#: ../pro/linux/openvpn-easyrsa.rst:638
msgid "To double check if the OpenVPN service is active use this command:"
msgstr "OpenVPNサービスがアクティブかどうかを再確認するには、このコマンドを使用します。"

#: ../pro/linux/openvpn-easyrsa.rst:644
msgid "Enter your User PIN"
msgstr "ユーザーPINの入力"

#: ../pro/linux/openvpn-easyrsa.rst:646
msgid "When executing OpenVPN client, Nitrokey’s PIN needs to be entered:"
msgstr "OpenVPNクライアントを実行する際に、NitrokeyのPINを入力する必要があります。"

#: ../pro/linux/openvpn-easyrsa.rst:656
msgid ""
"Unfortunately OpenVPN doesn’t seem to be able to establish a handshake "
"and stops at an error as reported `here <https://support.nitrokey.com/t"
"/nitrokey-pro-with-openssl-1-1-1-tls-1-3-and-rsa-based-"
"certificates/2180/2>`_, `here <https://support.nitrokey.com/t/openvpn-"
"openssl-error-141f0006/2637>`_ and `here "
"<https://community.openvpn.net/openvpn/ticket/1215>`_"
msgstr ""
"残念ながらOpenVPNはハンドシェイクを確立できないようで、`こちらの<https://support.nitrokey.com/t"
"/nitrokey-pro-with-openssl-1-1-1-tls-1-3-and-rsa-based-"
"certificates/2180/2>`_で報告されているようなエラーで止まってしまいます。` ここ "
"<https://support.nitrokey.com/t/openvpn-openssl-error-141f0006/2637>`_ と "
"` ここ <https://community.openvpn.net/openvpn/ticket/1215>`_ です。"

#: ../pro/linux/openvpn-easyrsa.rst:660
msgid "error output"
msgstr "エラー出力"

#: ../pro/linux/openvpn-easyrsa.rst:662
msgid ""
"``$ sudo openvpn --client --config client.conf`` ``Fri Sep 11 17:42:01 "
"2020 OpenVPN 2.4.9 x86_64-redhat-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] "
"[EPOLL] [PKCS11] [MH/PKTINFO] [AEAD] built on Apr 24 2020`` ``Fri Sep 11 "
"17:42:01 2020 library versions: OpenSSL 1.1.1g FIPS  21 Apr 2020, LZO "
"2.08`` ``Fri Sep 11 17:42:01 2020 PKCS#11: Adding PKCS#11 provider "
"'/usr/lib64/pkcs11/opensc-pkcs11.so'`` ``Enter User PIN (OpenPGP card) "
"token Password: ******`` ``Fri Sep 11 17:42:12 2020 TCP/UDP: Preserving "
"recently used remote address: [AF_INET]18.157.180.240:1194`` ``Fri Sep 11"
" 17:42:12 2020 Socket Buffers: R=[212992->212992] S=[212992->212992]`` "
"``Fri Sep 11 17:42:12 2020 UDP link local: (not bound)`` ``Fri Sep 11 "
"17:42:12 2020 UDP link remote: [AF_INET]18.157.180.240:1194`` ``Fri Sep "
"11 17:42:12 2020 NOTE: UID/GID downgrade will be delayed because of "
"--client, --pull, or --up-delay`` ``Fri Sep 11 17:42:12 2020 TLS: Initial"
" packet from [AF_INET]18.157.180.240:1194, sid=d79690cf 9e38ce89`` ``Fri "
"Sep 11 17:42:12 2020 VERIFY OK: depth=1, CN=server_CA`` ``Fri Sep 11 "
"17:42:12 2020 VERIFY KU OK`` ``Fri Sep 11 17:42:12 2020 Validating "
"certificate extended key usage`` ``Fri Sep 11 17:42:12 2020 ++ "
"Certificate has EKU (str) TLS Web Server Authentication, expects TLS Web "
"Server Authentication`` ``Fri Sep 11 17:42:12 2020 VERIFY EKU OK`` ``Fri "
"Sep 11 17:42:12 2020 VERIFY OK: depth=0, CN=server`` ``Fri Sep 11 "
"17:42:12 2020 OpenSSL: error:141F0006:SSL "
"routines:tls_construct_cert_verify:EVP lib`` ``Fri Sep 11 17:42:12 2020 "
"TLS_ERROR: BIO read tls_read_plaintext error`` ``Fri Sep 11 17:42:12 2020"
" TLS Error: TLS object -> incoming plaintext read error`` ``Fri Sep 11 "
"17:42:12 2020 TLS Error: TLS handshake failed`` ``Fri Sep 11 17:42:12 "
"2020 SIGUSR1[soft,tls-error] received, process restarting`` ``Fri Sep 11 "
"17:42:12 2020 Restart pause, 5 second(s)``"
msgstr ""
"``$ sudo openvpn --client --config client.conf`` ``Fri Sep 11 17:42:01 "
"2020 OpenVPN 2.4.9 x86_64-redhat-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] "
"[EPOLL] [PKCS11] [MH/PKTINFO] [AEAD] built on Apr 24 2020`` ``Fri Sep 11 "
"17:42:01 2020 library versions: OpenSSL 1.1.1g FIPS  21 Apr 2020, LZO "
"2.08`` <xid=\"292\"></x>`Fri Sep 11 17:42:01 2020 PKCS#11: Adding PKCS#11"
" provider '/usr/lib64/pkcs11/opensc-pkcs11.so'`` ``Enter User PIN "
"(OpenPGP card) token Password: ******`` ``Fri Sep 11 17:42:12 2020 "
"TCP/UDP: Preserving recently used remote address: "
"[AF_INET]18.157.180.240:1194`` <xid=\"556\"></x>`Fri Sep 11 17:42:12 2020"
" Socket Buffers: R=[212992->212992] S=[212992->212992]`` ``Fri Sep 11 "
"17:42:12 2020 UDP link local: (not bound)`` ``Fri Sep 11 17:42:12 2020 "
"UDP link remote: [AF_INET]18.157.180.240:1194````Fri Sep 11 17:42:12 2020"
" NOTE: UID/GID downgrade will be delayed because of --client, --pull, or "
"--up-delay`` ``Fri Sep 11 17:42:12 2020 TLS: Initial packet from "
"[AF_INET]18.157.180.240:1194, sid=d79690cf 9e38ce89`` ``Fri Sep 11 "
"17:42:12 2020 VERIFY OK: depth=1, CN=server_CA````Fri Sep 11 17:42:12 "
"2020 VERIFY KU OK`` ``Fri Sep 11 17:42:12 2020 Validating certificate "
"extended key usage`` ``Fri Sep 11 17:42:12 2020 ++ Certificate has EKU "
"(str) TLS Web Server Authentication, expects TLS Web Server "
"Authentication<xid=\"1288\"></x>` ``Fri Sep 11 17:42:12 2020 VERIFY EKU "
"OK`` ``Fri Sep 11 17:42:12 2020 VERIFY OK: depth=0, CN=server`` "
"``<xid=\"1395\"></x>`` `` Fri Sep 11 17:42:12 2020 TLS_ERROR: BIO read "
"tls_read_plaintext error`` `` Fri Sep 11 17:42:12 2020 TLS Error: TLS "
"object -> incoming plaintext read error`` <xid=\"1651\"></x>`Fri Sep 11 "
"17:42:12 2020 TLS Error: TLS handshake failed`` ``Fri Sep 11 17:42:12 "
"2020 SIGUSR1[soft,tls-error] received, process restarting`` ``Fri Sep 11 "
"17:42:12 2020 Restart pause, 5 second(s)``"

#: ../pro/linux/openvpn-easyrsa.rst:686
msgid ""
"In some reported cases it does not prompt for a PIN on the terminal. One "
"workaround would be to use to use this command to login with the PIN:"
msgstr "一部の報告では、ターミナル上でPINの入力を求められないことがあります。これを回避するには、このコマンドを使ってPINでログインする方法があります。"

#: ../pro/linux/openvpn-easyrsa.rst:692
msgid ""
"Alternatively, you could `recompile OpenVPN "
"<https://forums.openvpn.net/viewtopic.php?f=4&t=23318>`_ client with "
"systemd support disabled, and it will prompt you for the PIN as expected."
msgstr "代わりに、systemdサポートを無効にしてOpenVPN `クライアントを再コンパイルすると、期待通りにPINの入力を求められます。"

#: ../pro/linux/openvpn-easyrsa.rst:694
msgid ""
"Another option, would be to login to your OpenVPN instance with the "
"Viscosity client which provides a better user experience especially for "
"entering the PIN."
msgstr "また、OpenVPNインスタンスにViscosityクライアントでログインする方法もあります。Viscosityクライアントは、特にPINの入力において優れたユーザーエクスペリエンスを提供します。"

#: ../pro/otp.rst:2
msgid "Two-factor Authentication with One-Time Passwords (OTP)"
msgstr "ワンタイムパスワード（OTP）による二要素認証"

#: ../pro/otp.rst:8
msgid ""
"The use of One-time Passwords (OTP) is called very differently on the "
"various services supporting it. Sometimes it is referred to as Multi-"
"factor Authentication (MFA), sometimes it is Two-factor Authentication "
"(2FA) or just “authentication via authenticator app” like Google "
"Authenticator. Most of these services are compatible for usage with the "
"Nitrokey Pro and Nitrokey Storage. The following instructions show how to"
" enable OTP on our `support forum <https://support.nitrokey.com/>`_. The "
"procedure is quite similar on most services. For a list of websites "
"supporting OTP have a look at `dongleauth.com "
"<https://www.dongleauth.com/>`_."
msgstr ""
"ワンタイムパスワード（OTP）の使用は、それをサポートする様々なサービスで非常に異なった呼び方をされています。多要素認証（MFA）、二要素認証（2FA）、あるいはGoogle"
" Authenticatorのような「認証アプリによる認証」と呼ばれることもあります。これらのサービスのほとんどは、Nitrokey "
"ProおよびNitrokey "
"Storageでの使用に対応しています。以下の手順は、当社の`サポートフォーラム<https://support.nitrokey.com/>`_でワンタイムパスワードを有効にする方法を示しています。手順はほとんどのサービスで似ています。OTPをサポートしているウェブサイトのリストは、`dongleauth.com"
" <https://www.dongleauth.com/>`_をご覧ください。"

#: ../pro/otp.rst:10
msgid ""
"You need to have the `Nitrokey App <https://www.nitrokey.com/download>`_ "
"installed to use the OTP feature of the Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"Nitrokey ProおよびNitrokey Storageのワンタイムパスワード機能を使用するには、`Nitrokey App "
"<https://www.nitrokey.com/download>`_がインストールされている必要があります。"

#: ../pro/otp.rst:13
msgid "Configure a Website/Application to Use OTP"
msgstr "OTPを使用するウェブサイト/アプリケーションの設定"

#: ../pro/otp.rst:15
msgid ""
"Login to the website which supports OTP (in this example, the `support "
"forum <https://support.nitrokey.com/>`_). Usually you find the option to "
"enable two-factor-authentication under your profile or in the settings."
msgstr "OTPをサポートしているウェブサイト（この例では、`サポートフォーラム<https://support.nitrokey.com/>`_）にログインします。通常、2ファクタ認証を有効にするオプションは、プロフィールまたは設定にあります。"

#: ../pro/otp.rst:22
msgid ""
"Most of the time, you will get a QR-Code as seen below. There should be "
"an option, to show the secret key directly."
msgstr "ほとんどの場合、下記のようなQRコードが表示されます。秘密鍵を直接表示するオプションがあるはずです。"

#: ../pro/otp.rst:29
msgid "We need to copy the secret code."
msgstr "秘密のコードをコピーする必要がある。"

#: ../pro/otp.rst:31
msgid ""
"This is what the Nitrokey is actually protecting. You may create a backup"
" of it now (in case the Nitrokey get lost or breaks) by writing it down "
"on a sheet of paper and storing it securely. But be aware that anybody "
"who is in possession of this secret code, can create one-time passwords "
"for your account! *Please note that you won’t be able to backup this "
"code, once it is stored in the Nitrokey!*"
msgstr "これはNitrokeyが実際に守っているものです。万が一、Nitrokeyを紛失したり、壊れたりした場合に備えて、紙に書いて安全に保管しておくとよいでしょう。ただし、この秘密のコードを知っている人は誰でも、あなたのアカウントのワンタイムパスワードを作ることができますのでご注意ください。*一度Nitrokeyに保存したコードをバックアップすることはできませんので、ご注意ください。"

#: ../pro/otp.rst:38
msgid "Now start the Nitrokey App and open the “OTP Slot Configuration”."
msgstr "ここでNitrokeyアプリを起動し、「OTP Slot Configuration」を開きます。"

#: ../pro/otp.rst:45
msgid ""
"Paste in the secret key in the corresponding field and choose an "
"appropiate slot name. Click on “Save” and type in your admin PIN if "
"requested."
msgstr ""
"対応するフィールドにシークレットキーを貼り付け、適切なスロット名を選択します。保存 "
"\"をクリックし、要求された場合は管理者用暗証番号を入力してください。"

#: ../pro/otp.rst:52
msgid ""
"After saving the slot you can go to “Menu” -> “Passwords” -> YourSlotName"
" to get your very first one-time password."
msgstr ""
"スロットを保存した後、\"Menu\" -> \"Passwords\" -> "
"YourSlotNameにアクセスして、最初のワンタイムパスワードを取得することができます。"

#: ../pro/otp.rst:60
msgid ""
"The one-time password is copied to your clipboard automatically. You just"
" need to paste it to the field on the website to confirm the correct "
"setup and thus to activate the two-factor authentication."
msgstr "ワンタイムパスワードは自動的にクリップボードにコピーされます。このワンタイムパスワードをウェブサイトの入力欄に貼り付ければ、正しい設定であることが確認され、二要素認証が有効になります。"

#: ../pro/otp.rst:68
msgid "Securely Login to Website/Application"
msgstr "ウェブサイト/アプリケーションへの安全なログイン"

#: ../pro/otp.rst:70
msgid ""
"From now on you will get asked for a one-time password additionally to "
"your other credentials if you try to login the the website. You just need"
" to open the Nitrokey App and go to “Menu” -> “Passwords” -> YourSlotName"
" again to get the one-time password."
msgstr ""
"今後は、ウェブサイトにログインする際に、他の認証情報に加えてワンタイムパスワードの入力を求められます。ワンタイムパスワードを取得するには、Nitrokeyアプリを起動し、\"Menu\""
" -> \"Passwords\" -> \"YourSlotName \"に再度アクセスする必要があります。"

#: ../pro/putty.rst:2
msgid "PuTTY"
msgstr "PuTTY"

#: ../pro/putty.rst:8
msgid ""
"This mini-howto assumes that the Nitrokey has been initialized and "
"contains cryptographic keys."
msgstr "このミニハウツーでは、Nitrokeyが初期化され、暗号鍵が入っていることを前提としています。"

#: ../pro/putty.rst:10
msgid "**Required on the client side:**"
msgstr "**クライアント側に必要なもの：***。"

#: ../pro/putty.rst:12
msgid ""
"`PuTTY <https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`_"
" or a variant of it"
msgstr ""
"`PuTTY "
"<https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`_またはその亜種。"

#: ../pro/putty.rst:15
msgid ""
"`GPG4Win <https://gpg4win.org/>`_ or `pageant.exe <https://smartcard-"
"auth.de/download-de.html>`_ with Smartcard support from Dr. Peter Koch"
msgstr ""
"`GPG4Win <https://gpg4win.org/>`_または`pageant.exe <https://smartcard-"
"auth.de/download-de.html>`_とDr. Peter KochによるSmartcardのサポート。"

#: ../pro/putty.rst:19
msgid ""
"Optional: `OpenPGP Minidriver "
"<https://wald.intevation.org/frs/?group_id=49&release_id=353>`_"
msgstr ""
"オプションです。`OpenPGP Minidriver "
"<https://wald.intevation.org/frs/?group_id=49&release_id=353>`_となります。"

#: ../pro/putty.rst:22
msgid "**1) Pageant**"
msgstr "**1)ページェント*1"

#: ../pro/putty.rst:24
msgid ""
"start pageant.exe. That this is running is shown in the notification area"
" of the taskbar."
msgstr "pageant.exeを起動します。これが実行されていることは、タスクバーの通知領域に表示されます。"

#: ../pro/putty.rst:31
msgid "A double click opens the view of the current keys."
msgstr "ダブルクリックすると、現在のキーのビューが開きます。"

#: ../pro/putty.rst:38
msgid "After inserting the key it looks like this."
msgstr "キーを挿入するとこのようになります。"

#: ../pro/putty.rst:45
msgid ""
"If nothing is displayed here, pageant may have to be restarted or another"
" application is already using the stick. A possibly running pgp-agent "
"must be terminated! Now we only need the public key we want to store in "
"the ssh configuration of the server. Therefore we press CTRL while "
"inserting the stick…"
msgstr ""
"ここに何も表示されない場合、pageantを再起動しなければならないか、他のアプリケーションが既にスティックを使用している可能性があります"
"。pgp-agentが動作している可能性があるので、終了させなければなりません。ここで必要なのは、サーバの ssh "
"設定に保存したい公開鍵だけです。そこで、スティックを挿入しながら CTRL を押すと…"

#: ../pro/putty.rst:52
msgid "and then view the Pageant-PublicKeys.txt."
msgstr "をクリックし、Pageant-PublicKeys.txtを表示します。"

#: ../pro/putty.rst:59
msgid ""
"I searched for the ssh-rsa entry of the auth key and added the line on "
"the server to the authorized_keys."
msgstr "authキーのssh-rsaエントリーを探し、サーバー上のラインをauthorized_keysに追加しました。"

#: ../pro/putty.rst:61
msgid "**2) PuTTY**"
msgstr "**2)PuTTY"

#: ../pro/putty.rst:63
msgid "There is surprisingly little to say about PuTTY itself."
msgstr "PuTTY自体については、意外と語ることがありません。"

#: ../pro/putty.rst:70
msgid ""
"“Attempt authentication using Pageant” must be set, which is the default "
"anyway."
msgstr "\"Attempt authentication using Pageant \"が設定されている必要がありますが、これはデフォルトです。"

#: ../pro/putty.rst:72
msgid ""
"That’s it, as soon as you connect to the server while pageant is running "
"and you have the keys, you will be asked for the password of the Crypto-"
"Stick and can log in."
msgstr ""
"以上で、ページェントの実行中にサーバーに接続し、キーを入手すると、すぐにCrypto-"
"Stickのパスワードを求められ、ログインできるようになります。"

#: ../pro/putty.rst:74
msgid "**3) openpgp-minidriver (optional)**"
msgstr "**3) openpgp-minidriver (optional)**。"

#: ../pro/putty.rst:76
msgid ""
"If you are annoyed that Windows reports every time you plug in the stick "
"that no driver could be found for “Smartcard”, you can get rid of it. You"
" just have to install the x86 or x64 version of the above mentioned "
"driver and the smartcard looks like this:"
msgstr "スティックを差し込むたびにWindowsが「Smartcard」のドライバーが見つかりませんでしたと報告してきてイライラする方は、これを解消することができます。上記のドライバのx86版またはx64版をインストールするだけで、スマートカードは以下のようになります。"

#: ../pro/smime.rst:2
msgid "S/MIME Email Encryption"
msgstr "S/MIMEメール暗号化"

#: ../pro/smime.rst:17
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP, see "
"`here <openpgp.html>`_. This page describes the usage of S/MIME email "
"encryption."
msgstr "どれを選べばいいのかわからない場合は、OpenPGPを使うべきで、`こちら<openpgp.html>`_を参照してください。このページでは、S/MIMEのメール暗号化の使い方を説明しています。"

#: ../pro/smime.rst:19
msgid ""
"You need to purchase a S/MIME certificate or may already got one by your "
"company. Furthermore, you need to install `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_ on your System. While GNU/Linux"
" users usually can install OpenSC over the package manager (e.g. ``sudo "
"apt install opensc`` on Ubuntu), macOS and Windows users can download the"
" installation files from the `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_ page."
msgstr ""
"S/MIME証明書を購入する必要がありますが、既に会社で取得している場合もあります。さらに、`OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_をお使いのシステムにインストールする必要があります。GNU/Linuxユーザーは通常、パッケージマネージャを使ってOpenSCをインストールすることができますが（例：Ubuntuでは``sudo"
" apt install opensc``）、macOSやWindowsユーザーは`OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_ページからインストールファイルをダウンロードすることができます。"

#: ../pro/smime-outlook.rst:17 ../pro/smime-thunderbird.rst:17
#: ../pro/smime.rst:22
msgid ""
"Windows users with 64-bit system (standard) need to install both, the "
"32-bit and the 64-bit version of OpenSC!"
msgstr "64ビットシステム（標準）のWindowsユーザーは、32ビット版と64ビット版の両方のOpenSC！をインストールする必要があります。"

#: ../pro/smime.rst:25
msgid "Import Existing Key and Certificate"
msgstr "既存の鍵と証明書のインポート"

#: ../pro/smime.rst:27
msgid ""
"The following instructions are based on the `wiki of OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki/OpenPGP-card>`_. We will assume, "
"that you already got a key-certificate pair as a .p12 file. Please have a"
" look at the wiki page, if you got a separate key and certificate file."
msgstr ""
"以下の説明は、OpenSCの`wiki <https://github.com/OpenSC/OpenSC/wiki/OpenPGP-"
"card>`_に基づいています。ここでは、すでに鍵と証明書のペアを.p12ファイルとして入手していると仮定します。別の鍵と証明書のファイルを入手した場合は、wikiページを参照してください。"

#: ../pro/smime.rst:31
msgid ""
"To make these commands as simple as possible, the .p12 file needs to be "
"in your home folder. On Windows this is usually ‘C:\\Users\\yourusername’"
" and on macOS and GNU/Linux system it will be ‘/home/yourusername’. If "
"you do not store the .p12 file there, you have to adapt the path in the "
"commands below. Please plug in the Nitrokey before submitting the "
"commands."
msgstr "これらのコマンドをできるだけシンプルにするために、.p12ファイルはあなたのホームフォルダーにある必要があります。Windowsでは通常、「C:Users\\yourusername」、macOSやGNU/Linuxシステムでは「/home/yourusername」となります。この場所に.p12ファイルを保存していない場合は、以下のコマンドでパスを変更する必要があります。コマンドを実行する前に、Nitrokeyを接続してください。"

#: ../pro/smime.rst:33
msgid ""
"Assuming that your key-certificate file reads ‘myprivate.p12’ the "
"commands for Windows looks like this:"
msgstr "鍵・証明書のファイル名が「myprivate.p12」であるとすると、Windows用のコマンドは以下のようになります。"

#: ../pro/smime.rst:40
msgid "and on macOS and GNU/Linux it will be"
msgstr "となり、macOSとGNU/Linuxでは以下のようになります。"

#: ../pro/smime.rst:47
msgid ""
"The two commands copy the key-certificate pair to the slot 2 (needed for "
"decrypting emails) and slot 3 (needed for signing). The output looks on "
"both systems something like this:"
msgstr "この2つのコマンドは、鍵と証明書のペアをスロット2（メールの復号化に必要）とスロット3（署名に必要）にコピーします。両システムでの出力は以下のようになります。"

#: ../pro/smime.rst:54
msgid ""
"Please note that there will be error messages that can be safely ignored "
"(see output example above). You now have the key-certificate pair loaded "
"on the Nitrokey."
msgstr "エラーメッセージが表示されますが、無視してかまいません（上記の出力例を参照）。これで、Nitrokeyに鍵と証明書のペアが読み込まれました。"

#: ../pro/smime.rst:61
msgid "for using `S/MIME encryption on Thunderbird <smime-thunderbird.html>`_"
msgstr "Thunderbirdで`S/MIME暗号化を使用するための<smime-thunderbird.html>`_。"

#: ../pro/smime.rst:64
msgid "for using `S/MIME encryption on Outlook <smime-outlook.html>`_"
msgstr "Outlook上で`S/MIME暗号化を使用するための<smime-outlook.html><x id=\"60\"></x"

#: ../pro/smime.rst:74
msgid ""
"On Windows: Did you install **both**, the 32-bit and the 64-bit version "
"of OpenSC?"
msgstr "Windowsの場合。OpenSCの32ビット版と64ビット版の両方をインストールしましたか？"

#: ../pro/smime.rst:77
msgid ""
"Nitrokey Storage 2: You need to install OpenSC in version 0.18 or higher."
" You can find the files on the `OpenSC website "
"<https://github.com/OpenSC/OpenSC/releases>`_ for Windows and macOS user "
"or `here <https://github.com/Nitrokey/opensc-build>`_ for Debian/Ubuntu "
"users."
msgstr ""
"Nitrokey Storage "
"2：OpenSCをバージョン0.18以上でインストールする必要があります。WindowsやmacOSのユーザーは`OpenSCのウェブサイト<https://github.com/OpenSC/OpenSC/releases>`_で、Debian/Ubuntuのユーザーは`こちら<https://github.com/Nitrokey"
"/opensc-build>`_でファイルを見つけることができます。"

#: ../pro/smime-outlook.rst:2
msgid "S/MIME Email Encryption with Outlook"
msgstr "OutlookでのS/MIMEメール暗号化"

#: ../pro/smime-outlook.rst:11
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet, please look at `this page <smime.html>`_ first."
msgstr "まだNitrokeyにS/MIMEの鍵と証明書のペアをインストールしていない場合は、まずこのページの` <smime.html>`_をご覧ください。"

#: ../pro/smime-outlook.rst:13
msgid ""
"You need to have OpenSC installed on your System. Please have a look at "
"the `wiki page of the OpenSC project "
"<https://github.com/OpenSC/OpenSC/wiki>`_."
msgstr "システムにOpenSCがインストールされている必要があります。OpenSCプロジェクトの`wikiページ<https://github.com/OpenSC/OpenSC/wiki>`_を参照してみてください。"

#: ../pro/smime-outlook.rst:21
msgid "Settings in Outlook"
msgstr "Outlookの設定"

#: ../pro/smime-outlook.rst:23
msgid ""
"Before you can use the Nitrokey in Outlook you have to activate S/MIME "
"encryption. You can achieve this by clicking on to ‘Start’ -> ‘Options’ "
"and clicking on ‘Trust Center’ in the options window. In section ‘Email "
"Security’ you can choose your S/MIME identity. Your certificate should "
"already be recognized by Outlook."
msgstr ""
"OutlookでNitrokeyを使用するには、S/MIMEの暗号化を有効にする必要があります。これを行うには、「スタート」-> "
"「オプション」をクリックし、オプションウィンドウで「Trust "
"Center」をクリックします。メールセキュリティ」のセクションで、S/MIMEのIDを選択します。あなたの証明書はすでにOutlookで認識されているはずです。"

#: ../pro/smime-outlook.rst:38
msgid ""
"When composing a mail you can now choose to encrypt and sign the message "
"in the ‘Options’ ribbon of the compose window."
msgstr "メール作成時に、作成画面の「オプション」リボンで、メッセージの暗号化と署名を選択できるようになりました。"

#: ../pro/smime-outlook.rst:45
msgid ""
"Outlook will only encrypt message to mail addresses which are saved in "
"your address book. So make sure, that the persons you want to write an "
"encrypted mail to have an entry in Outlook’s contacts. You can ask the "
"person to write you a signed mail, so that you can import the certificate"
" information."
msgstr "Outlookは、アドレス帳に保存されているメールアドレスへのメッセージのみを暗号化します。そのため、暗号化されたメールを送りたい相手が、Outlookの連絡先に登録されていることを確認してください。相手に署名入りのメールを書いてもらうことで、証明書の情報を取り込むことができます。"

#: ../pro/smime-outlook.rst:47
msgid ""
"Depending on your certificate or the certificate of your partners you may"
" have to import a so-called root certificate. This is the certificate of "
"the party which issued the certificate you or your partner uses. You "
"should usually got informed if this is necessary."
msgstr "自分の証明書やパートナーの証明書によっては、いわゆるルート証明書をインポートする必要があります。これは、あなたやあなたのパートナーが使用する証明書を発行した団体の証明書です。これが必要な場合は、通常、お客様にお知らせします。"

#: ../pro/smime-thunderbird.rst:2
msgid "S/MIME Email Encryption with Thunderbird"
msgstr "ThunderbirdでのS/MIMEメール暗号化"

#: ../pro/smime-thunderbird.rst:11
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet or if you did not installed OpenSC, please look at `this "
"page <smime.html>`_ first."
msgstr "まだNitrokeyにS/MIMEの鍵と証明書のペアをインストールしていない場合や、OpenSCをインストールしていない場合は、まず`このページ<smime.html>`_をご覧ください。"

#: ../pro/smime-thunderbird.rst:13
msgid ""
"You need to have `OpenSC installed "
"<https://github.com/OpenSC/OpenSC/wiki>`_ on your System. While GNU/Linux"
" users usually can install OpenSC over the package manager (e.g. ``sudo "
"apt update && sudo apt install opensc`` on Ubuntu), macOS and Windows "
"users can download the installation files from OpenSC directly."
msgstr ""
"お使いのシステムに`OpenSCがインストールされている必要があります<https://github.com/OpenSC/OpenSC/wiki>`_。GNU/Linuxユーザーは通常、パッケージマネージャを使ってOpenSCをインストールすることができますが（例：Ubuntuでは``sudo"
" apt update && sudo apt install "
"opensc``）、macOSやWindowsユーザーはOpenSCから直接インストールファイルをダウンロードすることができます。"

#: ../pro/smime-thunderbird.rst:21
msgid "Settings in Thunderbird"
msgstr "サンダーバードの設定"

#: ../pro/smime-thunderbird.rst:23
msgid ""
"Before you can use the Nitrokey in Thunderbird you have to activate "
"S/MIME encryption in the account settings. You can achieve this by "
"clicking on the menu and go to ‘Preferences’ -> ‘Account Settings’ and "
"clicking on ‘Security’ in the account settings window."
msgstr ""
"ThunderbirdでNitrokeyを使用するには、アカウント設定でS/MIME暗号化を有効にする必要があります。これを行うには、メニューをクリックして「環境設定」->"
" 「アカウント設定」に進み、アカウント設定ウィンドウで「セキュリティ」をクリックします。"

#: ../pro/smime-thunderbird.rst:30
msgid ""
"Click on “Security Devices” to import the right PCKS11 module. Click on "
"“Load” on the right-hand side. Now give the Module a name (like “OpenSC "
"Module”) and click on “Browse” to choose the location of the Module (see "
"below)."
msgstr ""
"右のPCKS11モジュールをインポートするために「Security "
"Devices」をクリックします。右側にある「Load」をクリックします。ここで、モジュールに名前を付け（「OpenSC "
"Module」のように）、「Browse」をクリックしてモジュールの場所を選択します（下図参照）。"

#: ../pro/smime-thunderbird.rst:37
msgid ""
"On Windows the right file lays under “C:\\Windows\\System32\\opensc-"
"pkcs11.dll”. On macOS and GNU/Linux the file should be in “/lib/pkcs11"
"/opensc-pkcs11.so” or “/usr/lib/pkcs11/opensc-pkcs11.so” or alike. Press "
"“OK” twice and you are back in security section of the account settings. "
"Now you can actually choose a certificate on the upper part of the "
"window. You should get asked for a PIN to unlock your Nitrokey. Please "
"type in your User PIN."
msgstr ""
"Windows では、「C:WIndows\\System32\\opensc-"
"pkcs11.dll」に格納されているファイルが正しいです。macOS や GNU/Linux の場合は、「/lib/pkcs11/opensc-"
"pkcs11.so」または「/usr/lib/pkcs11/opensc-"
"pkcs11.so」のような場所にあるはずです。OK」を2回押すと、アカウント設定のセキュリティセクションに戻ります。これで、ウィンドウの上部で証明書を選択できるようになりました。Nitrokeyのロックを解除するためのPINを求められます。あなたのユーザーPINを入力してください。"

#: ../pro/smime-thunderbird.rst:47
msgid ""
"When composing an email you can now choose to encrypt and sign the "
"message."
msgstr "メール作成時に、メッセージの暗号化と署名を選択できるようになりました。"

#: ../storage/mac/product_platform_heading.rst:3
msgid "(Nitrokey Storage 2 - macOS)"
msgstr "(Nitrokey Storage 2 - macOS)"

#: ../pro/eidauthenticate.rst:2
msgid "Login With EIDAuthenticate on Stand Alone Windows Computers"
msgstr "スタンドアロンのWindowsコンピュータでEIDAuthenticateによるログイン"

#: ../pro/eidauthenticate.rst:8
msgid ""
"Download and install the latest version of `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_. Please install the `OpenPGP-"
"CSP <https://github.com/vletoux/OpenPGP-CSP/releases/tag/1.3>`_ driver "
"**instead** if using Nitrokey Storage 2 or Nitrokey Pro 2."
msgstr ""
"最新バージョンの`OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_をダウンロードしてインストールします。Nitrokey "
"Storage 2またはNitrokey Pro 2を使用している場合は、代わりに`OpenPGP-CSP "
"<https://github.com/vletoux/OpenPGP-"
"CSP/releases/tag/1.3>`_ドライバを**インストールしてください。"

#: ../pro/eidauthenticate.rst:9
msgid ""
"Download and install `EIDAuthenticate "
"<https://www.mysmartlogon.com/eidauthenticate/>`_."
msgstr ""
"`EIDAuthenticate "
"<https://www.mysmartlogon.com/eidauthenticate/>`_をダウンロードしてインストールします。"

#: ../pro/eidauthenticate.rst:12
msgid ""
"The free community edition is disabled. You may test the enterprise "
"edition instead."
msgstr "無料のCommunity Editionは使用できません。代わりにエンタープライズ版をお試しいただけます。"

#: ../pro/eidauthenticate.rst:14
msgid "Start EIDConfigurationWizard.exe"
msgstr "EIDConfigurationWizard.exeの起動"

#: ../pro/eidauthenticate.rst:15
msgid "Select “Associate a new certificate”"
msgstr "\"Associate a new certificate \"を選択"

#: ../pro/eidauthenticate.rst:22
msgid ""
"Select or generate a Certificate Authority which should issue the user’s "
"certificate on the Nitrokey."
msgstr "Nitrokeyでユーザーの証明書を発行する認証局を選択または生成します。"

#: ../pro/eidauthenticate.rst:30
msgid ""
"Enter the user PIN which you defined previously in step 4. Wait a moment "
"until a new keypair and certificate are generated. In case your Nitrokey "
"is not detected you may want to execute “certutil -scinfo” for "
"troubleshooting."
msgstr ""
"手順4で定義したユーザーPINを入力します。新しいキーペアと証明書が生成されるまでしばらくお待ちください。Nitrokeyが検出されない場合は、トラブルシューティングのために「certutil"
" -scinfo」を実行することをお勧めします。"

#: ../pro/eidauthenticate.rst:40
msgid "Select the newly generated certificate and press continue."
msgstr "新しく生成された証明書を選択し、「続ける」を押します。"

#: ../pro/eidauthenticate.rst:47
msgid "All checks should succeed. Press continue."
msgstr "すべてのチェックが成功するはずです。続けてください。"

#: ../pro/eidauthenticate.rst:54
msgid "Enter the password of your user account."
msgstr "ユーザーアカウントのパスワードを入力してください。"

#: ../pro/eidauthenticate.rst:61
msgid "Enter the user PIN which you defined previously in step 4."
msgstr "手順4で設定したユーザーPINを入力します。"

#: ../pro/eidauthenticate.rst:68
msgid "The final screen may look like this."
msgstr "最終的な画面は以下のようになります。"

#: ../pro/eidauthenticate.rst:75
msgid ""
"You may perform further configurations such as activate the force smart "
"card policy or automatically lock the computer when removing the Nitrokey"
" (by using EIDConfigurationWizardElevated.exe)."
msgstr "さらに、スマートカード強制発行ポリシーを有効にしたり、Nitrokeyの取り外し時にコンピュータを自動的にロックするなどの設定を行うことができます（EIDConfigurationWizardElevated.exeを使用）。"

#: ../pro/eidauthenticate.rst:77 ../pro/smart-policy.rst:95
msgid ""
"From now on, when logging on to your Windows computer you need to connect"
" the Nitrokey and enter your PIN."
msgstr "今後、Windowsパソコンにログオンする際には、Nitrokeyを接続してPINを入力する必要があります。"

#: ../storage/windows/firmware-update.rst:14
msgid ""
"Download the `Nitrokey App <https://www.nitrokey.com/download>`_ and the "
"`Nitrokey Update Tool <https://github.com/Nitrokey/nitrokey-update-"
"tool/releases/latest>`_. The Nitrokey Update Tool is currently available "
"for macOS and Windows only."
msgstr ""
"`Nitrokey App <https://www.nitrokey.com/download>`_と`Nitrokey Update Tool"
" <https://github.com/Nitrokey/nitrokey-update-"
"tool/releases/latest>`_をダウンロードしてください。Nitrokey Update "
"Tool」は現在、macOSとWindowsのみ対応しています。"

#: ../storage/windows/firmware-update.rst:16
msgid ""
"Download the latest firmware \".hex\" file from `here "
"<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`_. Older releases are `here "
"<https://github.com/Nitrokey/nitrokey-storage-firmware/releases>`_."
msgstr ""
"最新のファームウェア\".hex\"ファイルを`こちら<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`_からダウンロードしてください。古いリリースは`こちら<https://github.com/Nitrokey"
"/nitrokey-storage-firmware/releases>`_。"

#: ../storage/windows/firmware-update.rst:31
msgid ""
"If you are using Microsoft Windows Build 1809 and Nitrokey Storage "
"Firmware 0.52 or lower, you need to use another system or if this is not "
"feasible use `these instructions <firmware-update-manually.html>`_ to "
"enable the Firmware Update mode."
msgstr ""
"Microsoft Windows Build 1809およびNitrokey Storage Firmware "
"0.52以下を使用している場合は、別のシステムを使用するか、それが不可能な場合は`本説明書<firmware-update-"
"manually.html>`_を使用してファームウェアアップデートモードを有効にしてください。"

#: ../storage/windows/firmware-update.rst:37
msgid ""
"Start the Nitrokey Update Tool and click “Select firmware file”. Select "
"the previously downloaded firmware \".hex\" file. Click on “Update "
"firmware” to start the update process. Your device should get detected by"
" the Nitrokey App again as soon as the update is finished."
msgstr ""
"Nitrokey Update Toolを起動し、「Select firmware file」をクリックします。先にダウンロードしたファームウェア"
" \".hex\" ファイルを選択します。Update "
"firmware」をクリックして、アップデートを開始します。アップデートが完了すると、再びNitrokeyアプリでデバイスが検出されるようになります。"

#: ../storage/mac/hidden-os-specific-partitioning.rst:1
msgid ""
"*If this is the first time you unlock the hidden storage, you may need to"
" create a partition on the hidden volume. You will need to use* `Disk "
"Utility <https://support.apple.com/en-gb/guide/disk-"
"utility/dskutl14027/mac>`_. *Make sure to create the partitions on the "
"device that appeared when unlocking the hidden volume.*"
msgstr ""

#: ../storage/mac/index.rst:2
msgid "Nitrokey Storage, Mac"
msgstr "Nitrokey Storage、Mac"

#: ../storage/mac/index.rst:13
msgid ""
"Important: Once you plug in the Nitrokey, your computer will start the "
"Keyboard Setup Assistant. **Don’t run through this assistant but exit it "
"right away.**"
msgstr "重要です。Nitrokeyを接続すると、コンピュータがキーボード設定アシスタントを開始します。**このアシスタントを実行せずにすぐに終了してください。"

#: ../storage/mac/index.rst:16
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`_. Perhaps you want to store it on "
"the unencrypted partition of your Nitrokey Storage"
msgstr ""
"`Nitrokey App "
"<https://www.nitrokey.com/download>`_をダウンロードして起動します。おそらく、Nitrokey "
"Storageの暗号化されていないパーティションに保存したいのでしょう。"

#: ../storage/mac/index.rst:33
msgid ""
"For some Versions of MacOS it is necessary to install custom `ccid driver"
" <https://github.com/martinpaljak/osx-ccid-installer>`_ (for information "
"see `here <https://ludovicrousseau.blogspot.com/2016/04/os-x-el-capitan-"
"and-ccid-driver-upgrades.html>`_), but in general MacOS should have the "
"driver onboard."
msgstr ""
"MacOSのいくつかのバージョンでは、カスタムの`ccidドライバー<https://github.com/martinpaljak/osx-"
"ccid-"
"installer>`_をインストールする必要がありますが（情報は`こちら<https://ludovicrousseau.blogspot.com/2016/04/os-x"
"-el-capitan-and-ccid-driver-"
"upgrades.html>`_を参照）、一般的なMacOSではドライバーがオンボードで提供されています。"

#: ../pro/smart-policy.rst:2
msgid "Login to Windows Domain Computers With MS Active Directory"
msgstr "MS Active DirectoryによるWindowsドメインコンピュータへのログイン"

#: ../pro/smart-policy.rst:8
msgid ""
"Download and install the latest `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`_."
msgstr "最新の`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_をダウンロードしてインストールします。"

#: ../pro/smart-policy.rst:10
msgid ""
"Use a text editor to add the following settings to *C:\\Program "
"Files:\\OpenSC Project\\OpenSC\\opensc.conf*."
msgstr ""
"C:Program Files:\\OpenSC "
"Project\\OpenSC\\opensc.conf*にテキストエディターで以下の設定を追加してください。"

#: ../pro/smart-policy.rst:49
msgid ""
"Open a command terminal and enter “regedit”. Use regedit to import `this "
"file <https://www.nitrokey.com/sites/default/files/nk-hsm.reg>`_."
msgstr ""
"コマンドターミナルを開き、「regedit」と入力します。regeditを使って、`このファイル<https://www.nitrokey.com/sites/default/files"
"/nk-hsm.reg>`_をインポートします。"

#: ../pro/smart-policy.rst:52
msgid ""
"Now you can enroll Nitrokeys for your users managed in Microsoft Active "
"Directory. You may either use Microsoft PKI, `gpgsm "
"<https://www.gnupg.org/documentation/manuals/gnupg/Howto-Create-a-Server-"
"Cert.html>`_, or `Smart Policy <https://www.mysmartlogon.com/products"
"/smart-policy.html>`_. The following steps describe the usage of Smart "
"Policy."
msgstr ""
"Microsoft Active Directory で管理されているユーザに対して、Nitrokeys "
"を登録できるようになりました。Microsoft PKI、`gpgsm "
"<https://www.gnupg.org/documentation/manuals/gnupg/Howto-Create-a-Server-"
"Cert.html>`_、`Smart Policy <https://www.mysmartlogon.com/products/smart-"
"policy.html>`_のいずれかを使用することができます。以下の手順で、Smart Policyの使い方を説明します。"

#: ../pro/smart-policy.rst:58
msgid ""
"`Download "
"<http://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-%20Stage%203.exe>`_"
" and install Smart Policy."
msgstr ""
"` "
"<http://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-%20Stage%203.exe>`_をダウンロードし、Smart"
" Policyをインストールします。"

#: ../pro/smart-policy.rst:60
msgid "Select “Read a smart card”"
msgstr "\"Read a smart card \"を選択"

#: ../pro/smart-policy.rst:67
msgid "Select the certificate, mapping, and user."
msgstr "証明書、マッピング、ユーザーを選択します。"

#: ../pro/smart-policy.rst:74
msgid "Verify the device status via CRL."
msgstr "CRLでデバイスの状態を確認する。"

#: ../pro/smart-policy.rst:81
msgid "Choose a Group Policy Object (GPO)."
msgstr "グループ・ポリシー・オブジェクト（GPO）を選択します。"

#: ../pro/smart-policy.rst:88
msgid "Confirm applying the mapping."
msgstr "マッピングの適用を確認します。"

#: ../storage/windows/product_platform_heading.rst:3
msgid "(Nitrokey Storage 2 - Windows)"
msgstr "(Nitrokey Storage 2 - Windows)"

#: ../pro/windows/2fa-microsoft.rst:2
msgid "Two-factor Authentication for Microsoft Account"
msgstr "マイクロソフトアカウントの二要素認証"

#: ../pro/windows/2fa-microsoft.rst:8
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Microsoft account."
msgstr ""
"Microsoftアカウントのセカンドファクターとして、Nitrokey ProまたはNitrokey "
"Storageを登録するための基本的な手順です。"

#: ../pro/windows/2fa-microsoft.rst:10
msgid ""
"Visit https://account.live.com/proofs/Manage/additional and log in to "
"your Microsoft account if prompted."
msgstr ""
"https://account.live.com/proofs/Manage/additional "
"にアクセスし、プロンプトが表示されたらMicrosoftアカウントにログインします。"

#: ../pro/windows/2fa-microsoft.rst:22
msgid "Click on “Set up two-step verification”."
msgstr "2段階認証の設定」をクリックします。"

#: ../pro/windows/2fa-microsoft.rst:29
msgid "Click on “Next”."
msgstr "Next \"をクリックしてください。"

#: ../pro/windows/2fa-microsoft.rst:36
msgid "Now it is important to click on “set up a different Authenticator app”."
msgstr "ここで重要なのは、「別のAuthenticatorアプリを設定する」をクリックすることです。"

#: ../pro/windows/2fa-microsoft.rst:43
msgid "Click on “I can’t scan the bar code”."
msgstr "バーコードをスキャンできません」をクリックします。"

#: ../pro/windows/2fa-microsoft.rst:50
msgid "Insert and save secret code into the Nitrokey App."
msgstr "秘密のコードをNitrokey Appに挿入して保存します。"

#: ../pro/windows/2fa-microsoft.rst:67
msgid "Enter code generated by Nitrokey App to confirm."
msgstr "Nitrokey Appで生成されたコードを入力して確認してください。"

#: ../pro/windows/2fa-microsoft.rst:79
msgid "Click “Next” and then “Finish”."
msgstr "Next \"をクリックし、\"Finish \"をクリックします。"

#: ../pro/windows/2fa-microsoft.rst:91
msgid ""
"From now on, when signing in you need an OTP additionally to your "
"password."
msgstr "今後、サインインする際には、パスワードに加えてワンタイムパスワードが必要となります。"

#: ../storage/windows/hidden-os-specific-partitioning.rst:1
msgid ""
"*If this is the first time you unlock the hidden storage, you may need to"
" create a partition on the hidden volume. In this case, Windows will "
"prompt you to do so. You can then format the hidden storage using FAT32, "
"for compatibility with most operating systems.*"
msgstr ""

#: ../storage/windows/index.rst:2
msgid "Nitrokey Storage, Windows"
msgstr "Nitrokey Storage、Windows"

#: ../storage/windows/index.rst:13
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that "
"the USB smart card device driver gets installed almost automatically."
msgstr "Nitrokeyをコンピュータに接続し、すべてのダイアログを確認すると、USBスマートカードデバイスドライバがほぼ自動的にインストールされます。"

#: ../storage/windows/index.rst:17
msgid ""
"Windows may fail to install an additional device driver for the smart "
"card. Its safe to ignore this warning."
msgstr "Windowsがスマートカード用の追加デバイスドライバーのインストールに失敗することがあります。この警告は無視して構いません。"

#: ../storage/windows/index.rst:19
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`_. Perhaps you want to store it on "
"the unencrypted partition of your Nitrokey Storage. There won’t open a "
"window, but an icon appears in the system tray (see screenshot below). "
"Please right-click on this icon to use all the options of the App."
msgstr ""
"`Nitrokey App "
"<https://www.nitrokey.com/download>`_をダウンロードして起動します。おそらく、Nitrokey "
"Storageの暗号化されていないパーティションに保存したいのではないでしょうか。ウィンドウは開きませんが、システムトレイにアイコンが表示されます（下のスクリーンショット参照）。このアイコンを右クリックして、アプリのすべてのオプションを使用してください。"

#: ../storage/windows/index.rst:42
msgid ""
"`Instructions <openpgp.html>`_ for using the OpenPGP standard with the "
"Nitrokey"
msgstr "` NitrokeyでOpenPGP規格を使用するための説明書 <openpgp.html><x id=\"28\"></x"

#: ../storage/windows/index.rst:44
msgid "`Instructions <smime.html>`_ for using S/MIME with the Nitrokey"
msgstr "` NitrokeyでS/MIMEを使用するためのインストラクション <smime.html><x id=\"26\"></x"

#: ../pro/windows/openpgp-csp.rst:2
msgid "Windows Logon and S/MIME Email Encryption with Active Directory"
msgstr "Active DirectoryによるWindowsログオンとS/MIMEメールの暗号化"

#: ../pro/windows/openpgp-csp.rst:8
msgid ""
"Please note that this driver is still in development/testing. Please tell"
" us your experiences! See our `contact page "
"<https://www.nitrokey.com/contact>`_."
msgstr "このドライバーはまだ開発/テスト中であることをご了承ください。あなたの経験を私たちに教えてください。私たちの`コンタクトページ<https://www.nitrokey.com/contact>`_をご覧ください。"

#: ../pro/windows/openpgp-csp.rst:13
msgid ""
"This guide assumes that an Active Directory server with role ‘Active "
"Directory Certificate Services’ is installed and running on a server. "
"These instructions are based on Nitrokey Storage 2 and Nitrokey Pro 2 "
"only."
msgstr ""
"このガイドは、「Active Directory Certificate Services」の役割を持つActive "
"Directoryサーバーがインストールされ、サーバー上で動作していることを前提としています。本ガイドは、Nitrokey Storage "
"2およびNitrokey Pro 2のみを対象としています。"

#: ../pro/windows/openpgp-csp.rst:16
msgid "Installing OpenPGP-CSP"
msgstr "OpenPGP-CSPのインストール"

#: ../pro/windows/openpgp-csp.rst:18
msgid ""
"This step is needed for clients to use the OpenPGP-CSP driver. Download "
"and install the `latest version <https://github.com/vletoux/OpenPGP-"
"CSP/releases/tag/1.3>`_ of the installer file ‘SetupOpenPGPCsp’ for your "
"system architecture, for ‘SetupOpenPGPCsp_x64.msi’ for 64-bit systems."
msgstr ""
"この手順は、クライアントがOpenPGP-"
"CSPドライバーを使用するために必要です。お使いのシステム・アーキテクチャ用のインストーラー・ファイル「SetupOpenPGPCsp」の`最新バージョン<https://github.com/vletoux"
"/OpenPGP-"
"CSP/releases/tag/1.3>`_、64ビット・システム用の「SetupOpenPGPCsp_x64.msi」をダウンロードしてインストールします。"

#: ../pro/windows/openpgp-csp.rst:20
msgid ""
"You may want to install the driver on the server as well for being able "
"to enforce the use of this driver in the template (see below)."
msgstr "テンプレートでこのドライバーの使用を強制するために、サーバーにもドライバーをインストールしておくとよいでしょう（下記参照）。"

#: ../pro/windows/openpgp-csp.rst:23
msgid "Creating Certificate Template on Server Side"
msgstr "サーバー側での証明書テンプレートの作成"

#: ../pro/windows/openpgp-csp.rst:25
msgid ""
"On Active Directory Server open certsrv.msc to manage your certificate "
"templates. Right click on ‘Certificate Templates’ and choose ‘Manage’"
msgstr ""
"Active Directory "
"Server上でcertsrv.mscを開き、証明書テンプレートを管理する。証明書テンプレート」を右クリックし、「管理」を選択する。"

#: ../pro/windows/openpgp-csp.rst:32
msgid ""
"Now right click on ‘Smartcard Logon’ template and click ‘Duplicate’, to "
"create a new template on basis of this standard template. Rename template"
" to ‘OpenPGP Card Logon and Email’ or alike."
msgstr ""
"Smartcard "
"Logon」テンプレートを右クリックして「Duplicate」をクリックすると、この標準テンプレートをベースにした新しいテンプレートが作成されます。テンプレートの名前を「OpenPGP"
" Card Logon and Email」などと変更します。"

#: ../pro/windows/openpgp-csp.rst:39
msgid ""
"Under ‘Request Handling’, you can choose the OpenPGP-CSP as the one and "
"only Cryptography Service Provider (click the Button labeled ‘CSPs…’). "
"For this to work, you need to install the driver on the server as well "
"and you have to insert a Nitrokey beforehand. This is optional. You can "
"let the user choose, which CSP to use."
msgstr ""
"リクエスト処理」では、唯一の暗号化サービスプロバイダとしてOpenPGP-"
"CSPを選択することができます（「CSPs...」と書かれたボタンをクリック）。この機能を利用するには、サーバーにもドライバーをインストールする必要があり、事前にNitrokeyを挿入する必要があります。これはオプションです。どのCSPを使用するかは、ユーザーに選択させることができます。"

#: ../pro/windows/openpgp-csp.rst:51
msgid ""
"For enabling S/MIME email encryption go to ‘Subject name’. Tick the "
"checkbox ‘E-Mail name’ (note: You must save the mail addresses of your "
"users in the corresponding Active Directory field!)."
msgstr ""
"S/MIMEメールの暗号化を有効にするには、「Subject name」に進みます。チェックボックス「E-Mail "
"name」にチェックを入れます（注意：ユーザーのメールアドレスは、対応するActive Directoryのフィールドに保存する必要があります）。"

#: ../pro/windows/openpgp-csp.rst:58
msgid ""
"Then go to ‘Extensions’, there you edit the applications guideline and "
"add ‘Secure Email’."
msgstr "その後、「拡張機能」に進み、アプリケーションのガイドラインを編集し、「Secure Email」を追加します。"

#: ../pro/windows/openpgp-csp.rst:71
msgid "Request Certificate on Client (Domain Member)"
msgstr "クライアント（ドメインメンバー）に証明書を要求する"

#: ../pro/windows/openpgp-csp.rst:73
msgid ""
"To request a certificate for a domain member, you have to open "
"certmgr.msc. Right click on folder ‘Personal->Certificates’ and click "
"’All Tasks->Request New Certificate and choose the template you created "
"on the AD."
msgstr ""
"ドメインメンバーの証明書を要求するには、certmgr.mscを開く必要があります。Personal->Certificates "
"\"フォルダを右クリックし、\"All Tasks->Request New Certificate "
"\"をクリックし、ADで作成したテンプレートを選択する。"

#: ../pro/windows/openpgp-csp.rst:81
msgid ""
"If you did not enforce the usage of OpenPGP-CSP you have to choose it "
"here now."
msgstr "OpenPGP-CSPの使用を強制していない場合は、ここで選択する必要があります。"

#: ../pro/windows/openpgp-csp.rst:93
msgid "Next you choose the Authentication slot for the certificate."
msgstr "次に、証明書の認証スロットを選択します。"

#: ../pro/windows/openpgp-csp.rst:95
msgid ""
"You are now ready to logon on the computer with the Nitrokey instead of "
"your password and you can use `S/MIME email encryption/signing "
"<smime.html>`_ with the Nitrokey. The driver has to be installed on every"
" computer you want to use the certificate on."
msgstr "これで、パスワードの代わりにNitrokeyを使ってコンピュータにログオンする準備が整い、Nitrokeyを使って`S/MIMEメールの暗号化/署名<smime.html>`_ができるようになります。ドライバは、証明書を使用したいすべてのコンピュータにインストールする必要があります。"

