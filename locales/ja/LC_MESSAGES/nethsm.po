# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 12:32+0100\n"
"PO-Revision-Date: 2022-01-06 19:43+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Japanese <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-nethsm/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"

#: ../nethsm/api.rst:2
msgid "Accessing a NetHSM using the REST API"
msgstr "REST APIによるNetHSMへのアクセス"

#: ../nethsm/api.rst:6
msgid "This tutorial demonstrates how to access the NetHMS via REST API. The interface is `documented here <https://nethsmdemo.nitrokey.com/api_docs/index.html#docs/summary/summary>`_ and it's specification is available as `RAML <https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.raml>`_ and as `OpenAPI (Swagger) <https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20.json>`_."
msgstr ""
"このチュートリアルでは、REST "
"APIを使ってNetHMSにアクセスする方法を紹介します。このインターフェースは、`ここで文書化されており<https://nethsmdemo."
"nitrokey.com/api_docs/index.html#docs/summary/summary>`_、仕様は`RAML "
"<https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.raml><x id=\"280\""
">として利用可能です。の仕様は、`RAML <https://nethsmdemo.nitrokey.com/api_docs/nethsm-api."
"raml>`_と`OpenAPI (Swagger) <https://nethsmdemo.nitrokey.com/api_docs/"
"gen_nethsm_api_oas20.json>`_として提供されています。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "Before we start, we store the host name of the NetHSM instance in the ``NETHSM_HOST`` environment variable.  You can use the public NetHSM demo instance ``nethsmdemo.nitrokey.com`` or run a local demo instance using the NetHSM docker image, see the `Development and Testing </index.html#development-and-testing>`_ section of the NetHSM documentation."
msgstr ""
"始める前に、NetHSM インスタンスのホスト名を環境変数 ``NETHSM_HOST`` に格納します。  パブリックな NetHSM "
"デモインスタンス ``nethsmdemo.nitrokey.com`` を使用するか、NetHSM の docker "
"イメージを使用してローカルのデモインスタンスを実行することができます。NetHSM ドキュメントの `Development and Testing "
"</index.html#development-and-testing>`_ セクションを参照してください。"

#: ../nethsm/api.rst:17
msgid "If you use a NetHSM demo instance with a self-signed certificate, for example using the Docker image, you will have to use the ``--insecure``/``-k`` option for ``curl`` to skip the certificate check."
msgstr ""
"Dockerイメージを使用するなどして、自己署名証明書付きのNetHSMデモインスタンスを使用する場合。のオプションを使用して、証明書のチェックをスキップ"
"しなければなりません。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "First, let’s see what we have here:"
msgstr "まず、ここにあるものを見てみましょう。"

#: ../nethsm/api.rst:40
msgid "The ``-i``/``--include`` option causes ``curl`` to print the HTTP status code and the response headers.  The ``-w '\\n'``/``--write-out '\\n'`` option adds a newline after the response body."
msgstr ""
"``-i``/``--include``のオプションでは、``curl``のように、HTTPステータスコードとレスポンスヘッダーを表示します。  ``-"
"w '\\n"
"'``/``--write-out '\\n"
"'`` オプションは、レスポンスボディの後に改行を追加します。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "See what the device’s status is:"
msgstr "デバイスの状態を確認します。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Initialization"
msgstr "初期化"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "A new NetHSM needs to be provisioned first with passphrases and the current time. The *Admin Passphrase* is the *Administrator*’s passphrase, which is the super user of the NetHSM. The *Unlock Passphrase* is used to encrypt NetHSM’s confidential data store."
msgstr ""
"新しい NetHSM には、まずパスフレーズと現在の時刻をプロビジョニングする必要があります。Admin Passphrase* は、NetHSM "
"のスーパーユーザーである *Administrator* のパスフレーズです。Unlock Passphrase* は、NetHSM "
"の機密データストアを暗号化するために使用します。"

#: ../nethsm/_tutorial.rst:12
#: ../nethsm/_tutorial.rst:12
msgid "The NetHSM demo instance at ``nethsmdemo.nitrokey.com`` is already provisioned."
msgstr "``nethsmdemo.nitrokey.com``のNetHSMデモ・インスタンスは、すでにプロビジョニングされています。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "NetHSM can be used in *Attended Boot* mode and *Unattended Boot* mode."
msgstr "NetHSMは、*Attended Boot*モードと*Unattended Boot*モードで使用できます。"

#: ../nethsm/_tutorial.rst:4
#: ../nethsm/_tutorial.rst:4
msgid "In *Attended Boot* mode the *Unlock Passphrase* needs to be entered during each start which is used to encrypt the data store. For security reasons this mode is recommended."
msgstr ""
"Attended Boot*モードでは、起動時にデータストアの暗号化に使用される*Unlock "
"Passphrase*を入力する必要があります。セキュリティ上の理由から、このモードを推奨します。"

#: ../nethsm/_tutorial.rst:7
#: ../nethsm/_tutorial.rst:7
msgid "In *Unattended Boot* mode no Unlock Passphrase is required, therefore the NetHSM can start unattended and the data store is stored unencrypted. Use this mode if your availability requirements can’t be fulfilled with *Attended Boot* mode."
msgstr ""
"アンアテンデッド・ブート*モードでは、アンロック・パスフレーズが必要ないため、NetHSM "
"は無人で起動し、データストアは暗号化されずに保存されます。このモードは、*Attended Boot* "
"モードでは可用性の要件を満たすことができない場合に使用します。"

#: ../nethsm/_tutorial.rst:12
#: ../nethsm/_tutorial.rst:12
msgid "Retrieve the current mode:"
msgstr "現在のモードを取得します。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "Switch to *Unattended Boot* mode:"
msgstr "Unattended Boot*モードに切り替えます。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "Or switch back to *Attended Boot* mode:"
msgstr "または、*Attended Boot*モードに切り替えてください。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "User Management"
msgstr "ユーザー管理"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Roles"
msgstr "役割"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "Separation of duties can be implemented by using the available Roles. Each user account configured on the NetHSM has one of the following Roles assigned to it. Following is a high-level description of the operations allowed by individual Roles, for endpoint-specific details please refer to the REST API documentation."
msgstr ""
"職務の分離は、利用可能なロールを使用して実施することができます。NetHSM に設定された各ユーザーアカウントには、以下の役割のいずれかが割り当てられてい"
"ます。以下は、個々の役割で許可される操作の概要です。エンドポイント固有の詳細については、REST API ドキュメントを参照してください。"

#: ../nethsm/_tutorial.rst:11
#: ../nethsm/_tutorial.rst:11
msgid "*R-Administrator*: A user account with this Role has access to all operations provided by the REST API, with the exception of key usage operations, i.e. message signing and decryption."
msgstr ""
"*R-Administrator*。このロールを持つユーザーアカウントは、REST "
"APIで提供されるすべての操作にアクセスできますが、メッセージの署名や復号などの鍵使用操作は例外です。"

#: ../nethsm/_tutorial.rst:14
#: ../nethsm/_tutorial.rst:14
msgid "*R-Operator*: A user account with this Role has access to all key usage operations, a read-only subset of key management operations and user management operations allowing changes to their own account only."
msgstr ""
"*R-Operator*。このロールを持つユーザーアカウントは、すべての鍵使用操作、鍵管理操作の読み取り専用サブセット、およびユーザー管理操作へのアクセス"
"権を持ち、自分のアカウントのみの変更が可能です。"

#: ../nethsm/_tutorial.rst:18
#: ../nethsm/_tutorial.rst:18
msgid "*R-Metrics*: A user account with this Role has access to read-only metrics operations only."
msgstr "*R-Metrics*です。このロールを持つユーザーアカウントは、読み取り専用のメトリクス操作にのみアクセスできます。"

#: ../nethsm/_tutorial.rst:20
#: ../nethsm/_tutorial.rst:20
msgid "*R-Backup*: A user account with this Role has access to the operations required to initiate a system backup only."
msgstr "*R-Backup*。この役割を持つユーザーアカウントは、システムのバックアップを開始するために必要な操作にのみアクセスできます。"

#: ../nethsm/_tutorial.rst:23
#: ../nethsm/_tutorial.rst:23
msgid "Note: In a future release another Role will be implemented which is allowed to /keys/ POST, /keys/generate POST, /keys/{KeyID} PUT & DELETE, /keys/{KeyID}/cert PUT & DELETE in addition to what R-Operator is allowed to do."
msgstr ""
"注：将来のリリースでは、R-Operatorに加えて、/keys/POST、/keys/generate POST、/keys/{KeyID}/cert "
"PUT & DELETEを許可する別のRoleが実装される予定です。R-Operatorができることに加えて、/keys/POST、/keys/"
"{KeyID}/cert PUT & DELETEができる別のRoleが実装される予定です。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Create a User"
msgstr "ユーザーの作成"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "Now create a new user with the operator role that can be used to sign and decrypt data.  Note that the NetHSM assigns a random user ID if we don’t specify it."
msgstr ""
"ここで、データの署名と復号化に使用できる operator ロールを持つ新しいユーザーを作成します。  "
"なお、ユーザーIDを指定しない場合は、NetHSMがランダムなユーザーIDを割り当てます。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Key Management"
msgstr "キーマネージメント"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "The NetHSM supports RSA, ED25519 and ECDSA keys.  When creating a key, you have to select both the key algorithm and the key mechanisms to use.  RSA keys can be used for decryption (with the modes raw, PKCS #1 and OAEP with MD5, SHA1, SHA224, SHA256, SHA384 or SHA512) and for signatures (with the modes PKCS #1 and PSS with MD5, SHA1, SHA224, SHA256, SHA384 or SHA512).  The other algorithms only support the signature mechanism."
msgstr ""
"NetHSMはRSA、ED25519、ECDSAの鍵をサポートしています。  "
"鍵を作成する際には、使用する鍵アルゴリズムと鍵の仕組みの両方を選択する必要があります。  RSA 鍵は、復号（モードが raw、PKCS #1 および "
"OAEP で MD5、SHA1、SHA224、SHA256、SHA384 または SHA512）および署名（モードが PKCS #1 および PSS で "
"MD5、SHA1、SHA224、SHA256、SHA384 または SHA512）に使用できます。  "
"その他のアルゴリズムは、署名メカニズムのみをサポートしています。"

#: ../nethsm/_tutorial.rst:12
#: ../nethsm/_tutorial.rst:12
msgid "For a complete list of available key algorithms and key mechanisms, see the API documentation for the KeyAlgorithm_ and KeyMechanism_ types."
msgstr ""
"使用可能なキーアルゴリズムとキーメカニズムの完全なリストは、KeyAlgorithm_およびKeyMechanism_タイプのAPIドキュメントを参照して"
"ください。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Generate Keys"
msgstr "キーの生成"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "In this guide, we want to use an RSA key to decrypt data using PKCS #1 and to sign data with PSS using SHA256.  So let’s generate a new key on the NetHSM. Make sure to use the ``RSA`` algorithm and to select the ``RSA_Signature_PSS_SHA256`` and ``RSA_Decryption_PKCS1`` key mechanisms.  If you don’t specify a key ID, the NetHSM will generate a random ID for the new key."
msgstr ""
"このガイドでは、PKCS #1 を使用してデータを復号化し、SHA256 を使用して PSS でデータに署名するために RSA 鍵を使用したいと思います。"
"  そこで、NetHSMで新しい鍵を生成してみましょう。必ず``RSA``のアルゴリズムを使用し、``RSA_Signature_PSS_SHA256``"
"と``RSA_Decryption_PKCS1``のキーメカニズムを選択してください。  "
"キーIDを指定しない場合、NetHSMは新しいキーのためにランダムなIDを生成します。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Import Keys"
msgstr "インポートキー"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "Instead of generating a key on the NetHSM, you can also import existing private keys into the NetHSM:"
msgstr "NetHSM上で鍵を生成するのではなく、既存の秘密鍵をNetHSMにインポートすることもできます。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "List Keys"
msgstr "リストキー"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "To make sure that the key has been created and has the correct algorithm and mechanism settings, we can query all keys on the NetHSM:"
msgstr "鍵が作成され、正しいアルゴリズムとメカニズムの設定がなされていることを確認するために、NetHSM上のすべての鍵を照会することができます。"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "Show Key Details"
msgstr "キーの詳細を表示"

#: ../nethsm/_tutorial.rst:7
#: ../nethsm/_tutorial.rst:7
msgid "We can also query the public key of the generated key pair:"
msgstr "また、生成されたキーペアの公開鍵を照会することもできます。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "To be able to use the key with ``openssl``, we export it as a PEM file and store it as ``public.pem``:"
msgstr "この鍵を``openssl``で使えるようにするために、PEMファイルとしてエクスポートし、``public.pem``として保存します。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "We can inspect the key with ``openssl`` and use it for encryption or signature verification (as described in the next section):"
msgstr "``openssl``でキーを検査し、暗号化や署名の検証に使用することができます（次のセクションで説明します）。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Key Certificates"
msgstr "重要な証明書"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "It is possible to set and query certificates for the keys stored on a NetHSM instance:"
msgstr "NetHSM インスタンスに保存されている鍵に対して、証明書の設定や照会を行うことができます。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Key Certificate Signing Requests"
msgstr "鍵証明書の署名要求"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "The NetHSM supports generating Certificate Signing Requests (CSR) for the stored keys:"
msgstr "NetHSMは、保存された鍵に対するCSR（Certificate Signing Request）の生成をサポートしています。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Key Operations"
msgstr "主要業務"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Decryption"
msgstr "復号化"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "We can encrypt data for the key stored on the NetHSM using ``openssl``. (``public.pem`` is the public key file that we created in the `Show Key Details`_ section.)"
msgstr ""
"``openssl``を使って、NetHSMに保存されている鍵のデータを暗号化することができます。(``public.pem``は、`Show Key "
"Details`_の項で作成した公開鍵ファイルです)。"

#: ../nethsm/_tutorial.rst:15
#: ../nethsm/_tutorial.rst:15
msgid "Now we can use the NetHSM to decrypt the data:"
msgstr "あとは、NetHSMを使ってデータを復号化します。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
#: ../nethsm/pkcs11.rst:34
msgid "Signing"
msgstr "サイン"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "Similarily, we can sign data using the key on the NetHSM.  For RSA and ECDSA, we have to calculate a digest first:"
msgstr "同様に、NetHSMの鍵を使ってデータに署名することもできます。  RSAやECDSAでは、まずダイジェストを計算する必要があります。"

#: ../nethsm/_tutorial.rst:13
#: ../nethsm/_tutorial.rst:13
msgid "Then we can create a signature from this digest using the NetHSM:"
msgstr "そして、このダイジェストからNetHSMを使って署名を作成します。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "And then use ``openssl`` to verify the signature:"
msgstr "そして、``openssl``で署名を検証します。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Backups"
msgstr "バックアップ"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "It is possible to crate a backup of the NetHSM that captures both the configuration and the stored keys.  In order to create a backup, you first have to set a backup passphrase that is used to encrypt the backup file:"
msgstr ""
"設定と保存された鍵の両方を取得するために、NetHSMのバックアップを作成することができます。  "
"バックアップを作成するためには、まず、バックアップファイルの暗号化に使用されるバックアップパスフレーズを設定する必要があります。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "Now you have to create a user with the *R-Backup* role:"
msgstr "ここで、*R-Backup*ロールを持つユーザーを作成しなければなりません。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "Then can you generate the backup and write it to a file:"
msgstr "そして、バックアップを生成し、ファイルに書き込むことができます。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "This backup file can be restored on an unprovisioned NetHSM instance:"
msgstr "このバックアップファイルは、プロビジョニングされていないNetHSMインスタンスにリストアすることができます。"

#: ../nethsm/_tutorial.rst:3
#: ../nethsm/_tutorial.rst:3
msgid "Updates"
msgstr "アップデート"

#: ../nethsm/_tutorial.rst:5
#: ../nethsm/_tutorial.rst:5
msgid "Updates for the NetHSM can be installed in a two-step process.  First you have to upload the update image to the NetHSM.  The image is then checked and validated.  If the validation is successful, the release notes for the update are returned by the NetHSM:"
msgstr ""
"NetHSMのアップデートは、2段階のプロセスでインストールできます。  まず、アップデートのイメージをNetHSMにアップロードする必要があります。  "
"その後、イメージがチェックされ、検証されます。  検証が成功した場合、アップデートのリリースノートがNetHSMから返されます。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "If you want to continue with the installation, you can now commit the update:"
msgstr "インストールを続行する場合は、アップデートをコミットすることができます。"

#: ../nethsm/_tutorial.rst:2
#: ../nethsm/_tutorial.rst:2
msgid "Alternatively, you can cancel the update:"
msgstr "また、アップデートをキャンセルすることもできます。"

#: ../nethsm/cli.rst:2
msgid "Accessing a NetHSM with the nitropy command line tool"
msgstr "コマンドラインツール「nitropy」によるNetHSMへのアクセス"

#: ../nethsm/cli.rst:6
msgid "This tutorial demonstrates how to access the NetHMS via `nitropy <https://github.com/Nitrokey/pynitrokey>`_ command line tool, which you need to download and install."
msgstr ""
"このチュートリアルでは、`nitropy <https://github.com/Nitrokey/"
"pynitrokey>`_コマンドラインツールを使ってNetHMSにアクセスする方法を説明していますので、ダウンロードしてインストールする必要があります。"

#: ../nethsm/cli.rst:14
msgid "If you use a NetHSM demo instance with a self-signed certificate, for example using the Docker image, you will have to use the ``--no-verify-tls`` option for ``nitropy`` to skip the certificate check."
msgstr ""
"Dockerイメージなどを使用して自己署名証明書付きのNetHSMデモインスタンスを使用する場合は、``--no-verify-"
"tls``オプションで``nitropy``を使用して、証明書のチェックを省略する必要があります。"

#: ../nethsm/index.rst:2
msgid "NetHSM"
msgstr "NetHSM"

#: ../nethsm/index.rst:7
msgid "Getting Started"
msgstr "はじめに"

#: ../nethsm/index.rst:9
msgid "Connect the NetHSM's ETH3 port with the network. Don't use the ETH0 port because it allows wider system access."
msgstr "NetHSM'のETH3ポートをネットワークに接続します。ETH0ポートはシステムへのアクセス範囲が広くなるので使用しないでください。"

#: ../nethsm/index.rst:14
msgid "The NetHSM appliance is available at address 192.168.1.1. Access and initialize the NetHSM using `nitropy command line tool <cli.html>`_. Alternatively, the `REST API <api.html>`_ and `PKCS#11 driver <pkcs11.html>`_ can be used."
msgstr ""
"NetHSMアプライアンスは192.168.1.1のアドレスで利用可能です。`nitropyコマンドラインツール<cli."
"html>`_を使用してNetHSMにアクセスし、初期化します。また、`REST API <api.html>`_や`PKCS#11ドライバー "
"<pkcs11.html>`_を使用することもできます。"

#: ../nethsm/index.rst:17
msgid "Development and Testing"
msgstr "開発とテスト"

#: ../nethsm/index.rst:19
msgid "A public NetHSM demo instance is available at `nethsmdemo.nitrokey.com <https://nethsmdemo.nitrokey.com>`_."
msgstr ""
"公開されているNetHSMのデモ・インスタンスは、`nethsmdemo.nitrokey.com <https://nethsmdemo."
"nitrokey.com>`_で利用可能です。"

#: ../nethsm/index.rst:21
msgid "Alternatively you can run the `NetHSM Docker container <https://hub.docker.com/r/nitrokey/nethsm>`_ locally. The NetHSM container requires nested virtualization for strong separation with other containers. Thus, to start a NetHSM container you need a Linux host with /dev/kvm available. Execute this command:"
msgstr ""
"また、NetHSMのDockerコンテナ`をローカルで実行することもできます。NetHSMコンテナは、他のコンテナと強力に分離するために、ネストされた仮想"
"化を必要とします。そのため、NetHSMコンテナを起動するには、/dev/kvmが利用可能なLinuxホストが必要です。以下のコマンドを実行します。"

#: ../nethsm/index.rst:31
msgid "Integration to Custom Application"
msgstr "カスタムアプリケーションとの連携"

#: ../nethsm/index.rst:33
msgid "To integrate the NetHSM into own custom applications client libraries are available for almost all programming languages, including JavaScript, C++ and Python for example. Therefore we recommend using `OpenAPI Generator <https://github.com/OpenAPITools/openapi-generator>`_."
msgstr ""
"NetHSMを独自のカスタムアプリケーションに統合するために、JavaScript、C++、Pythonなど、ほとんどすべてのプログラミング言語用のクライ"
"アントライブラリが用意されています。そこで、`OpenAPI Generator <https://github.com/OpenAPITools/"
"openapi-generator>`_の使用をお勧めします。"

#: ../nethsm/index.rst:35
msgid "To list all the available languages, you enter"
msgstr "利用可能なすべての言語をリストアップするには、次のように入力します。"

#: ../nethsm/index.rst:41
msgid "Then you can generate the NetHSM client for your programming language like this:"
msgstr "そして、次のようにして、プログラミング言語用のNetHSMクライアントを生成します。"

#: ../nethsm/index.rst:49
msgid "The generated client code, in this example JavaScript, will be created in the ``./out/`` directory. This folder also contains the necessary documentation how to use it."
msgstr ""
"生成されたクライアントコード（この例ではJavaScript）は、``./out/"
"``ディレクトリに作成されます。このフォルダには、使用方法の必要なドキュメントも含まれています。"

#: ../nethsm/pkcs11.rst:2
msgid "This driver is still an early Proof of Concept implementation that only implements the functions that are necessary for operating TLS servers like for example an HTTPS server."
msgstr ""
"このドライバーはまだ初期のProof of "
"Concept（概念実証）であり、例えばHTTPSサーバーのようなTLSサーバーを運用するために必要な機能のみを実装しています。"

#: ../nethsm/pkcs11.rst:6
msgid "Accessing a NetHSM using the PKCS#11 driver"
msgstr "PKCS#11ドライバーを使用したNetHSMへのアクセス"

#: ../nethsm/pkcs11.rst:10
msgid "Download the `PKCS#11 driver <https://github.com/Nitrokey/nethsm-pkcs11>`_ for NetHSM."
msgstr ""
"NetHSM用の`PKCS#11ドライバー<https://github.com/Nitrokey/nethsm-pkcs11>`_をダウンロードします。"

#: ../nethsm/pkcs11.rst:11
msgid "Modify the configuration file ``p11nethsm.conf`` according to your setup (e.g. address, operator name) and store it in ``$HOME/.nitrokey``, ``/etc/nitrokey/``, or in the folder where your application is executed."
msgstr ""
"設定ファイル ``p11nethsm.conf`` を設定に応じて変更します。``$HOME/.nitrokey``、``/etc/nitrokey/"
"``、またはアプリケーションが実行されるフォルダに保存してください。"

#: ../nethsm/pkcs11.rst:16
msgid "Decrypting"
msgstr "復号化"

#: ../nethsm/pkcs11.rst:18
msgid "After creating a key (here: ID 42) with the according mechanism, you can use it for decryption:"
msgstr "このような仕組みで鍵（ここではID42）を作成すると、それを使って復号することができます。"

#: ../nethsm/pkcs11.rst:36
msgid "After creating a key (here: ID 23) with the according mechanism, you can use it for decryption:"
msgstr "このような仕組みで鍵（ここではID23）を作成すると、それを使って復号することができます。"
